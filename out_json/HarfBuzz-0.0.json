{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": [
            {
                "@name": "GObject",
                "@version": "2.0"
            },
            {
                "@name": "freetype2",
                "@version": "2.0"
            }
        ],
        "package": {
            "@name": "harfbuzz-gobject"
        },
        "c:include": {
            "@name": "hb-gobject.h"
        },
        "namespace": {
            "@name": "HarfBuzz",
            "@version": "0.0",
            "@shared-library": "libharfbuzz.so.0,libharfbuzz-gobject.so.0",
            "@c:identifier-prefixes": "hb_",
            "@c:symbol-prefixes": "hb,hb_gobject",
            "alias": [
                {
                    "@name": "bool_t",
                    "@c:type": "hb_bool_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "91",
                        "#text": "Data type for booleans."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "97"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "int"
                    }
                },
                {
                    "@name": "codepoint_t",
                    "@c:type": "hb_codepoint_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "99",
                        "#text": "Data type for holding Unicode codepoints. Also\nused to hold glyph IDs."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "106"
                    },
                    "type": {
                        "@name": "guint32",
                        "@c:type": "uint32_t"
                    }
                },
                {
                    "@name": "color_t",
                    "@c:type": "hb_color_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "861",
                        "#text": "Data type for holding color values. Colors are eight bits per\nchannel RGB plus alpha transparency."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "869"
                    },
                    "type": {
                        "@name": "guint32",
                        "@c:type": "uint32_t"
                    }
                },
                {
                    "@name": "font_get_font_h_extents_func_t",
                    "@c:type": "hb_font_get_font_h_extents_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "163",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the extents for a font, for horizontal-direction\ntext segments. Extents must be returned in an #hb_glyph_extents output\nparameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "173"
                    },
                    "type": {
                        "@name": "font_get_font_extents_func_t",
                        "@c:type": "hb_font_get_font_extents_func_t"
                    }
                },
                {
                    "@name": "font_get_font_v_extents_func_t",
                    "@c:type": "hb_font_get_font_v_extents_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "175",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the extents for a font, for vertical-direction\ntext segments. Extents must be returned in an #hb_glyph_extents output\nparameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "185"
                    },
                    "type": {
                        "@name": "font_get_font_extents_func_t",
                        "@c:type": "hb_font_get_font_extents_func_t"
                    }
                },
                {
                    "@name": "font_get_glyph_h_advance_func_t",
                    "@c:type": "hb_font_get_glyph_h_advance_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "280",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the advance for a specified glyph, in\nhorizontal-direction text segments. Advances must be returned in\nan #hb_position_t output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "290"
                    },
                    "type": {
                        "@name": "font_get_glyph_advance_func_t",
                        "@c:type": "hb_font_get_glyph_advance_func_t"
                    }
                },
                {
                    "@name": "font_get_glyph_h_advances_func_t",
                    "@c:type": "hb_font_get_glyph_h_advances_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "328",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the advances for a sequence of glyphs, in\nhorizontal-direction text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "337"
                    },
                    "type": {
                        "@name": "font_get_glyph_advances_func_t",
                        "@c:type": "hb_font_get_glyph_advances_func_t"
                    }
                },
                {
                    "@name": "font_get_glyph_h_kerning_func_t",
                    "@c:type": "hb_font_get_glyph_h_kerning_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "412",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the kerning-adjustment value for a glyph-pair in\nthe specified font, for horizontal text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "421"
                    },
                    "type": {
                        "@name": "font_get_glyph_kerning_func_t",
                        "@c:type": "hb_font_get_glyph_kerning_func_t"
                    }
                },
                {
                    "@name": "font_get_glyph_h_origin_func_t",
                    "@c:type": "hb_font_get_glyph_h_origin_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "373",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the (X,Y) coordinates (in font units) of the\norigin for a glyph, for horizontal-direction text segments. Each\ncoordinate must be returned in an #hb_position_t output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "383"
                    },
                    "type": {
                        "@name": "font_get_glyph_origin_func_t",
                        "@c:type": "hb_font_get_glyph_origin_func_t"
                    }
                },
                {
                    "@name": "font_get_glyph_v_advance_func_t",
                    "@c:type": "hb_font_get_glyph_v_advance_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "292",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the advance for a specified glyph, in\nvertical-direction text segments. Advances must be returned in\nan #hb_position_t output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "302"
                    },
                    "type": {
                        "@name": "font_get_glyph_advance_func_t",
                        "@c:type": "hb_font_get_glyph_advance_func_t"
                    }
                },
                {
                    "@name": "font_get_glyph_v_advances_func_t",
                    "@c:type": "hb_font_get_glyph_v_advances_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "339",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the advances for a sequence of glyphs, in\nvertical-direction text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "348"
                    },
                    "type": {
                        "@name": "font_get_glyph_advances_func_t",
                        "@c:type": "hb_font_get_glyph_advances_func_t"
                    }
                },
                {
                    "@name": "font_get_glyph_v_kerning_func_t",
                    "@c:type": "hb_font_get_glyph_v_kerning_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "215",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the kerning-adjustment value for a glyph-pair in\nthe specified font, for vertical text segments."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "224"
                    },
                    "type": {
                        "@name": "font_get_glyph_kerning_func_t",
                        "@c:type": "hb_font_get_glyph_kerning_func_t"
                    }
                },
                {
                    "@name": "font_get_glyph_v_origin_func_t",
                    "@c:type": "hb_font_get_glyph_v_origin_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "385",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the (X,Y) coordinates (in font units) of the\norigin for a glyph, for vertical-direction text segments. Each coordinate\nmust be returned in an #hb_position_t output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "395"
                    },
                    "type": {
                        "@name": "font_get_glyph_origin_func_t",
                        "@c:type": "hb_font_get_glyph_origin_func_t"
                    }
                },
                {
                    "@name": "mask_t",
                    "@c:type": "hb_mask_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "116",
                        "#text": "Data type for bitmasks."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "122"
                    },
                    "type": {
                        "@name": "guint32",
                        "@c:type": "uint32_t"
                    }
                },
                {
                    "@name": "ot_name_id_t",
                    "@c:type": "hb_ot_name_id_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-name.h",
                        "@line": "37",
                        "#text": "An integral type representing an OpenType 'name' table name identifier.\nThere are predefined name IDs, as well as name IDs return from other\nAPI.  These can be used to fetch name strings from a font face.\n\nFor more information on these fields, see the\n[OpenType spec](https://docs.microsoft.com/en-us/typography/opentype/spec/name#name-ids)."
                    },
                    "source-position": {
                        "@filename": "hb-ot-name.h",
                        "@line": "109"
                    },
                    "type": {
                        "@name": "guint",
                        "@c:type": "unsigned int"
                    }
                },
                {
                    "@name": "position_t",
                    "@c:type": "hb_position_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "107",
                        "#text": "Data type for holding a single coordinate value.\nContour points and other multi-dimensional data are\nstored as tuples of #hb_position_t's."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "115"
                    },
                    "type": {
                        "@name": "gint32",
                        "@c:type": "int32_t"
                    }
                },
                {
                    "@name": "tag_t",
                    "@c:type": "hb_tag_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "146",
                        "#text": "Data type for tag identifiers. Tags are four\nbyte integers, each byte representing a character.\n\nTags are used to identify tables, design-variation axes,\nscripts, languages, font features, and baselines with\nhuman-readable names."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "157"
                    },
                    "type": {
                        "@name": "guint32",
                        "@c:type": "uint32_t"
                    }
                }
            ],
            "constant": [
                {
                    "@name": "AAT_LAYOUT_NO_SELECTOR_INDEX",
                    "@value": "65535",
                    "@c:type": "HB_AAT_LAYOUT_NO_SELECTOR_INDEX",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.h",
                        "@line": "751",
                        "#text": "Used when getting or setting AAT feature selectors. Indicates that\nthere is no selector index corresponding to the selector of interest."
                    },
                    "source-position": {
                        "@filename": "hb-aat-layout.h",
                        "@line": "758"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "BUFFER_REPLACEMENT_CODEPOINT_DEFAULT",
                    "@value": "65533",
                    "@c:type": "HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT",
                    "@version": "0.9.31",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "459",
                        "#text": "The default code point for replacing invalid characters in a given encoding.\nSet to U+FFFD REPLACEMENT CHARACTER."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "463"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "FEATURE_GLOBAL_START",
                    "@value": "0",
                    "@c:type": "HB_FEATURE_GLOBAL_START",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "787",
                        "#text": "Special setting for #hb_feature_t.start to apply the feature from the start\nof the buffer."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "795"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "LANGUAGE_INVALID",
                    "@value": "0",
                    "@c:type": "HB_LANGUAGE_INVALID",
                    "@version": "0.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "317",
                        "#text": "An unset #hb_language_t."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "324"
                    },
                    "type": {
                        "@name": "language_t",
                        "@c:type": "hb_language_t"
                    }
                },
                {
                    "@name": "MAP_VALUE_INVALID",
                    "@value": "4294967295",
                    "@c:type": "HB_MAP_VALUE_INVALID",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.h",
                        "@line": "39",
                        "#text": "Unset #hb_map_t value."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "46"
                    },
                    "type": {
                        "@name": "codepoint_t",
                        "@c:type": "hb_codepoint_t"
                    }
                },
                {
                    "@name": "OT_LAYOUT_DEFAULT_LANGUAGE_INDEX",
                    "@value": "65535",
                    "@c:type": "HB_OT_LAYOUT_DEFAULT_LANGUAGE_INDEX",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.h",
                        "@line": "200",
                        "#text": "Special value for language index indicating default or unsupported language."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "205"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "OT_LAYOUT_NO_FEATURE_INDEX",
                    "@value": "65535",
                    "@c:type": "HB_OT_LAYOUT_NO_FEATURE_INDEX",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.h",
                        "@line": "194",
                        "#text": "Special value for feature index indicating unsupported feature."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "199"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "OT_LAYOUT_NO_SCRIPT_INDEX",
                    "@value": "65535",
                    "@c:type": "HB_OT_LAYOUT_NO_SCRIPT_INDEX",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.h",
                        "@line": "188",
                        "#text": "Special value for script index indicating unsupported script."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "193"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "OT_LAYOUT_NO_VARIATIONS_INDEX",
                    "@value": "4294967295",
                    "@c:type": "HB_OT_LAYOUT_NO_VARIATIONS_INDEX",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.h",
                        "@line": "206",
                        "#text": "Special value for variations index indicating unsupported variation."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "211"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "OT_MAX_TAGS_PER_LANGUAGE",
                    "@value": "3",
                    "@c:type": "HB_OT_MAX_TAGS_PER_LANGUAGE",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.h",
                        "@line": "100",
                        "#text": "Maximum number of OpenType tags that can correspond to a give #hb_language_t."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "107"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "OT_MAX_TAGS_PER_SCRIPT",
                    "@value": "3",
                    "@c:type": "HB_OT_MAX_TAGS_PER_SCRIPT",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.h",
                        "@line": "92",
                        "#text": "Maximum number of OpenType tags that can correspond to a give #hb_script_t."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "99"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "OT_VAR_NO_AXIS_INDEX",
                    "@value": "4294967295",
                    "@c:type": "HB_OT_VAR_NO_AXIS_INDEX",
                    "@version": "1.4.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "93",
                        "#text": "Do not use."
                    },
                    "source-position": {
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "101"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "SET_VALUE_INVALID",
                    "@value": "4294967295",
                    "@c:type": "HB_SET_VALUE_INVALID",
                    "@version": "0.9.21",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.h",
                        "@line": "39",
                        "#text": "Unset #hb_set_t value."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "46"
                    },
                    "type": {
                        "@name": "codepoint_t",
                        "@c:type": "hb_codepoint_t"
                    }
                },
                {
                    "@name": "UNICODE_MAX",
                    "@value": "1114111",
                    "@c:type": "HB_UNICODE_MAX",
                    "@version": "1.9.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "43",
                        "#text": "Maximum valid Unicode code point."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "50"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "UNICODE_MAX_DECOMPOSITION_LEN",
                    "@value": "19",
                    "@c:type": "HB_UNICODE_MAX_DECOMPOSITION_LEN",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "181",
                        "#text": "See Unicode 6.1 for details on the maximum decomposition length."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "188"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "VERSION_MAJOR",
                    "@value": "5",
                    "@c:type": "HB_VERSION_MAJOR",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-version.h",
                        "@line": "39",
                        "#text": "The major component of the library version available at compile-time."
                    },
                    "source-position": {
                        "@filename": "hb-version.h",
                        "@line": "44"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "VERSION_MICRO",
                    "@value": "0",
                    "@c:type": "HB_VERSION_MICRO",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-version.h",
                        "@line": "51",
                        "#text": "The micro component of the library version available at compile-time."
                    },
                    "source-position": {
                        "@filename": "hb-version.h",
                        "@line": "56"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "VERSION_MINOR",
                    "@value": "2",
                    "@c:type": "HB_VERSION_MINOR",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-version.h",
                        "@line": "45",
                        "#text": "The minor component of the library version available at compile-time."
                    },
                    "source-position": {
                        "@filename": "hb-version.h",
                        "@line": "50"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "VERSION_STRING",
                    "@value": "5.2.0",
                    "@c:type": "HB_VERSION_STRING",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-version.h",
                        "@line": "58",
                        "#text": "A string literal containing the library version available at compile-time."
                    },
                    "source-position": {
                        "@filename": "hb-version.h",
                        "@line": "63"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                }
            ],
            "function-macro": [
                {
                    "@name": "COLOR",
                    "@c:identifier": "HB_COLOR",
                    "@version": "2.1.0",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "871",
                        "#text": "Constructs an #hb_color_t from four integers."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "882"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "b",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.h",
                                    "@line": "873",
                                    "#text": "blue channel value"
                                }
                            },
                            {
                                "@name": "g",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.h",
                                    "@line": "874",
                                    "#text": "green channel value"
                                }
                            },
                            {
                                "@name": "r",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.h",
                                    "@line": "875",
                                    "#text": "red channel value"
                                }
                            },
                            {
                                "@name": "a",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.h",
                                    "@line": "876",
                                    "#text": "alpha channel value"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "DEPRECATED_FOR",
                    "@c:identifier": "HB_DEPRECATED_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "81"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DIRECTION_IS_BACKWARD",
                    "@c:identifier": "HB_DIRECTION_IS_BACKWARD",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "280",
                        "#text": "Tests whether a text direction moves backward (from right to left, or from\nbottom to top). Requires that the direction be valid."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "288"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dir",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "282",
                                "#text": "#hb_direction_t to test"
                            }
                        }
                    }
                },
                {
                    "@name": "DIRECTION_IS_FORWARD",
                    "@c:identifier": "HB_DIRECTION_IS_FORWARD",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "271",
                        "#text": "Tests whether a text direction moves forward (from left to right, or from\ntop to bottom). Requires that the direction be valid."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "279"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dir",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "273",
                                "#text": "#hb_direction_t to test"
                            }
                        }
                    }
                },
                {
                    "@name": "DIRECTION_IS_HORIZONTAL",
                    "@c:identifier": "HB_DIRECTION_IS_HORIZONTAL",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "253",
                        "#text": "Tests whether a text direction is horizontal. Requires\nthat the direction be valid."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "261"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dir",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "255",
                                "#text": "#hb_direction_t to test"
                            }
                        }
                    }
                },
                {
                    "@name": "DIRECTION_IS_VALID",
                    "@c:identifier": "HB_DIRECTION_IS_VALID",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "244",
                        "#text": "Tests whether a text direction is valid."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "251"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dir",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "246",
                                "#text": "#hb_direction_t to test"
                            }
                        }
                    }
                },
                {
                    "@name": "DIRECTION_IS_VERTICAL",
                    "@c:identifier": "HB_DIRECTION_IS_VERTICAL",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "262",
                        "#text": "Tests whether a text direction is vertical. Requires\nthat the direction be valid."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "270"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dir",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "264",
                                "#text": "#hb_direction_t to test"
                            }
                        }
                    }
                },
                {
                    "@name": "DIRECTION_REVERSE",
                    "@c:identifier": "HB_DIRECTION_REVERSE",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "289",
                        "#text": "Reverses a text direction. Requires that the direction\nbe valid."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "297"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dir",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "291",
                                "#text": "#hb_direction_t to reverse"
                            }
                        }
                    }
                },
                {
                    "@name": "TAG",
                    "@c:identifier": "HB_TAG",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "159",
                        "#text": "Constructs an #hb_tag_t from four character literals."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "169"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "c1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.h",
                                    "@line": "161",
                                    "#text": "1st character of the tag"
                                }
                            },
                            {
                                "@name": "c2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.h",
                                    "@line": "162",
                                    "#text": "2nd character of the tag"
                                }
                            },
                            {
                                "@name": "c3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.h",
                                    "@line": "163",
                                    "#text": "3rd character of the tag"
                                }
                            },
                            {
                                "@name": "c4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.h",
                                    "@line": "164",
                                    "#text": "4th character of the tag"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "UNTAG",
                    "@c:identifier": "HB_UNTAG",
                    "@version": "0.6.0",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "171",
                        "#text": "Extracts four character literals from an #hb_tag_t."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "180"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "tag",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "173",
                                "#text": "an #hb_tag_t"
                            }
                        }
                    }
                },
                {
                    "@name": "VERSION_ATLEAST",
                    "@c:identifier": "HB_VERSION_ATLEAST",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-version.h",
                        "@line": "65",
                        "#text": "Tests the library version at compile-time against a minimum value,\nas three integer components."
                    },
                    "source-position": {
                        "@filename": "hb-version.h",
                        "@line": "74"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-version.h",
                                    "@line": "67",
                                    "#text": "the major component of the version number"
                                }
                            },
                            {
                                "@name": "minor",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-version.h",
                                    "@line": "68",
                                    "#text": "the minor component of the version number"
                                }
                            },
                            {
                                "@name": "micro",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-version.h",
                                    "@line": "69",
                                    "#text": "the micro component of the version number"
                                }
                            }
                        ]
                    }
                }
            ],
            "record": [
                {
                    "@name": "aat_layout_feature_selector_info_t",
                    "@c:type": "hb_aat_layout_feature_selector_info_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.h",
                        "@line": "735",
                        "#text": "Structure representing a setting for an #hb_aat_layout_feature_type_t."
                    },
                    "source-position": {
                        "@filename": "hb-aat-layout.h",
                        "@line": "749"
                    },
                    "field": [
                        {
                            "@name": "name_id",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "737",
                                "#text": "The selector's name identifier"
                            },
                            "type": {
                                "@name": "ot_name_id_t",
                                "@c:type": "hb_ot_name_id_t"
                            }
                        },
                        {
                            "@name": "enable",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "738",
                                "#text": "The value to turn the selector on"
                            },
                            "type": {
                                "@name": "aat_layout_feature_selector_t",
                                "@c:type": "hb_aat_layout_feature_selector_t"
                            }
                        },
                        {
                            "@name": "disable",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "739",
                                "#text": "The value to turn the selector off"
                            },
                            "type": {
                                "@name": "aat_layout_feature_selector_t",
                                "@c:type": "hb_aat_layout_feature_selector_t"
                            }
                        },
                        {
                            "@name": "reserved",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "guint",
                                "@c:type": "unsigned int"
                            }
                        }
                    ]
                },
                {
                    "@name": "blob_t",
                    "@c:type": "hb_blob_t",
                    "@glib:type-name": "hb_blob_t",
                    "@glib:get-type": "hb_gobject_blob_get_type",
                    "@c:symbol-prefix": "gobject_blob",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.h",
                        "@line": "76",
                        "#text": "Data type for blobs. A blob wraps a chunk of binary\ndata and facilitates its lifecycle management between\na client program and HarfBuzz."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "84"
                    }
                },
                {
                    "@name": "buffer_t",
                    "@c:type": "hb_buffer_t",
                    "@glib:type-name": "hb_buffer_t",
                    "@glib:get-type": "hb_gobject_buffer_get_type",
                    "@c:symbol-prefix": "gobject_buffer",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "243",
                        "#text": "The main structure holding the input text and its properties before shaping,\nand output glyphs and their information after shaping."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "250"
                    }
                },
                {
                    "@name": "draw_funcs_t",
                    "@c:type": "hb_draw_funcs_t",
                    "@version": "4.0.0",
                    "@glib:type-name": "hb_draw_funcs_t",
                    "@glib:get-type": "hb_gobject_draw_funcs_get_type",
                    "@c:symbol-prefix": "gobject_draw_funcs",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "76",
                        "#text": "Glyph draw callbacks.\n\n#hb_draw_move_to_func_t, #hb_draw_line_to_func_t and\n#hb_draw_cubic_to_func_t calls are necessary to be defined but we translate\n#hb_draw_quadratic_to_func_t calls to #hb_draw_cubic_to_func_t if the\ncallback isn't defined."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "89"
                    }
                },
                {
                    "@name": "draw_state_t",
                    "@c:type": "hb_draw_state_t",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "37",
                        "#text": "Current drawing state."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "66"
                    },
                    "field": [
                        {
                            "@name": "path_open",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.h",
                                "@line": "39",
                                "#text": "Whether there is an open path"
                            },
                            "type": {
                                "@name": "bool_t",
                                "@c:type": "hb_bool_t"
                            }
                        },
                        {
                            "@name": "path_start_x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.h",
                                "@line": "40",
                                "#text": "X component of the start of current path"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "path_start_y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.h",
                                "@line": "41",
                                "#text": "Y component of the start of current path"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "current_x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.h",
                                "@line": "42",
                                "#text": "X component of current point"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "current_y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.h",
                                "@line": "43",
                                "#text": "Y component of current point"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "reserved1",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_num_t",
                                "@c:type": "hb_var_num_t"
                            }
                        },
                        {
                            "@name": "reserved2",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_num_t",
                                "@c:type": "hb_var_num_t"
                            }
                        },
                        {
                            "@name": "reserved3",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_num_t",
                                "@c:type": "hb_var_num_t"
                            }
                        },
                        {
                            "@name": "reserved4",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_num_t",
                                "@c:type": "hb_var_num_t"
                            }
                        },
                        {
                            "@name": "reserved5",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_num_t",
                                "@c:type": "hb_var_num_t"
                            }
                        },
                        {
                            "@name": "reserved6",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_num_t",
                                "@c:type": "hb_var_num_t"
                            }
                        },
                        {
                            "@name": "reserved7",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_num_t",
                                "@c:type": "hb_var_num_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "face_t",
                    "@c:type": "hb_face_t",
                    "@glib:type-name": "hb_face_t",
                    "@glib:get-type": "hb_gobject_face_get_type",
                    "@c:symbol-prefix": "gobject_face",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.h",
                        "@line": "49",
                        "#text": "Data type for holding font faces."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "55"
                    }
                },
                {
                    "@name": "feature_t",
                    "@c:type": "hb_feature_t",
                    "@glib:type-name": "hb_feature_t",
                    "@glib:get-type": "hb_gobject_feature_get_type",
                    "@c:symbol-prefix": "gobject_feature",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "807",
                        "#text": "The #hb_feature_t is the structure that holds information about requested\nfeature application. The feature will be applied with the given value to all\nglyphs which are in clusters between @start (inclusive) and @end (exclusive).\nSetting start to #HB_FEATURE_GLOBAL_START and end to #HB_FEATURE_GLOBAL_END\nspecifies that the feature always applies to the entire buffer."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "827"
                    },
                    "field": [
                        {
                            "@name": "tag",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "809",
                                "#text": "The #hb_tag_t tag of the feature"
                            },
                            "type": {
                                "@name": "tag_t",
                                "@c:type": "hb_tag_t"
                            }
                        },
                        {
                            "@name": "value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "810",
                                "#text": "The value of the feature. 0 disables the feature, non-zero (usually\n1) enables the feature.  For features implemented as lookup type 3 (like\n'salt') the @value is a one based index into the alternates."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "uint32_t"
                            }
                        },
                        {
                            "@name": "start",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "813",
                                "#text": "the cluster to start applying this feature setting (inclusive)."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "unsigned int"
                            }
                        },
                        {
                            "@name": "end",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "814",
                                "#text": "the cluster to end applying this feature setting (exclusive)."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "unsigned int"
                            }
                        }
                    ],
                    "method": {
                        "@name": "_string",
                        "@c:identifier": "hb_feature_to_string",
                        "@moved-to": "feature_to_string",
                        "@version": "0.9.5",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "983",
                            "#text": "Converts a #hb_feature_t into a `NULL`-terminated string in the format\nunderstood by hb_feature_from_string(). The client in responsible for\nallocating big enough size for @buf, 128 bytes is more than enough."
                        },
                        "source-position": {
                            "@filename": "hb-common.h",
                            "@line": "834"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "feature",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "985",
                                    "#text": "an #hb_feature_t to convert"
                                },
                                "type": {
                                    "@name": "feature_t",
                                    "@c:type": "hb_feature_t*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "buf",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "hb-common.cc",
                                        "@line": "986",
                                        "#text": "output string"
                                    },
                                    "array": {
                                        "@length": "1",
                                        "@zero-terminated": "0",
                                        "@c:type": "char*",
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "char"
                                        }
                                    }
                                },
                                {
                                    "@name": "size",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "hb-common.cc",
                                        "@line": "987",
                                        "#text": "the allocated size of @buf"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "unsigned int"
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "@name": "font_extents_t",
                    "@c:type": "hb_font_extents_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "102",
                        "#text": "Font-wide extent values, measured in font units.\n\nNote that typically @ascender is positive and @descender\nnegative, in coordinate systems that grow up."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "127"
                    },
                    "field": [
                        {
                            "@name": "ascender",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.h",
                                "@line": "104",
                                "#text": "The height of typographic ascenders."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "descender",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.h",
                                "@line": "105",
                                "#text": "The depth of typographic descenders."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "line_gap",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.h",
                                "@line": "106",
                                "#text": "The suggested line-spacing gap."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved9",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved8",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved7",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved6",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved5",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved4",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved3",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved2",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "reserved1",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "font_funcs_t",
                    "@c:type": "hb_font_funcs_t",
                    "@glib:type-name": "hb_font_funcs_t",
                    "@glib:get-type": "hb_gobject_font_funcs_get_type",
                    "@c:symbol-prefix": "gobject_font_funcs",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "53",
                        "#text": "Data type containing a set of virtual methods used for\nworking on #hb_font_t font objects.\n\nHarfBuzz provides a lightweight default function for each of\nthe methods in #hb_font_funcs_t. Client programs can implement\ntheir own replacements for the individual font functions, as\nneeded, and replace the default by calling the setter for a\nmethod."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "66"
                    }
                },
                {
                    "@name": "font_t",
                    "@c:type": "hb_font_t",
                    "@glib:type-name": "hb_font_t",
                    "@glib:get-type": "hb_gobject_font_get_type",
                    "@c:symbol-prefix": "gobject_font",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "40",
                        "#text": "Data type for holding fonts."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "46"
                    }
                },
                {
                    "@name": "glyph_extents_t",
                    "@c:type": "hb_glyph_extents_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "129",
                        "#text": "Glyph extent values, measured in font units.\n\nNote that @height is negative, in coordinate systems that grow up."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "145"
                    },
                    "field": [
                        {
                            "@name": "x_bearing",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.h",
                                "@line": "131",
                                "#text": "Distance from the x-origin to the left extremum of the glyph."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "y_bearing",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.h",
                                "@line": "132",
                                "#text": "Distance from the top extremum of the glyph to the y-origin."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "width",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.h",
                                "@line": "133",
                                "#text": "Distance from the left extremum of the glyph to the right extremum."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "height",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.h",
                                "@line": "134",
                                "#text": "Distance from the top extremum of the glyph to the bottom extremum."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "glyph_info_t",
                    "@c:type": "hb_glyph_info_t",
                    "@glib:type-name": "hb_glyph_info_t",
                    "@glib:get-type": "hb_gobject_glyph_info_get_type",
                    "@c:symbol-prefix": "gobject_glyph_info",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "43",
                        "#text": "The #hb_glyph_info_t is the structure that holds information about the\nglyphs and their relation to input text."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "72"
                    },
                    "field": [
                        {
                            "@name": "codepoint",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "45",
                                "#text": "either a Unicode code point (before shaping) or a glyph index\n            (after shaping)."
                            },
                            "type": {
                                "@name": "codepoint_t",
                                "@c:type": "hb_codepoint_t"
                            }
                        },
                        {
                            "@name": "mask",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "mask_t",
                                "@c:type": "hb_mask_t"
                            }
                        },
                        {
                            "@name": "cluster",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "47",
                                "#text": "the index of the character in the original text that corresponds\n          to this #hb_glyph_info_t, or whatever the client passes to\n          hb_buffer_add(). More than one #hb_glyph_info_t can have the same\n          @cluster value, if they resulted from the same character (e.g. one\n          to many glyph substitution), and when more than one character gets\n          merged in the same glyph (e.g. many to one glyph substitution) the\n          #hb_glyph_info_t will have the smallest cluster value of them.\n          By default some characters are merged into the same cluster\n          (e.g. combining marks have the same cluster as their bases)\n          even if they are separate glyphs, hb_buffer_set_cluster_level()\n          allow selecting more fine-grained cluster handling."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "uint32_t"
                            }
                        },
                        {
                            "@name": "var1",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_int_t",
                                "@c:type": "hb_var_int_t"
                            }
                        },
                        {
                            "@name": "var2",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_int_t",
                                "@c:type": "hb_var_int_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "glyph_position_t",
                    "@c:type": "hb_glyph_position_t",
                    "@glib:type-name": "hb_glyph_position_t",
                    "@glib:get-type": "hb_gobject_glyph_position_get_type",
                    "@c:symbol-prefix": "gobject_glyph_position",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "175",
                        "#text": "The #hb_glyph_position_t is the structure that holds the positions of the\nglyph in both horizontal and vertical directions. All positions in\n#hb_glyph_position_t are relative to the current point."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "199"
                    },
                    "field": [
                        {
                            "@name": "x_advance",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "177",
                                "#text": "how much the line advances after drawing this glyph when setting\n            text in horizontal direction."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "y_advance",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "179",
                                "#text": "how much the line advances after drawing this glyph when setting\n            text in vertical direction."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "x_offset",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "181",
                                "#text": "how much the glyph moves on the X-axis before drawing it, this\n           should not affect how much the line advances."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "y_offset",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "183",
                                "#text": "how much the glyph moves on the Y-axis before drawing it, this\n           should not affect how much the line advances."
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "var",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_int_t",
                                "@c:type": "hb_var_int_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "language_t",
                    "@c:type": "hb_language_t",
                    "@disguised": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "302",
                        "#text": "Data type for languages. Each #hb_language_t corresponds to a BCP 47\nlanguage tag."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "309"
                    },
                    "method": {
                        "@name": "_string",
                        "@c:identifier": "hb_language_to_string",
                        "@moved-to": "language_to_string",
                        "@version": "0.9.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "392",
                            "#text": "Converts an #hb_language_t to a string."
                        },
                        "source-position": {
                            "@filename": "hb-common.h",
                            "@line": "315"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "398",
                                "#text": "A `NULL`-terminated string representing the @language. Must not be freed by\nthe caller."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "language",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "394",
                                    "#text": "The #hb_language_t to convert"
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "map_t",
                    "@c:type": "hb_map_t",
                    "@glib:type-name": "hb_map_t",
                    "@glib:get-type": "hb_gobject_map_get_type",
                    "@c:symbol-prefix": "gobject_map",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.h",
                        "@line": "48",
                        "#text": "Data type for holding integer-to-integer hash maps."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "54"
                    }
                },
                {
                    "@name": "ot_color_layer_t",
                    "@c:type": "hb_ot_color_layer_t",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.h",
                        "@line": "98",
                        "#text": "Pairs of glyph and color index.\n\nA color index of 0xFFFF does not refer to a palette\ncolor, but indicates that the foreground color should\nbe used."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "114"
                    },
                    "field": [
                        {
                            "@name": "glyph",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.h",
                                "@line": "100",
                                "#text": "the glyph ID of the layer"
                            },
                            "type": {
                                "@name": "codepoint_t",
                                "@c:type": "hb_codepoint_t"
                            }
                        },
                        {
                            "@name": "color_index",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.h",
                                "@line": "101",
                                "#text": "the palette color index of the layer"
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "unsigned int"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_math_glyph_part_t",
                    "@c:type": "hb_ot_math_glyph_part_t",
                    "@version": "1.3.3",
                    "@glib:type-name": "hb_ot_math_glyph_part_t",
                    "@glib:get-type": "hb_gobject_ot_math_glyph_part_get_type",
                    "@c:symbol-prefix": "gobject_ot_math_glyph_part",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.h",
                        "@line": "252",
                        "#text": "Data type to hold information for a \"part\" component of a math-variant glyph.\nLarge variants for stretchable math glyphs (such as parentheses) can be constructed\non the fly from parts."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "272"
                    },
                    "field": [
                        {
                            "@name": "glyph",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "254",
                                "#text": "The glyph index of the variant part"
                            },
                            "type": {
                                "@name": "codepoint_t",
                                "@c:type": "hb_codepoint_t"
                            }
                        },
                        {
                            "@name": "start_connector_length",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "255",
                                "#text": "The length of the connector on the starting side of the variant part"
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "end_connector_length",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "256",
                                "#text": "The length of the connector on the ending side of the variant part"
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "full_advance",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "257",
                                "#text": "The total advance of the part"
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "flags",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "258",
                                "#text": "#hb_ot_math_glyph_part_flags_t flags for the part"
                            },
                            "type": {
                                "@name": "ot_math_glyph_part_flags_t",
                                "@c:type": "hb_ot_math_glyph_part_flags_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_math_glyph_variant_t",
                    "@c:type": "hb_ot_math_glyph_variant_t",
                    "@version": "1.3.3",
                    "@glib:type-name": "hb_ot_math_glyph_variant_t",
                    "@glib:get-type": "hb_gobject_ot_math_glyph_variant_get_type",
                    "@c:symbol-prefix": "gobject_ot_math_glyph_variant",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.h",
                        "@line": "225",
                        "#text": "Data type to hold math-variant information for a glyph."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "237"
                    },
                    "field": [
                        {
                            "@name": "glyph",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "227",
                                "#text": "The glyph index of the variant"
                            },
                            "type": {
                                "@name": "codepoint_t",
                                "@c:type": "hb_codepoint_t"
                            }
                        },
                        {
                            "@name": "advance",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "228",
                                "#text": "The advance width of the variant"
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_math_kern_entry_t",
                    "@c:type": "hb_ot_math_kern_entry_t",
                    "@version": "3.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.h",
                        "@line": "211",
                        "#text": "Data type to hold math kerning (cut-in) information for a glyph."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "223"
                    },
                    "field": [
                        {
                            "@name": "max_correction_height",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "213",
                                "#text": "The maximum height at which this entry should be used"
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        },
                        {
                            "@name": "kern_value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "214",
                                "#text": "The kern value of the entry"
                            },
                            "type": {
                                "@name": "position_t",
                                "@c:type": "hb_position_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_name_entry_t",
                    "@c:type": "hb_ot_name_entry_t",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-name.h",
                        "@line": "112",
                        "#text": "Structure representing a name ID in a particular language."
                    },
                    "source-position": {
                        "@filename": "hb-ot-name.h",
                        "@line": "127"
                    },
                    "field": [
                        {
                            "@name": "name_id",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-name.h",
                                "@line": "114",
                                "#text": "name ID"
                            },
                            "type": {
                                "@name": "ot_name_id_t",
                                "@c:type": "hb_ot_name_id_t"
                            }
                        },
                        {
                            "@name": "var",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "var_int_t",
                                "@c:type": "hb_var_int_t"
                            }
                        },
                        {
                            "@name": "language",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-name.h",
                                "@line": "115",
                                "#text": "language"
                            },
                            "type": {
                                "@name": "language_t",
                                "@c:type": "hb_language_t"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_var_axis_info_t",
                    "@c:type": "hb_ot_var_axis_info_t",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.h",
                        "@line": "106",
                        "#text": "Data type for holding variation-axis values.\n\nThe minimum, default, and maximum values are in un-normalized, user scales.\n\n<note>Note: at present, the only flag defined for @flags is\n#HB_OT_VAR_AXIS_FLAG_HIDDEN.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "135"
                    },
                    "field": [
                        {
                            "@name": "axis_index",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.h",
                                "@line": "108",
                                "#text": "Index of the axis in the variation-axis array"
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "unsigned int"
                            }
                        },
                        {
                            "@name": "tag",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.h",
                                "@line": "109",
                                "#text": "The #hb_tag_t tag identifying the design variation of the axis"
                            },
                            "type": {
                                "@name": "tag_t",
                                "@c:type": "hb_tag_t"
                            }
                        },
                        {
                            "@name": "name_id",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.h",
                                "@line": "110",
                                "#text": "The `name` table Name ID that provides display names for the axis"
                            },
                            "type": {
                                "@name": "ot_name_id_t",
                                "@c:type": "hb_ot_name_id_t"
                            }
                        },
                        {
                            "@name": "flags",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.h",
                                "@line": "111",
                                "#text": "The #hb_ot_var_axis_flags_t flags for the axis"
                            },
                            "type": {
                                "@name": "ot_var_axis_flags_t",
                                "@c:type": "hb_ot_var_axis_flags_t"
                            }
                        },
                        {
                            "@name": "min_value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.h",
                                "@line": "112",
                                "#text": "The minimum value on the variation axis that the font covers"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "default_value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.h",
                                "@line": "113",
                                "#text": "The position on the variation axis corresponding to the font's defaults"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "max_value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.h",
                                "@line": "114",
                                "#text": "The maximum value on the variation axis that the font covers"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "reserved",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "guint",
                                "@c:type": "unsigned int"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_var_axis_t",
                    "@c:type": "hb_ot_var_axis_t",
                    "@version": "1.4.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "103",
                        "#text": "Use #hb_ot_var_axis_info_t instead."
                    },
                    "source-position": {
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "122"
                    },
                    "field": [
                        {
                            "@name": "tag",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-deprecated.h",
                                "@line": "105",
                                "#text": "axis tag"
                            },
                            "type": {
                                "@name": "tag_t",
                                "@c:type": "hb_tag_t"
                            }
                        },
                        {
                            "@name": "name_id",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-deprecated.h",
                                "@line": "106",
                                "#text": "axis name identifier"
                            },
                            "type": {
                                "@name": "ot_name_id_t",
                                "@c:type": "hb_ot_name_id_t"
                            }
                        },
                        {
                            "@name": "min_value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-deprecated.h",
                                "@line": "107",
                                "#text": "minimum value of the axis"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "default_value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-deprecated.h",
                                "@line": "108",
                                "#text": "default value of the axis"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "max_value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-deprecated.h",
                                "@line": "109",
                                "#text": "maximum value of the axis"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        }
                    ]
                },
                {
                    "@name": "segment_properties_t",
                    "@c:type": "hb_segment_properties_t",
                    "@glib:type-name": "hb_segment_properties_t",
                    "@glib:get-type": "hb_gobject_segment_properties_get_type",
                    "@c:symbol-prefix": "gobject_segment_properties",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "201",
                        "#text": "The structure that holds various text properties of an #hb_buffer_t. Can be\nset and retrieved using hb_buffer_set_segment_properties() and\nhb_buffer_get_segment_properties(), respectively."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "218"
                    },
                    "field": [
                        {
                            "@name": "direction",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "203",
                                "#text": "the #hb_direction_t of the buffer, see hb_buffer_set_direction()."
                            },
                            "type": {
                                "@name": "direction_t",
                                "@c:type": "hb_direction_t"
                            }
                        },
                        {
                            "@name": "script",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "204",
                                "#text": "the #hb_script_t of the buffer, see hb_buffer_set_script()."
                            },
                            "type": {
                                "@name": "script_t",
                                "@c:type": "hb_script_t"
                            }
                        },
                        {
                            "@name": "language",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "205",
                                "#text": "the #hb_language_t of the buffer, see hb_buffer_set_language()."
                            },
                            "type": {
                                "@name": "language_t",
                                "@c:type": "hb_language_t"
                            }
                        },
                        {
                            "@name": "reserved1",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "void*"
                            }
                        },
                        {
                            "@name": "reserved2",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "void*"
                            }
                        }
                    ]
                },
                {
                    "@name": "set_t",
                    "@c:type": "hb_set_t",
                    "@glib:type-name": "hb_set_t",
                    "@glib:get-type": "hb_gobject_set_get_type",
                    "@c:symbol-prefix": "gobject_set",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.h",
                        "@line": "48",
                        "#text": "Data type for holding a set of integers. #hb_set_t's are\nused to gather and contain glyph IDs, Unicode code\npoints, and various other collections of discrete\nvalues."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "57"
                    }
                },
                {
                    "@name": "shape_plan_t",
                    "@c:type": "hb_shape_plan_t",
                    "@glib:type-name": "hb_shape_plan_t",
                    "@glib:get-type": "hb_gobject_shape_plan_get_type",
                    "@c:symbol-prefix": "gobject_shape_plan",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.h",
                        "@line": "39",
                        "#text": "Data type for holding a shaping plan.\n\nShape plans contain information about how HarfBuzz will shape a\nparticular text segment, based on the segment's properties and the\ncapabilities in the font face in use.\n\nShape plans can be queried about how shaping will perform, given a set\nof specific input parameters (script, language, direction, features,\netc.)."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "53"
                    }
                },
                {
                    "@name": "unicode_funcs_t",
                    "@c:type": "hb_unicode_funcs_t",
                    "@glib:type-name": "hb_unicode_funcs_t",
                    "@glib:get-type": "hb_gobject_unicode_funcs_get_type",
                    "@c:symbol-prefix": "gobject_unicode_funcs",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "277",
                        "#text": "Data type containing a set of virtual methods used for\naccessing various Unicode character properties.\n\nHarfBuzz provides a default function for each of the\nmethods in #hb_unicode_funcs_t. Client programs can implement\ntheir own replacements for the individual Unicode functions, as\nneeded, and replace the default by calling the setter for a\nmethod."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "289"
                    }
                },
                {
                    "@name": "user_data_key_t",
                    "@c:type": "hb_user_data_key_t",
                    "@glib:type-name": "hb_user_data_key_t",
                    "@glib:get-type": "hb_gobject_user_data_key_get_type",
                    "@c:symbol-prefix": "gobject_user_data_key",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "764",
                        "#text": "Data structure for holding user-data keys."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "773"
                    },
                    "field": {
                        "@name": "unused",
                        "@readable": "0",
                        "@private": "1",
                        "type": {
                            "@name": "gchar",
                            "@c:type": "char"
                        }
                    }
                },
                {
                    "@name": "variation_t",
                    "@c:type": "hb_variation_t",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "837",
                        "#text": "Data type for holding variation data. Registered OpenType\nvariation-axis tags are listed in\n[OpenType Axis Tag Registry](https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg)."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "851"
                    },
                    "field": [
                        {
                            "@name": "tag",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "839",
                                "#text": "The #hb_tag_t tag of the variation-axis name"
                            },
                            "type": {
                                "@name": "tag_t",
                                "@c:type": "hb_tag_t"
                            }
                        },
                        {
                            "@name": "value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "840",
                                "#text": "The value of the variation axis"
                            },
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        }
                    ],
                    "method": {
                        "@name": "_string",
                        "@c:identifier": "hb_variation_to_string",
                        "@moved-to": "variation_to_string",
                        "@version": "1.4.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "1136",
                            "#text": "Converts an #hb_variation_t into a `NULL`-terminated string in the format\nunderstood by hb_variation_from_string(). The client in responsible for\nallocating big enough size for @buf, 128 bytes is more than enough."
                        },
                        "source-position": {
                            "@filename": "hb-common.h",
                            "@line": "858"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "variation",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "1138",
                                    "#text": "an #hb_variation_t to convert"
                                },
                                "type": {
                                    "@name": "variation_t",
                                    "@c:type": "hb_variation_t*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "buf",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "hb-common.cc",
                                        "@line": "1139",
                                        "#text": "output string"
                                    },
                                    "array": {
                                        "@length": "1",
                                        "@zero-terminated": "0",
                                        "@c:type": "char*",
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "char"
                                        }
                                    }
                                },
                                {
                                    "@name": "size",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "hb-common.cc",
                                        "@line": "1140",
                                        "#text": "the allocated size of @buf"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "unsigned int"
                                    }
                                }
                            ]
                        }
                    }
                }
            ],
            "enumeration": [
                {
                    "@name": "aat_layout_feature_selector_t",
                    "@version": "2.2.0",
                    "@glib:type-name": "hb_aat_layout_feature_selector_t",
                    "@glib:get-type": "hb_gobject_aat_layout_feature_selector_get_type",
                    "@c:type": "hb_aat_layout_feature_selector_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.h",
                        "@line": "133",
                        "#text": "The selectors defined for specifying AAT feature settings."
                    },
                    "member": [
                        {
                            "@name": "invalid",
                            "@value": "65535",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INVALID",
                            "@glib:nick": "invalid",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "135",
                                "#text": "Initial, unset feature selector"
                            }
                        },
                        {
                            "@name": "all_type_features_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_TYPE_FEATURES_ON",
                            "@glib:nick": "all-type-features-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_TYPE_FEATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "136",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ALL_TYPOGRAPHIC"
                            }
                        },
                        {
                            "@name": "all_type_features_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_TYPE_FEATURES_OFF",
                            "@glib:nick": "all-type-features-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_TYPE_FEATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "137",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ALL_TYPOGRAPHIC"
                            }
                        },
                        {
                            "@name": "required_ligatures_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_REQUIRED_LIGATURES_ON",
                            "@glib:nick": "required-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_REQUIRED_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "138",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "required_ligatures_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_REQUIRED_LIGATURES_OFF",
                            "@glib:nick": "required-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_REQUIRED_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "139",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "common_ligatures_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_COMMON_LIGATURES_ON",
                            "@glib:nick": "common-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_COMMON_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "140",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "common_ligatures_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_COMMON_LIGATURES_OFF",
                            "@glib:nick": "common-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_COMMON_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "141",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "rare_ligatures_on",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RARE_LIGATURES_ON",
                            "@glib:nick": "rare-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RARE_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "142",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "rare_ligatures_off",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RARE_LIGATURES_OFF",
                            "@glib:nick": "rare-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RARE_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "143",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "logos_on",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOGOS_ON",
                            "@glib:nick": "logos-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOGOS_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "144",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "logos_off",
                            "@value": "7",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOGOS_OFF",
                            "@glib:nick": "logos-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOGOS_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "145",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "rebus_pictures_on",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_REBUS_PICTURES_ON",
                            "@glib:nick": "rebus-pictures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_REBUS_PICTURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "146",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "rebus_pictures_off",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_REBUS_PICTURES_OFF",
                            "@glib:nick": "rebus-pictures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_REBUS_PICTURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "147",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "diphthong_ligatures_on",
                            "@value": "10",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DIPHTHONG_LIGATURES_ON",
                            "@glib:nick": "diphthong-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DIPHTHONG_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "148",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "diphthong_ligatures_off",
                            "@value": "11",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DIPHTHONG_LIGATURES_OFF",
                            "@glib:nick": "diphthong-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DIPHTHONG_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "149",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "squared_ligatures_on",
                            "@value": "12",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SQUARED_LIGATURES_ON",
                            "@glib:nick": "squared-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SQUARED_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "150",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "squared_ligatures_off",
                            "@value": "13",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SQUARED_LIGATURES_OFF",
                            "@glib:nick": "squared-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SQUARED_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "151",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "abbrev_squared_ligatures_on",
                            "@value": "14",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ABBREV_SQUARED_LIGATURES_ON",
                            "@glib:nick": "abbrev-squared-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ABBREV_SQUARED_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "152",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "abbrev_squared_ligatures_off",
                            "@value": "15",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ABBREV_SQUARED_LIGATURES_OFF",
                            "@glib:nick": "abbrev-squared-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ABBREV_SQUARED_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "153",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "symbol_ligatures_on",
                            "@value": "16",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SYMBOL_LIGATURES_ON",
                            "@glib:nick": "symbol-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SYMBOL_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "154",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "symbol_ligatures_off",
                            "@value": "17",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SYMBOL_LIGATURES_OFF",
                            "@glib:nick": "symbol-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SYMBOL_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "155",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "contextual_ligatures_on",
                            "@value": "18",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_LIGATURES_ON",
                            "@glib:nick": "contextual-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "156",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "contextual_ligatures_off",
                            "@value": "19",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_LIGATURES_OFF",
                            "@glib:nick": "contextual-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "157",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "historical_ligatures_on",
                            "@value": "20",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HISTORICAL_LIGATURES_ON",
                            "@glib:nick": "historical-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HISTORICAL_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "158",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "historical_ligatures_off",
                            "@value": "21",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HISTORICAL_LIGATURES_OFF",
                            "@glib:nick": "historical-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HISTORICAL_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "159",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "unconnected",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UNCONNECTED",
                            "@glib:nick": "unconnected",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UNCONNECTED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "160",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "partially_connected",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PARTIALLY_CONNECTED",
                            "@glib:nick": "partially-connected",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PARTIALLY_CONNECTED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "161",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "cursive",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CURSIVE",
                            "@glib:nick": "cursive",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CURSIVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "162",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES"
                            }
                        },
                        {
                            "@name": "upper_and_lower_case",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_AND_LOWER_CASE",
                            "@glib:nick": "upper-and-lower-case",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_AND_LOWER_CASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "163",
                                "#text": "Deprecated"
                            }
                        },
                        {
                            "@name": "all_caps",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_CAPS",
                            "@glib:nick": "all-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "164",
                                "#text": "Deprecated"
                            }
                        },
                        {
                            "@name": "all_lower_case",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_LOWER_CASE",
                            "@glib:nick": "all-lower-case",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_LOWER_CASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "165",
                                "#text": "Deprecated"
                            }
                        },
                        {
                            "@name": "small_caps",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SMALL_CAPS",
                            "@glib:nick": "small-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SMALL_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "166",
                                "#text": "Deprecated"
                            }
                        },
                        {
                            "@name": "initial_caps",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INITIAL_CAPS",
                            "@glib:nick": "initial-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INITIAL_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "167",
                                "#text": "Deprecated"
                            }
                        },
                        {
                            "@name": "initial_caps_and_small_caps",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INITIAL_CAPS_AND_SMALL_CAPS",
                            "@glib:nick": "initial-caps-and-small-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INITIAL_CAPS_AND_SMALL_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "168",
                                "#text": "Deprecated"
                            }
                        },
                        {
                            "@name": "substitute_vertical_forms_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SUBSTITUTE_VERTICAL_FORMS_ON",
                            "@glib:nick": "substitute-vertical-forms-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SUBSTITUTE_VERTICAL_FORMS_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "169",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_SUBSTITUTION"
                            }
                        },
                        {
                            "@name": "substitute_vertical_forms_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SUBSTITUTE_VERTICAL_FORMS_OFF",
                            "@glib:nick": "substitute-vertical-forms-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SUBSTITUTE_VERTICAL_FORMS_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "170",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_SUBSTITUTION"
                            }
                        },
                        {
                            "@name": "linguistic_rearrangement_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINGUISTIC_REARRANGEMENT_ON",
                            "@glib:nick": "linguistic-rearrangement-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINGUISTIC_REARRANGEMENT_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "171",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LINGUISTIC_REARRANGEMENT"
                            }
                        },
                        {
                            "@name": "linguistic_rearrangement_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINGUISTIC_REARRANGEMENT_OFF",
                            "@glib:nick": "linguistic-rearrangement-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINGUISTIC_REARRANGEMENT_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "172",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LINGUISTIC_REARRANGEMENT"
                            }
                        },
                        {
                            "@name": "monospaced_numbers",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MONOSPACED_NUMBERS",
                            "@glib:nick": "monospaced-numbers",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MONOSPACED_NUMBERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "173",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING"
                            }
                        },
                        {
                            "@name": "proportional_numbers",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_NUMBERS",
                            "@glib:nick": "proportional-numbers",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_NUMBERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "174",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING"
                            }
                        },
                        {
                            "@name": "third_width_numbers",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_THIRD_WIDTH_NUMBERS",
                            "@glib:nick": "third-width-numbers",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_THIRD_WIDTH_NUMBERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "175",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING"
                            }
                        },
                        {
                            "@name": "quarter_width_numbers",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_QUARTER_WIDTH_NUMBERS",
                            "@glib:nick": "quarter-width-numbers",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_QUARTER_WIDTH_NUMBERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "176",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING"
                            }
                        },
                        {
                            "@name": "word_initial_swashes_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_INITIAL_SWASHES_ON",
                            "@glib:nick": "word-initial-swashes-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_INITIAL_SWASHES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "177",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "word_initial_swashes_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_INITIAL_SWASHES_OFF",
                            "@glib:nick": "word-initial-swashes-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_INITIAL_SWASHES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "178",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "word_final_swashes_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_FINAL_SWASHES_ON",
                            "@glib:nick": "word-final-swashes-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_FINAL_SWASHES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "179",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "word_final_swashes_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_FINAL_SWASHES_OFF",
                            "@glib:nick": "word-final-swashes-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_FINAL_SWASHES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "180",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "line_initial_swashes_on",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_INITIAL_SWASHES_ON",
                            "@glib:nick": "line-initial-swashes-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_INITIAL_SWASHES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "181",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "line_initial_swashes_off",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_INITIAL_SWASHES_OFF",
                            "@glib:nick": "line-initial-swashes-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_INITIAL_SWASHES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "182",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "line_final_swashes_on",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_FINAL_SWASHES_ON",
                            "@glib:nick": "line-final-swashes-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_FINAL_SWASHES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "183",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "line_final_swashes_off",
                            "@value": "7",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_FINAL_SWASHES_OFF",
                            "@glib:nick": "line-final-swashes-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_FINAL_SWASHES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "184",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "non_final_swashes_on",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NON_FINAL_SWASHES_ON",
                            "@glib:nick": "non-final-swashes-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NON_FINAL_SWASHES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "185",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "non_final_swashes_off",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NON_FINAL_SWASHES_OFF",
                            "@glib:nick": "non-final-swashes-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NON_FINAL_SWASHES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "186",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE"
                            }
                        },
                        {
                            "@name": "show_diacritics",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SHOW_DIACRITICS",
                            "@glib:nick": "show-diacritics",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SHOW_DIACRITICS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "187",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE"
                            }
                        },
                        {
                            "@name": "hide_diacritics",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HIDE_DIACRITICS",
                            "@glib:nick": "hide-diacritics",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HIDE_DIACRITICS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "188",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE"
                            }
                        },
                        {
                            "@name": "decompose_diacritics",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DECOMPOSE_DIACRITICS",
                            "@glib:nick": "decompose-diacritics",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DECOMPOSE_DIACRITICS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "189",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE"
                            }
                        },
                        {
                            "@name": "normal_position",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NORMAL_POSITION",
                            "@glib:nick": "normal-position",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NORMAL_POSITION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "190",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION"
                            }
                        },
                        {
                            "@name": "superiors",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SUPERIORS",
                            "@glib:nick": "superiors",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SUPERIORS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "191",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION"
                            }
                        },
                        {
                            "@name": "inferiors",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INFERIORS",
                            "@glib:nick": "inferiors",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INFERIORS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "192",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION"
                            }
                        },
                        {
                            "@name": "ordinals",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ORDINALS",
                            "@glib:nick": "ordinals",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ORDINALS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "193",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION"
                            }
                        },
                        {
                            "@name": "scientific_inferiors",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SCIENTIFIC_INFERIORS",
                            "@glib:nick": "scientific-inferiors",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SCIENTIFIC_INFERIORS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "194",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION"
                            }
                        },
                        {
                            "@name": "no_fractions",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_FRACTIONS",
                            "@glib:nick": "no-fractions",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_FRACTIONS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "195",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS"
                            }
                        },
                        {
                            "@name": "vertical_fractions",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_VERTICAL_FRACTIONS",
                            "@glib:nick": "vertical-fractions",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_VERTICAL_FRACTIONS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "196",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS"
                            }
                        },
                        {
                            "@name": "diagonal_fractions",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DIAGONAL_FRACTIONS",
                            "@glib:nick": "diagonal-fractions",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DIAGONAL_FRACTIONS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "197",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS"
                            }
                        },
                        {
                            "@name": "prevent_overlap_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PREVENT_OVERLAP_ON",
                            "@glib:nick": "prevent-overlap-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PREVENT_OVERLAP_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "198",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_OVERLAPPING_CHARACTERS_TYPE"
                            }
                        },
                        {
                            "@name": "prevent_overlap_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PREVENT_OVERLAP_OFF",
                            "@glib:nick": "prevent-overlap-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PREVENT_OVERLAP_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "199",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_OVERLAPPING_CHARACTERS_TYPE"
                            }
                        },
                        {
                            "@name": "hyphens_to_em_dash_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHENS_TO_EM_DASH_ON",
                            "@glib:nick": "hyphens-to-em-dash-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHENS_TO_EM_DASH_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "200",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "hyphens_to_em_dash_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHENS_TO_EM_DASH_OFF",
                            "@glib:nick": "hyphens-to-em-dash-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHENS_TO_EM_DASH_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "201",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "hyphen_to_en_dash_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_EN_DASH_ON",
                            "@glib:nick": "hyphen-to-en-dash-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_EN_DASH_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "202",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "hyphen_to_en_dash_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_EN_DASH_OFF",
                            "@glib:nick": "hyphen-to-en-dash-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_EN_DASH_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "203",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "slashed_zero_on",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASHED_ZERO_ON",
                            "@glib:nick": "slashed-zero-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASHED_ZERO_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "204",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "slashed_zero_off",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASHED_ZERO_OFF",
                            "@glib:nick": "slashed-zero-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASHED_ZERO_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "205",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "form_interrobang_on",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FORM_INTERROBANG_ON",
                            "@glib:nick": "form-interrobang-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FORM_INTERROBANG_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "206",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "form_interrobang_off",
                            "@value": "7",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FORM_INTERROBANG_OFF",
                            "@glib:nick": "form-interrobang-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FORM_INTERROBANG_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "207",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "smart_quotes_on",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SMART_QUOTES_ON",
                            "@glib:nick": "smart-quotes-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SMART_QUOTES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "208",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "smart_quotes_off",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SMART_QUOTES_OFF",
                            "@glib:nick": "smart-quotes-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SMART_QUOTES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "209",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "periods_to_ellipsis_on",
                            "@value": "10",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIODS_TO_ELLIPSIS_ON",
                            "@glib:nick": "periods-to-ellipsis-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIODS_TO_ELLIPSIS_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "210",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "periods_to_ellipsis_off",
                            "@value": "11",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIODS_TO_ELLIPSIS_OFF",
                            "@glib:nick": "periods-to-ellipsis-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIODS_TO_ELLIPSIS_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "211",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS"
                            }
                        },
                        {
                            "@name": "hyphen_to_minus_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_MINUS_ON",
                            "@glib:nick": "hyphen-to-minus-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_MINUS_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "212",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "hyphen_to_minus_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_MINUS_OFF",
                            "@glib:nick": "hyphen-to-minus-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_MINUS_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "213",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "asterisk_to_multiply_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ASTERISK_TO_MULTIPLY_ON",
                            "@glib:nick": "asterisk-to-multiply-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ASTERISK_TO_MULTIPLY_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "214",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "asterisk_to_multiply_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ASTERISK_TO_MULTIPLY_OFF",
                            "@glib:nick": "asterisk-to-multiply-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ASTERISK_TO_MULTIPLY_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "215",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "slash_to_divide_on",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASH_TO_DIVIDE_ON",
                            "@glib:nick": "slash-to-divide-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASH_TO_DIVIDE_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "216",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "slash_to_divide_off",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASH_TO_DIVIDE_OFF",
                            "@glib:nick": "slash-to-divide-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASH_TO_DIVIDE_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "217",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "inequality_ligatures_on",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INEQUALITY_LIGATURES_ON",
                            "@glib:nick": "inequality-ligatures-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INEQUALITY_LIGATURES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "218",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "inequality_ligatures_off",
                            "@value": "7",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INEQUALITY_LIGATURES_OFF",
                            "@glib:nick": "inequality-ligatures-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INEQUALITY_LIGATURES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "219",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "exponents_on",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPONENTS_ON",
                            "@glib:nick": "exponents-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPONENTS_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "220",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "exponents_off",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPONENTS_OFF",
                            "@glib:nick": "exponents-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPONENTS_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "221",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "mathematical_greek_on",
                            "@value": "10",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MATHEMATICAL_GREEK_ON",
                            "@glib:nick": "mathematical-greek-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MATHEMATICAL_GREEK_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "222",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "mathematical_greek_off",
                            "@value": "11",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MATHEMATICAL_GREEK_OFF",
                            "@glib:nick": "mathematical-greek-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MATHEMATICAL_GREEK_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "223",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS"
                            }
                        },
                        {
                            "@name": "no_ornaments",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ORNAMENTS",
                            "@glib:nick": "no-ornaments",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ORNAMENTS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "224",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE"
                            }
                        },
                        {
                            "@name": "dingbats",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DINGBATS",
                            "@glib:nick": "dingbats",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DINGBATS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "225",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE"
                            }
                        },
                        {
                            "@name": "pi_characters",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PI_CHARACTERS",
                            "@glib:nick": "pi-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PI_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "226",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE"
                            }
                        },
                        {
                            "@name": "fleurons",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FLEURONS",
                            "@glib:nick": "fleurons",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FLEURONS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "227",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE"
                            }
                        },
                        {
                            "@name": "decorative_borders",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DECORATIVE_BORDERS",
                            "@glib:nick": "decorative-borders",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DECORATIVE_BORDERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "228",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE"
                            }
                        },
                        {
                            "@name": "international_symbols",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INTERNATIONAL_SYMBOLS",
                            "@glib:nick": "international-symbols",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INTERNATIONAL_SYMBOLS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "229",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE"
                            }
                        },
                        {
                            "@name": "math_symbols",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MATH_SYMBOLS",
                            "@glib:nick": "math-symbols",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MATH_SYMBOLS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "230",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE"
                            }
                        },
                        {
                            "@name": "no_alternates",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ALTERNATES",
                            "@glib:nick": "no-alternates",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ALTERNATES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "231",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "design_level1",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL1",
                            "@glib:nick": "design-level1",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "232",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE"
                            }
                        },
                        {
                            "@name": "design_level2",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL2",
                            "@glib:nick": "design-level2",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "233",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE"
                            }
                        },
                        {
                            "@name": "design_level3",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL3",
                            "@glib:nick": "design-level3",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL3",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "234",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE"
                            }
                        },
                        {
                            "@name": "design_level4",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL4",
                            "@glib:nick": "design-level4",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "235",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE"
                            }
                        },
                        {
                            "@name": "design_level5",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL5",
                            "@glib:nick": "design-level5",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL5",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "236",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE"
                            }
                        },
                        {
                            "@name": "no_style_options",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_STYLE_OPTIONS",
                            "@glib:nick": "no-style-options",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_STYLE_OPTIONS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "237",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS"
                            }
                        },
                        {
                            "@name": "display_text",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DISPLAY_TEXT",
                            "@glib:nick": "display-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DISPLAY_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "238",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS"
                            }
                        },
                        {
                            "@name": "engraved_text",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ENGRAVED_TEXT",
                            "@glib:nick": "engraved-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ENGRAVED_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "239",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS"
                            }
                        },
                        {
                            "@name": "illuminated_caps",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ILLUMINATED_CAPS",
                            "@glib:nick": "illuminated-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ILLUMINATED_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "240",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS"
                            }
                        },
                        {
                            "@name": "titling_caps",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TITLING_CAPS",
                            "@glib:nick": "titling-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TITLING_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "241",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS"
                            }
                        },
                        {
                            "@name": "tall_caps",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TALL_CAPS",
                            "@glib:nick": "tall-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TALL_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "242",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS"
                            }
                        },
                        {
                            "@name": "traditional_characters",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_CHARACTERS",
                            "@glib:nick": "traditional-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "243",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "simplified_characters",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SIMPLIFIED_CHARACTERS",
                            "@glib:nick": "simplified-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SIMPLIFIED_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "244",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "jis1978_characters",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1978_CHARACTERS",
                            "@glib:nick": "jis1978-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1978_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "245",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "jis1983_characters",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1983_CHARACTERS",
                            "@glib:nick": "jis1983-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1983_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "246",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "jis1990_characters",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1990_CHARACTERS",
                            "@glib:nick": "jis1990-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1990_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "247",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "traditional_alt_one",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_ONE",
                            "@glib:nick": "traditional-alt-one",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_ONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "248",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "traditional_alt_two",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_TWO",
                            "@glib:nick": "traditional-alt-two",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_TWO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "249",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "traditional_alt_three",
                            "@value": "7",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_THREE",
                            "@glib:nick": "traditional-alt-three",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_THREE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "250",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "traditional_alt_four",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_FOUR",
                            "@glib:nick": "traditional-alt-four",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_FOUR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "251",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "traditional_alt_five",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_FIVE",
                            "@glib:nick": "traditional-alt-five",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_FIVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "252",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "expert_characters",
                            "@value": "10",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPERT_CHARACTERS",
                            "@glib:nick": "expert-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPERT_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "253",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "jis2004_characters",
                            "@value": "11",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS2004_CHARACTERS",
                            "@glib:nick": "jis2004-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS2004_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "254",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "hojo_characters",
                            "@value": "12",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HOJO_CHARACTERS",
                            "@glib:nick": "hojo-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HOJO_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "255",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "nlccharacters",
                            "@value": "13",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NLCCHARACTERS",
                            "@glib:nick": "nlccharacters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NLCCHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "256",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "traditional_names_characters",
                            "@value": "14",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_NAMES_CHARACTERS",
                            "@glib:nick": "traditional-names-characters",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_NAMES_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "257",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE"
                            }
                        },
                        {
                            "@name": "lower_case_numbers",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_NUMBERS",
                            "@glib:nick": "lower-case-numbers",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_NUMBERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "258",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_CASE"
                            }
                        },
                        {
                            "@name": "upper_case_numbers",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_NUMBERS",
                            "@glib:nick": "upper-case-numbers",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_NUMBERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "259",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_CASE"
                            }
                        },
                        {
                            "@name": "proportional_text",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_TEXT",
                            "@glib:nick": "proportional-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "260",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING"
                            }
                        },
                        {
                            "@name": "monospaced_text",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MONOSPACED_TEXT",
                            "@glib:nick": "monospaced-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_MONOSPACED_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "261",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING"
                            }
                        },
                        {
                            "@name": "half_width_text",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_TEXT",
                            "@glib:nick": "half-width-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "262",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING"
                            }
                        },
                        {
                            "@name": "third_width_text",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_THIRD_WIDTH_TEXT",
                            "@glib:nick": "third-width-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_THIRD_WIDTH_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "263",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING"
                            }
                        },
                        {
                            "@name": "quarter_width_text",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_QUARTER_WIDTH_TEXT",
                            "@glib:nick": "quarter-width-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_QUARTER_WIDTH_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "264",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING"
                            }
                        },
                        {
                            "@name": "alt_proportional_text",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALT_PROPORTIONAL_TEXT",
                            "@glib:nick": "alt-proportional-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALT_PROPORTIONAL_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "265",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING"
                            }
                        },
                        {
                            "@name": "alt_half_width_text",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALT_HALF_WIDTH_TEXT",
                            "@glib:nick": "alt-half-width-text",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALT_HALF_WIDTH_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "266",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING"
                            }
                        },
                        {
                            "@name": "no_transliteration",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_TRANSLITERATION",
                            "@glib:nick": "no-transliteration",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_TRANSLITERATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "267",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "hanja_to_hangul",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL",
                            "@glib:nick": "hanja-to-hangul",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "268",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "hiragana_to_katakana",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HIRAGANA_TO_KATAKANA",
                            "@glib:nick": "hiragana-to-katakana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HIRAGANA_TO_KATAKANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "269",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "katakana_to_hiragana",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_KATAKANA_TO_HIRAGANA",
                            "@glib:nick": "katakana-to-hiragana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_KATAKANA_TO_HIRAGANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "270",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "kana_to_romanization",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_KANA_TO_ROMANIZATION",
                            "@glib:nick": "kana-to-romanization",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_KANA_TO_ROMANIZATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "271",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "romanization_to_hiragana",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMANIZATION_TO_HIRAGANA",
                            "@glib:nick": "romanization-to-hiragana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMANIZATION_TO_HIRAGANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "272",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "romanization_to_katakana",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMANIZATION_TO_KATAKANA",
                            "@glib:nick": "romanization-to-katakana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMANIZATION_TO_KATAKANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "273",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "hanja_to_hangul_alt_one",
                            "@value": "7",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_ONE",
                            "@glib:nick": "hanja-to-hangul-alt-one",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_ONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "274",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "hanja_to_hangul_alt_two",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_TWO",
                            "@glib:nick": "hanja-to-hangul-alt-two",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_TWO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "275",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "hanja_to_hangul_alt_three",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_THREE",
                            "@glib:nick": "hanja-to-hangul-alt-three",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_THREE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "276",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION"
                            }
                        },
                        {
                            "@name": "no_annotation",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ANNOTATION",
                            "@glib:nick": "no-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "277",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "box_annotation",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_BOX_ANNOTATION",
                            "@glib:nick": "box-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_BOX_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "278",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "rounded_box_annotation",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ROUNDED_BOX_ANNOTATION",
                            "@glib:nick": "rounded-box-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ROUNDED_BOX_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "279",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "circle_annotation",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CIRCLE_ANNOTATION",
                            "@glib:nick": "circle-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CIRCLE_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "280",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "inverted_circle_annotation",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_CIRCLE_ANNOTATION",
                            "@glib:nick": "inverted-circle-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_CIRCLE_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "281",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "parenthesis_annotation",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PARENTHESIS_ANNOTATION",
                            "@glib:nick": "parenthesis-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PARENTHESIS_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "282",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "period_annotation",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIOD_ANNOTATION",
                            "@glib:nick": "period-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIOD_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "283",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "roman_numeral_annotation",
                            "@value": "7",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMAN_NUMERAL_ANNOTATION",
                            "@glib:nick": "roman-numeral-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMAN_NUMERAL_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "284",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "diamond_annotation",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DIAMOND_ANNOTATION",
                            "@glib:nick": "diamond-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DIAMOND_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "285",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "inverted_box_annotation",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_BOX_ANNOTATION",
                            "@glib:nick": "inverted-box-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_BOX_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "286",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "inverted_rounded_box_annotation",
                            "@value": "10",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_ROUNDED_BOX_ANNOTATION",
                            "@glib:nick": "inverted-rounded-box-annotation",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_ROUNDED_BOX_ANNOTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "287",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE"
                            }
                        },
                        {
                            "@name": "full_width_kana",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_KANA",
                            "@glib:nick": "full-width-kana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_KANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "288",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_KANA_SPACING_TYPE"
                            }
                        },
                        {
                            "@name": "proportional_kana",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_KANA",
                            "@glib:nick": "proportional-kana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_KANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "289",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_KANA_SPACING_TYPE"
                            }
                        },
                        {
                            "@name": "full_width_ideographs",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_IDEOGRAPHS",
                            "@glib:nick": "full-width-ideographs",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_IDEOGRAPHS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "290",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE"
                            }
                        },
                        {
                            "@name": "proportional_ideographs",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_IDEOGRAPHS",
                            "@glib:nick": "proportional-ideographs",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_IDEOGRAPHS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "291",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE"
                            }
                        },
                        {
                            "@name": "half_width_ideographs",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_IDEOGRAPHS",
                            "@glib:nick": "half-width-ideographs",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_IDEOGRAPHS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "292",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE"
                            }
                        },
                        {
                            "@name": "canonical_composition_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CANONICAL_COMPOSITION_ON",
                            "@glib:nick": "canonical-composition-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CANONICAL_COMPOSITION_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "293",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE"
                            }
                        },
                        {
                            "@name": "canonical_composition_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CANONICAL_COMPOSITION_OFF",
                            "@glib:nick": "canonical-composition-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CANONICAL_COMPOSITION_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "294",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE"
                            }
                        },
                        {
                            "@name": "compatibility_composition_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_COMPATIBILITY_COMPOSITION_ON",
                            "@glib:nick": "compatibility-composition-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_COMPATIBILITY_COMPOSITION_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "295",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE"
                            }
                        },
                        {
                            "@name": "compatibility_composition_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_COMPATIBILITY_COMPOSITION_OFF",
                            "@glib:nick": "compatibility-composition-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_COMPATIBILITY_COMPOSITION_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "296",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE"
                            }
                        },
                        {
                            "@name": "transcoding_composition_on",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRANSCODING_COMPOSITION_ON",
                            "@glib:nick": "transcoding-composition-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRANSCODING_COMPOSITION_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "297",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE"
                            }
                        },
                        {
                            "@name": "transcoding_composition_off",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRANSCODING_COMPOSITION_OFF",
                            "@glib:nick": "transcoding-composition-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_TRANSCODING_COMPOSITION_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "298",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE"
                            }
                        },
                        {
                            "@name": "no_ruby_kana",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_RUBY_KANA",
                            "@glib:nick": "no-ruby-kana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_RUBY_KANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "299",
                                "#text": "Deprecated; use #HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_OFF instead"
                            }
                        },
                        {
                            "@name": "ruby_kana",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA",
                            "@glib:nick": "ruby-kana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "300",
                                "#text": "Deprecated; use #HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_ON instead"
                            }
                        },
                        {
                            "@name": "ruby_kana_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_ON",
                            "@glib:nick": "ruby-kana-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "301",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_RUBY_KANA"
                            }
                        },
                        {
                            "@name": "ruby_kana_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_OFF",
                            "@glib:nick": "ruby-kana-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "302",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_RUBY_KANA"
                            }
                        },
                        {
                            "@name": "no_cjk_symbol_alternatives",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_CJK_SYMBOL_ALTERNATIVES",
                            "@glib:nick": "no-cjk-symbol-alternatives",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_CJK_SYMBOL_ALTERNATIVES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "303",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "cjk_symbol_alt_one",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_ONE",
                            "@glib:nick": "cjk-symbol-alt-one",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_ONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "304",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "cjk_symbol_alt_two",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_TWO",
                            "@glib:nick": "cjk-symbol-alt-two",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_TWO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "305",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "cjk_symbol_alt_three",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_THREE",
                            "@glib:nick": "cjk-symbol-alt-three",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_THREE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "306",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "cjk_symbol_alt_four",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_FOUR",
                            "@glib:nick": "cjk-symbol-alt-four",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_FOUR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "307",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "cjk_symbol_alt_five",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_FIVE",
                            "@glib:nick": "cjk-symbol-alt-five",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_FIVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "308",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "no_ideographic_alternatives",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_IDEOGRAPHIC_ALTERNATIVES",
                            "@glib:nick": "no-ideographic-alternatives",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_IDEOGRAPHIC_ALTERNATIVES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "309",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "ideographic_alt_one",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_ONE",
                            "@glib:nick": "ideographic-alt-one",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_ONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "310",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "ideographic_alt_two",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_TWO",
                            "@glib:nick": "ideographic-alt-two",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_TWO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "311",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "ideographic_alt_three",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_THREE",
                            "@glib:nick": "ideographic-alt-three",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_THREE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "312",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "ideographic_alt_four",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_FOUR",
                            "@glib:nick": "ideographic-alt-four",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_FOUR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "313",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "ideographic_alt_five",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_FIVE",
                            "@glib:nick": "ideographic-alt-five",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_FIVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "314",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE"
                            }
                        },
                        {
                            "@name": "cjk_vertical_roman_centered",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_VERTICAL_ROMAN_CENTERED",
                            "@glib:nick": "cjk-vertical-roman-centered",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_VERTICAL_ROMAN_CENTERED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "315",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_VERTICAL_ROMAN_PLACEMENT_TYPE"
                            }
                        },
                        {
                            "@name": "cjk_vertical_roman_hbaseline",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_VERTICAL_ROMAN_HBASELINE",
                            "@glib:nick": "cjk-vertical-roman-hbaseline",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_VERTICAL_ROMAN_HBASELINE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "316",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_VERTICAL_ROMAN_PLACEMENT_TYPE"
                            }
                        },
                        {
                            "@name": "no_cjk_italic_roman",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_CJK_ITALIC_ROMAN",
                            "@glib:nick": "no-cjk-italic-roman",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_CJK_ITALIC_ROMAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "317",
                                "#text": "Deprecated; use #HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_OFF instead"
                            }
                        },
                        {
                            "@name": "cjk_italic_roman",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN",
                            "@glib:nick": "cjk-italic-roman",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "318",
                                "#text": "Deprecated; use #HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_ON instead"
                            }
                        },
                        {
                            "@name": "cjk_italic_roman_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_ON",
                            "@glib:nick": "cjk-italic-roman-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "319",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ITALIC_CJK_ROMAN"
                            }
                        },
                        {
                            "@name": "cjk_italic_roman_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_OFF",
                            "@glib:nick": "cjk-italic-roman-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "320",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ITALIC_CJK_ROMAN"
                            }
                        },
                        {
                            "@name": "case_sensitive_layout_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_LAYOUT_ON",
                            "@glib:nick": "case-sensitive-layout-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_LAYOUT_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "321",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT"
                            }
                        },
                        {
                            "@name": "case_sensitive_layout_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_LAYOUT_OFF",
                            "@glib:nick": "case-sensitive-layout-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_LAYOUT_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "322",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT"
                            }
                        },
                        {
                            "@name": "case_sensitive_spacing_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_SPACING_ON",
                            "@glib:nick": "case-sensitive-spacing-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_SPACING_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "323",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT"
                            }
                        },
                        {
                            "@name": "case_sensitive_spacing_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_SPACING_OFF",
                            "@glib:nick": "case-sensitive-spacing-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_SPACING_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "324",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT"
                            }
                        },
                        {
                            "@name": "alternate_horiz_kana_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_HORIZ_KANA_ON",
                            "@glib:nick": "alternate-horiz-kana-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_HORIZ_KANA_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "325",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA"
                            }
                        },
                        {
                            "@name": "alternate_horiz_kana_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_HORIZ_KANA_OFF",
                            "@glib:nick": "alternate-horiz-kana-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_HORIZ_KANA_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "326",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA"
                            }
                        },
                        {
                            "@name": "alternate_vert_kana_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_VERT_KANA_ON",
                            "@glib:nick": "alternate-vert-kana-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_VERT_KANA_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "327",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA"
                            }
                        },
                        {
                            "@name": "alternate_vert_kana_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_VERT_KANA_OFF",
                            "@glib:nick": "alternate-vert-kana-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_VERT_KANA_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "328",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA"
                            }
                        },
                        {
                            "@name": "no_stylistic_alternates",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_STYLISTIC_ALTERNATES",
                            "@glib:nick": "no-stylistic-alternates",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_STYLISTIC_ALTERNATES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "329",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_one_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ONE_ON",
                            "@glib:nick": "stylistic-alt-one-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ONE_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "330",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_one_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ONE_OFF",
                            "@glib:nick": "stylistic-alt-one-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ONE_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "331",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_two_on",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWO_ON",
                            "@glib:nick": "stylistic-alt-two-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWO_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "332",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_two_off",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWO_OFF",
                            "@glib:nick": "stylistic-alt-two-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWO_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "333",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_three_on",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THREE_ON",
                            "@glib:nick": "stylistic-alt-three-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THREE_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "334",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_three_off",
                            "@value": "7",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THREE_OFF",
                            "@glib:nick": "stylistic-alt-three-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THREE_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "335",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_four_on",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOUR_ON",
                            "@glib:nick": "stylistic-alt-four-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOUR_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "336",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_four_off",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOUR_OFF",
                            "@glib:nick": "stylistic-alt-four-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOUR_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "337",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_five_on",
                            "@value": "10",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIVE_ON",
                            "@glib:nick": "stylistic-alt-five-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIVE_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "338",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_five_off",
                            "@value": "11",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIVE_OFF",
                            "@glib:nick": "stylistic-alt-five-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIVE_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "339",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_six_on",
                            "@value": "12",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIX_ON",
                            "@glib:nick": "stylistic-alt-six-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIX_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "340",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_six_off",
                            "@value": "13",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIX_OFF",
                            "@glib:nick": "stylistic-alt-six-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIX_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "341",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_seven_on",
                            "@value": "14",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVEN_ON",
                            "@glib:nick": "stylistic-alt-seven-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "342",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_seven_off",
                            "@value": "15",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVEN_OFF",
                            "@glib:nick": "stylistic-alt-seven-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "343",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_eight_on",
                            "@value": "16",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHT_ON",
                            "@glib:nick": "stylistic-alt-eight-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHT_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "344",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_eight_off",
                            "@value": "17",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHT_OFF",
                            "@glib:nick": "stylistic-alt-eight-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHT_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "345",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_nine_on",
                            "@value": "18",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINE_ON",
                            "@glib:nick": "stylistic-alt-nine-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINE_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "346",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_nine_off",
                            "@value": "19",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINE_OFF",
                            "@glib:nick": "stylistic-alt-nine-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINE_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "347",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_ten_on",
                            "@value": "20",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TEN_ON",
                            "@glib:nick": "stylistic-alt-ten-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "348",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_ten_off",
                            "@value": "21",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TEN_OFF",
                            "@glib:nick": "stylistic-alt-ten-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "349",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_eleven_on",
                            "@value": "22",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ELEVEN_ON",
                            "@glib:nick": "stylistic-alt-eleven-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ELEVEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "350",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_eleven_off",
                            "@value": "23",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ELEVEN_OFF",
                            "@glib:nick": "stylistic-alt-eleven-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ELEVEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "351",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_twelve_on",
                            "@value": "24",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWELVE_ON",
                            "@glib:nick": "stylistic-alt-twelve-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWELVE_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "352",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_twelve_off",
                            "@value": "25",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWELVE_OFF",
                            "@glib:nick": "stylistic-alt-twelve-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWELVE_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "353",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_thirteen_on",
                            "@value": "26",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THIRTEEN_ON",
                            "@glib:nick": "stylistic-alt-thirteen-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THIRTEEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "354",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_thirteen_off",
                            "@value": "27",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THIRTEEN_OFF",
                            "@glib:nick": "stylistic-alt-thirteen-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THIRTEEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "355",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_fourteen_on",
                            "@value": "28",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOURTEEN_ON",
                            "@glib:nick": "stylistic-alt-fourteen-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOURTEEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "356",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_fourteen_off",
                            "@value": "29",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOURTEEN_OFF",
                            "@glib:nick": "stylistic-alt-fourteen-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOURTEEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "357",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_fifteen_on",
                            "@value": "30",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIFTEEN_ON",
                            "@glib:nick": "stylistic-alt-fifteen-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIFTEEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "358",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_fifteen_off",
                            "@value": "31",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIFTEEN_OFF",
                            "@glib:nick": "stylistic-alt-fifteen-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIFTEEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "359",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_sixteen_on",
                            "@value": "32",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIXTEEN_ON",
                            "@glib:nick": "stylistic-alt-sixteen-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIXTEEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "360",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_sixteen_off",
                            "@value": "33",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIXTEEN_OFF",
                            "@glib:nick": "stylistic-alt-sixteen-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIXTEEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "361",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_seventeen_on",
                            "@value": "34",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVENTEEN_ON",
                            "@glib:nick": "stylistic-alt-seventeen-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVENTEEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "362",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_seventeen_off",
                            "@value": "35",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVENTEEN_OFF",
                            "@glib:nick": "stylistic-alt-seventeen-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVENTEEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "363",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_eighteen_on",
                            "@value": "36",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHTEEN_ON",
                            "@glib:nick": "stylistic-alt-eighteen-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHTEEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "364",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_eighteen_off",
                            "@value": "37",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHTEEN_OFF",
                            "@glib:nick": "stylistic-alt-eighteen-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHTEEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "365",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_nineteen_on",
                            "@value": "38",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINETEEN_ON",
                            "@glib:nick": "stylistic-alt-nineteen-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINETEEN_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "366",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_nineteen_off",
                            "@value": "39",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINETEEN_OFF",
                            "@glib:nick": "stylistic-alt-nineteen-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINETEEN_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "367",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_twenty_on",
                            "@value": "40",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWENTY_ON",
                            "@glib:nick": "stylistic-alt-twenty-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWENTY_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "368",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "stylistic_alt_twenty_off",
                            "@value": "41",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWENTY_OFF",
                            "@glib:nick": "stylistic-alt-twenty-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWENTY_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "369",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "contextual_alternates_on",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_ALTERNATES_ON",
                            "@glib:nick": "contextual-alternates-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_ALTERNATES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "370",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "contextual_alternates_off",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_ALTERNATES_OFF",
                            "@glib:nick": "contextual-alternates-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_ALTERNATES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "371",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "swash_alternates_on",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SWASH_ALTERNATES_ON",
                            "@glib:nick": "swash-alternates-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SWASH_ALTERNATES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "372",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "swash_alternates_off",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SWASH_ALTERNATES_OFF",
                            "@glib:nick": "swash-alternates-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_SWASH_ALTERNATES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "373",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "contextual_swash_alternates_on",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_SWASH_ALTERNATES_ON",
                            "@glib:nick": "contextual-swash-alternates-on",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_SWASH_ALTERNATES_ON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "374",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "contextual_swash_alternates_off",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_SWASH_ALTERNATES_OFF",
                            "@glib:nick": "contextual-swash-alternates-off",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_SWASH_ALTERNATES_OFF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "375",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES"
                            }
                        },
                        {
                            "@name": "default_lower_case",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_LOWER_CASE",
                            "@glib:nick": "default-lower-case",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_LOWER_CASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "376",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE"
                            }
                        },
                        {
                            "@name": "lower_case_small_caps",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_SMALL_CAPS",
                            "@glib:nick": "lower-case-small-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_SMALL_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "377",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE"
                            }
                        },
                        {
                            "@name": "lower_case_petite_caps",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_PETITE_CAPS",
                            "@glib:nick": "lower-case-petite-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_PETITE_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "378",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE"
                            }
                        },
                        {
                            "@name": "default_upper_case",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_UPPER_CASE",
                            "@glib:nick": "default-upper-case",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_UPPER_CASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "379",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE"
                            }
                        },
                        {
                            "@name": "upper_case_small_caps",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_SMALL_CAPS",
                            "@glib:nick": "upper-case-small-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_SMALL_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "380",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE"
                            }
                        },
                        {
                            "@name": "upper_case_petite_caps",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_PETITE_CAPS",
                            "@glib:nick": "upper-case-petite-caps",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_PETITE_CAPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "381",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE"
                            }
                        },
                        {
                            "@name": "half_width_cjk_roman",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_CJK_ROMAN",
                            "@glib:nick": "half-width-cjk-roman",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_CJK_ROMAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "382",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE"
                            }
                        },
                        {
                            "@name": "proportional_cjk_roman",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_CJK_ROMAN",
                            "@glib:nick": "proportional-cjk-roman",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_CJK_ROMAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "383",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE"
                            }
                        },
                        {
                            "@name": "default_cjk_roman",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_CJK_ROMAN",
                            "@glib:nick": "default-cjk-roman",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_CJK_ROMAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "384",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE"
                            }
                        },
                        {
                            "@name": "full_width_cjk_roman",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_CJK_ROMAN",
                            "@glib:nick": "full-width-cjk-roman",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_CJK_ROMAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "385",
                                "#text": "for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE"
                            }
                        }
                    ]
                },
                {
                    "@name": "aat_layout_feature_type_t",
                    "@version": "2.2.0",
                    "@glib:type-name": "hb_aat_layout_feature_type_t",
                    "@glib:get-type": "hb_gobject_aat_layout_feature_type_get_type",
                    "@c:type": "hb_aat_layout_feature_type_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.h",
                        "@line": "38",
                        "#text": "The possible feature types defined for AAT shaping, from Apple [Font Feature Registry](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html)."
                    },
                    "member": [
                        {
                            "@name": "invalid",
                            "@value": "65535",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_INVALID",
                            "@glib:nick": "invalid",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "40",
                                "#text": "Initial, unset feature type"
                            }
                        },
                        {
                            "@name": "all_typographic",
                            "@value": "0",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_ALL_TYPOGRAPHIC",
                            "@glib:nick": "all-typographic",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_ALL_TYPOGRAPHIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "41",
                                "#text": "[All Typographic Features](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type0)"
                            }
                        },
                        {
                            "@name": "ligatures",
                            "@value": "1",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES",
                            "@glib:nick": "ligatures",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "42",
                                "#text": "[Ligatures](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type1)"
                            }
                        },
                        {
                            "@name": "curisve_connection",
                            "@value": "2",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_CURISVE_CONNECTION",
                            "@glib:nick": "curisve-connection",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_CURISVE_CONNECTION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "43",
                                "#text": "[Cursive Connection](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type2)"
                            }
                        },
                        {
                            "@name": "letter_case",
                            "@value": "3",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_LETTER_CASE",
                            "@glib:nick": "letter-case",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_LETTER_CASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "44",
                                "#text": "[Letter Case](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type3)"
                            }
                        },
                        {
                            "@name": "vertical_substitution",
                            "@value": "4",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_SUBSTITUTION",
                            "@glib:nick": "vertical-substitution",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_SUBSTITUTION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "45",
                                "#text": "[Vertical Substitution](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type4)"
                            }
                        },
                        {
                            "@name": "linguistic_rearrangement",
                            "@value": "5",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_LINGUISTIC_REARRANGEMENT",
                            "@glib:nick": "linguistic-rearrangement",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_LINGUISTIC_REARRANGEMENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "46",
                                "#text": "[Linguistic Rearrangement](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type5)"
                            }
                        },
                        {
                            "@name": "number_spacing",
                            "@value": "6",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING",
                            "@glib:nick": "number-spacing",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "47",
                                "#text": "[Number Spacing](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type6)"
                            }
                        },
                        {
                            "@name": "smart_swash_type",
                            "@value": "8",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE",
                            "@glib:nick": "smart-swash-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "48",
                                "#text": "[Smart Swash](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type8)"
                            }
                        },
                        {
                            "@name": "diacritics_type",
                            "@value": "9",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE",
                            "@glib:nick": "diacritics-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "49",
                                "#text": "[Diacritics](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type9)"
                            }
                        },
                        {
                            "@name": "vertical_position",
                            "@value": "10",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION",
                            "@glib:nick": "vertical-position",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "50",
                                "#text": "[Vertical Position](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type10)"
                            }
                        },
                        {
                            "@name": "fractions",
                            "@value": "11",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS",
                            "@glib:nick": "fractions",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "51",
                                "#text": "[Fractions](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type11)"
                            }
                        },
                        {
                            "@name": "overlapping_characters_type",
                            "@value": "13",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_OVERLAPPING_CHARACTERS_TYPE",
                            "@glib:nick": "overlapping-characters-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_OVERLAPPING_CHARACTERS_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "52",
                                "#text": "[Overlapping Characters](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type13)"
                            }
                        },
                        {
                            "@name": "typographic_extras",
                            "@value": "14",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS",
                            "@glib:nick": "typographic-extras",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "53",
                                "#text": "[Typographic Extras](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type14)"
                            }
                        },
                        {
                            "@name": "mathematical_extras",
                            "@value": "15",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS",
                            "@glib:nick": "mathematical-extras",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "54",
                                "#text": "[Mathematical Extras](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type15)"
                            }
                        },
                        {
                            "@name": "ornament_sets_type",
                            "@value": "16",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE",
                            "@glib:nick": "ornament-sets-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "55",
                                "#text": "[Ornament Sets](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type16)"
                            }
                        },
                        {
                            "@name": "character_alternatives",
                            "@value": "17",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_ALTERNATIVES",
                            "@glib:nick": "character-alternatives",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_ALTERNATIVES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "56",
                                "#text": "[Character Alternatives](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type17)"
                            }
                        },
                        {
                            "@name": "design_complexity_type",
                            "@value": "18",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE",
                            "@glib:nick": "design-complexity-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "57",
                                "#text": "[Design Complexity](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type18)"
                            }
                        },
                        {
                            "@name": "style_options",
                            "@value": "19",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS",
                            "@glib:nick": "style-options",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "58",
                                "#text": "[Style Options](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type19)"
                            }
                        },
                        {
                            "@name": "character_shape",
                            "@value": "20",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE",
                            "@glib:nick": "character-shape",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "59",
                                "#text": "[Character Shape](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type20)"
                            }
                        },
                        {
                            "@name": "number_case",
                            "@value": "21",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_CASE",
                            "@glib:nick": "number-case",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_CASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "60",
                                "#text": "[Number Case](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type21)"
                            }
                        },
                        {
                            "@name": "text_spacing",
                            "@value": "22",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING",
                            "@glib:nick": "text-spacing",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "61",
                                "#text": "[Text Spacing](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type22)"
                            }
                        },
                        {
                            "@name": "transliteration",
                            "@value": "23",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION",
                            "@glib:nick": "transliteration",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "62",
                                "#text": "[Transliteration](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type23)"
                            }
                        },
                        {
                            "@name": "annotation_type",
                            "@value": "24",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE",
                            "@glib:nick": "annotation-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "63",
                                "#text": "[Annotation](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type24)"
                            }
                        },
                        {
                            "@name": "kana_spacing_type",
                            "@value": "25",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_KANA_SPACING_TYPE",
                            "@glib:nick": "kana-spacing-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_KANA_SPACING_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "64",
                                "#text": "[Kana Spacing](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type25)"
                            }
                        },
                        {
                            "@name": "ideographic_spacing_type",
                            "@value": "26",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE",
                            "@glib:nick": "ideographic-spacing-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "65",
                                "#text": "[Ideographic Spacing](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type26)"
                            }
                        },
                        {
                            "@name": "unicode_decomposition_type",
                            "@value": "27",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE",
                            "@glib:nick": "unicode-decomposition-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "66",
                                "#text": "[Unicode Decomposition](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type27)"
                            }
                        },
                        {
                            "@name": "ruby_kana",
                            "@value": "28",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_RUBY_KANA",
                            "@glib:nick": "ruby-kana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_RUBY_KANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "67",
                                "#text": "[Ruby Kana](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type28)"
                            }
                        },
                        {
                            "@name": "cjk_symbol_alternatives_type",
                            "@value": "29",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE",
                            "@glib:nick": "cjk-symbol-alternatives-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "68",
                                "#text": "[CJK Symbol Alternatives](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type29)"
                            }
                        },
                        {
                            "@name": "ideographic_alternatives_type",
                            "@value": "30",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE",
                            "@glib:nick": "ideographic-alternatives-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "69",
                                "#text": "[Ideographic Alternatives](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type30)"
                            }
                        },
                        {
                            "@name": "cjk_vertical_roman_placement_type",
                            "@value": "31",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_CJK_VERTICAL_ROMAN_PLACEMENT_TYPE",
                            "@glib:nick": "cjk-vertical-roman-placement-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_CJK_VERTICAL_ROMAN_PLACEMENT_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "70",
                                "#text": "[CJK Vertical Roman Placement](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type31)"
                            }
                        },
                        {
                            "@name": "italic_cjk_roman",
                            "@value": "32",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_ITALIC_CJK_ROMAN",
                            "@glib:nick": "italic-cjk-roman",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_ITALIC_CJK_ROMAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "71",
                                "#text": "[Italic CJK Roman](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type32)"
                            }
                        },
                        {
                            "@name": "case_sensitive_layout",
                            "@value": "33",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT",
                            "@glib:nick": "case-sensitive-layout",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "72",
                                "#text": "[Case Sensitive Layout](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type33)"
                            }
                        },
                        {
                            "@name": "alternate_kana",
                            "@value": "34",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA",
                            "@glib:nick": "alternate-kana",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "73",
                                "#text": "[Alternate Kana](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type34)"
                            }
                        },
                        {
                            "@name": "stylistic_alternatives",
                            "@value": "35",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES",
                            "@glib:nick": "stylistic-alternatives",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "74",
                                "#text": "[Stylistic Alternatives](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type35)"
                            }
                        },
                        {
                            "@name": "contextual_alternatives",
                            "@value": "36",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES",
                            "@glib:nick": "contextual-alternatives",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "75",
                                "#text": "[Contextual Alternatives](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type36)"
                            }
                        },
                        {
                            "@name": "lower_case",
                            "@value": "37",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE",
                            "@glib:nick": "lower-case",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "76",
                                "#text": "[Lower Case](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type37)"
                            }
                        },
                        {
                            "@name": "upper_case",
                            "@value": "38",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE",
                            "@glib:nick": "upper-case",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "77",
                                "#text": "[Upper Case](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type38)"
                            }
                        },
                        {
                            "@name": "language_tag_type",
                            "@value": "39",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_LANGUAGE_TAG_TYPE",
                            "@glib:nick": "language-tag-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_LANGUAGE_TAG_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "78",
                                "#text": "[Language Tag](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type39)"
                            }
                        },
                        {
                            "@name": "cjk_roman_spacing_type",
                            "@value": "103",
                            "@c:identifier": "HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE",
                            "@glib:nick": "cjk-roman-spacing-type",
                            "@glib:name": "HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.h",
                                "@line": "79",
                                "#text": "[CJK Roman Spacing](https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html#Type103)"
                            }
                        }
                    ]
                },
                {
                    "@name": "buffer_cluster_level_t",
                    "@version": "0.9.42",
                    "@glib:type-name": "hb_buffer_cluster_level_t",
                    "@glib:get-type": "hb_gobject_buffer_cluster_level_get_type",
                    "@c:type": "hb_buffer_cluster_level_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "417",
                        "#text": "Data type for holding HarfBuzz's clustering behavior options. The cluster level\ndictates one aspect of how HarfBuzz will treat non-base characters\nduring shaping.\n\nIn @HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES, non-base\ncharacters are merged into the cluster of the base character that precedes them.\n\nIn @HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS, non-base characters are initially\nassigned their own cluster values, which are not merged into preceding base\nclusters. This allows HarfBuzz to perform additional operations like reorder\nsequences of adjacent marks.\n\n@HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES is the default, because it maintains\nbackward compatibility with older versions of HarfBuzz. New client programs that\ndo not need to maintain such backward compatibility are recommended to use\n@HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS instead of the default."
                    },
                    "member": [
                        {
                            "@name": "monotone_graphemes",
                            "@value": "0",
                            "@c:identifier": "HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES",
                            "@glib:nick": "monotone-graphemes",
                            "@glib:name": "HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "419",
                                "#text": "Return cluster values grouped by graphemes into\n  monotone order."
                            }
                        },
                        {
                            "@name": "monotone_characters",
                            "@value": "1",
                            "@c:identifier": "HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS",
                            "@glib:nick": "monotone-characters",
                            "@glib:name": "HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "421",
                                "#text": "Return cluster values grouped into monotone order."
                            }
                        },
                        {
                            "@name": "characters",
                            "@value": "2",
                            "@c:identifier": "HB_BUFFER_CLUSTER_LEVEL_CHARACTERS",
                            "@glib:nick": "characters",
                            "@glib:name": "HB_BUFFER_CLUSTER_LEVEL_CHARACTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "422",
                                "#text": "Don't group cluster values."
                            }
                        },
                        {
                            "@name": "default",
                            "@value": "0",
                            "@c:identifier": "HB_BUFFER_CLUSTER_LEVEL_DEFAULT",
                            "@glib:nick": "default",
                            "@glib:name": "HB_BUFFER_CLUSTER_LEVEL_DEFAULT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "423",
                                "#text": "Default cluster level,\n  equal to @HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES."
                            }
                        }
                    ]
                },
                {
                    "@name": "buffer_content_type_t",
                    "@glib:type-name": "hb_buffer_content_type_t",
                    "@glib:get-type": "hb_gobject_buffer_content_type_get_type",
                    "@c:type": "hb_buffer_content_type_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "283",
                        "#text": "The type of #hb_buffer_t contents."
                    },
                    "member": [
                        {
                            "@name": "invalid",
                            "@value": "0",
                            "@c:identifier": "HB_BUFFER_CONTENT_TYPE_INVALID",
                            "@glib:nick": "invalid",
                            "@glib:name": "HB_BUFFER_CONTENT_TYPE_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "285",
                                "#text": "Initial value for new buffer."
                            }
                        },
                        {
                            "@name": "unicode",
                            "@value": "1",
                            "@c:identifier": "HB_BUFFER_CONTENT_TYPE_UNICODE",
                            "@glib:nick": "unicode",
                            "@glib:name": "HB_BUFFER_CONTENT_TYPE_UNICODE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "286",
                                "#text": "The buffer contains input characters (before shaping)."
                            }
                        },
                        {
                            "@name": "glyphs",
                            "@value": "2",
                            "@c:identifier": "HB_BUFFER_CONTENT_TYPE_GLYPHS",
                            "@glib:nick": "glyphs",
                            "@glib:name": "HB_BUFFER_CONTENT_TYPE_GLYPHS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "287",
                                "#text": "The buffer contains output glyphs (after shaping)."
                            }
                        }
                    ]
                },
                {
                    "@name": "buffer_serialize_format_t",
                    "@version": "0.9.2",
                    "@glib:type-name": "hb_buffer_serialize_format_t",
                    "@glib:get-type": "hb_gobject_buffer_serialize_format_get_type",
                    "@c:type": "hb_buffer_serialize_format_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "622",
                        "#text": "The buffer serialization and de-serialization format used in\nhb_buffer_serialize_glyphs() and hb_buffer_deserialize_glyphs()."
                    },
                    "member": [
                        {
                            "@name": "text",
                            "@value": "1413830740",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FORMAT_TEXT",
                            "@glib:nick": "text",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FORMAT_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "624",
                                "#text": "a human-readable, plain text format."
                            }
                        },
                        {
                            "@name": "json",
                            "@value": "1246973774",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FORMAT_JSON",
                            "@glib:nick": "json",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FORMAT_JSON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "625",
                                "#text": "a machine-readable JSON format."
                            }
                        },
                        {
                            "@name": "invalid",
                            "@value": "0",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FORMAT_INVALID",
                            "@glib:nick": "invalid",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FORMAT_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "626",
                                "#text": "invalid format."
                            }
                        }
                    ]
                },
                {
                    "@name": "direction_t",
                    "@glib:type-name": "hb_direction_t",
                    "@glib:get-type": "hb_gobject_direction_get_type",
                    "@c:type": "hb_direction_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "214",
                        "#text": "The direction of a text segment or buffer.\n\nA segment can also be tested for horizontal or vertical\norientation (irrespective of specific direction) with\nHB_DIRECTION_IS_HORIZONTAL() or HB_DIRECTION_IS_VERTICAL()."
                    },
                    "member": [
                        {
                            "@name": "invalid",
                            "@value": "0",
                            "@c:identifier": "HB_DIRECTION_INVALID",
                            "@glib:nick": "invalid",
                            "@glib:name": "HB_DIRECTION_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "216",
                                "#text": "Initial, unset direction."
                            }
                        },
                        {
                            "@name": "ltr",
                            "@value": "4",
                            "@c:identifier": "HB_DIRECTION_LTR",
                            "@glib:nick": "ltr",
                            "@glib:name": "HB_DIRECTION_LTR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "217",
                                "#text": "Text is set horizontally from left to right."
                            }
                        },
                        {
                            "@name": "rtl",
                            "@value": "5",
                            "@c:identifier": "HB_DIRECTION_RTL",
                            "@glib:nick": "rtl",
                            "@glib:name": "HB_DIRECTION_RTL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "218",
                                "#text": "Text is set horizontally from right to left."
                            }
                        },
                        {
                            "@name": "ttb",
                            "@value": "6",
                            "@c:identifier": "HB_DIRECTION_TTB",
                            "@glib:nick": "ttb",
                            "@glib:name": "HB_DIRECTION_TTB",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "219",
                                "#text": "Text is set vertically from top to bottom."
                            }
                        },
                        {
                            "@name": "btt",
                            "@value": "7",
                            "@c:identifier": "HB_DIRECTION_BTT",
                            "@glib:nick": "btt",
                            "@glib:name": "HB_DIRECTION_BTT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "220",
                                "#text": "Text is set vertically from bottom to top."
                            }
                        }
                    ]
                },
                {
                    "@name": "memory_mode_t",
                    "@glib:type-name": "hb_memory_mode_t",
                    "@glib:get-type": "hb_gobject_memory_mode_get_type",
                    "@c:type": "hb_memory_mode_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.h",
                        "@line": "39",
                        "#text": "Data type holding the memory modes available to\nclient programs.\n\nRegarding these various memory-modes:\n\n- In no case shall the HarfBuzz client modify memory\n  that is passed to HarfBuzz in a blob.  If there is\n  any such possibility, @HB_MEMORY_MODE_DUPLICATE should be used\n  such that HarfBuzz makes a copy immediately,\n\n- Use @HB_MEMORY_MODE_READONLY otherwise, unless you really really\n  really know what you are doing,\n\n- @HB_MEMORY_MODE_WRITABLE is appropriate if you really made a\n  copy of data solely for the purpose of passing to\n  HarfBuzz and doing that just once (no reuse!),\n\n- If the font is mmap()ed, it's okay to use\n  @HB_MEMORY_READONLY_MAY_MAKE_WRITABLE, however, using that mode\n  correctly is very tricky.  Use @HB_MEMORY_MODE_READONLY instead."
                    },
                    "member": [
                        {
                            "@name": "duplicate",
                            "@value": "0",
                            "@c:identifier": "HB_MEMORY_MODE_DUPLICATE",
                            "@glib:nick": "duplicate",
                            "@glib:name": "HB_MEMORY_MODE_DUPLICATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.h",
                                "@line": "41",
                                "#text": "HarfBuzz immediately makes a copy of the data."
                            }
                        },
                        {
                            "@name": "readonly",
                            "@value": "1",
                            "@c:identifier": "HB_MEMORY_MODE_READONLY",
                            "@glib:nick": "readonly",
                            "@glib:name": "HB_MEMORY_MODE_READONLY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.h",
                                "@line": "42",
                                "#text": "HarfBuzz client will never modify the data,\n    and HarfBuzz will never modify the data."
                            }
                        },
                        {
                            "@name": "writable",
                            "@value": "2",
                            "@c:identifier": "HB_MEMORY_MODE_WRITABLE",
                            "@glib:nick": "writable",
                            "@glib:name": "HB_MEMORY_MODE_WRITABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.h",
                                "@line": "44",
                                "#text": "HarfBuzz client made a copy of the data solely\n    for HarfBuzz, so HarfBuzz may modify the data."
                            }
                        },
                        {
                            "@name": "readonly_may_make_writable",
                            "@value": "3",
                            "@c:identifier": "HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE",
                            "@glib:nick": "readonly-may-make-writable",
                            "@glib:name": "HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.h",
                                "@line": "46",
                                "#text": "See above"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_layout_baseline_tag_t",
                    "@version": "2.6.0",
                    "@glib:type-name": "hb_ot_layout_baseline_tag_t",
                    "@glib:get-type": "hb_gobject_ot_layout_baseline_tag_get_type",
                    "@c:type": "hb_ot_layout_baseline_tag_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.h",
                        "@line": "430",
                        "#text": "Baseline tags from [Baseline Tags](https://docs.microsoft.com/en-us/typography/opentype/spec/baselinetags) registry."
                    },
                    "member": [
                        {
                            "@name": "roman",
                            "@value": "1919905134",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_ROMAN",
                            "@glib:nick": "roman",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_ROMAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "432",
                                "#text": "The baseline used by alphabetic scripts such as Latin, Cyrillic and Greek.\nIn vertical writing mode, the alphabetic baseline for characters rotated 90 degrees clockwise.\n(This would not apply to alphabetic characters that remain upright in vertical writing mode, since these\ncharacters are not rotated.)"
                            }
                        },
                        {
                            "@name": "hanging",
                            "@value": "1751215719",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_HANGING",
                            "@glib:nick": "hanging",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_HANGING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "436",
                                "#text": "The hanging baseline. In horizontal direction, this is the horizontal\nline from which syllables seem, to hang in Tibetan and other similar scripts. In vertical writing mode,\nfor Tibetan (or some other similar script) characters rotated 90 degrees clockwise."
                            }
                        },
                        {
                            "@name": "ideo_face_bottom_or_left",
                            "@value": "1768121954",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_FACE_BOTTOM_OR_LEFT",
                            "@glib:nick": "ideo-face-bottom-or-left",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_FACE_BOTTOM_OR_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "439",
                                "#text": "Ideographic character face bottom or left edge,\nif the direction is horizontal or vertical, respectively."
                            }
                        },
                        {
                            "@name": "ideo_face_top_or_right",
                            "@value": "1768121972",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_FACE_TOP_OR_RIGHT",
                            "@glib:nick": "ideo-face-top-or-right",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_FACE_TOP_OR_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "441",
                                "#text": "Ideographic character face top or right edge,\nif the direction is horizontal or vertical, respectively."
                            }
                        },
                        {
                            "@name": "ideo_face_central",
                            "@value": "1231251043",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_FACE_CENTRAL",
                            "@glib:nick": "ideo-face-central",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_FACE_CENTRAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "443",
                                "#text": "The center of the ideographic character face. Since: 4.0.0"
                            }
                        },
                        {
                            "@name": "ideo_embox_bottom_or_left",
                            "@value": "1768187247",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_EMBOX_BOTTOM_OR_LEFT",
                            "@glib:nick": "ideo-embox-bottom-or-left",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_EMBOX_BOTTOM_OR_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "444",
                                "#text": "Ideographic em-box bottom or left edge,\nif the direction is horizontal or vertical, respectively."
                            }
                        },
                        {
                            "@name": "ideo_embox_top_or_right",
                            "@value": "1768191088",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_EMBOX_TOP_OR_RIGHT",
                            "@glib:nick": "ideo-embox-top-or-right",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_EMBOX_TOP_OR_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "446",
                                "#text": "Ideographic em-box top or right edge baseline,"
                            }
                        },
                        {
                            "@name": "ideo_embox_central",
                            "@value": "1231315813",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_EMBOX_CENTRAL",
                            "@glib:nick": "ideo-embox-central",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_IDEO_EMBOX_CENTRAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "447",
                                "#text": "The center of the ideographic em-box. Since: 4.0.0\nif the direction is horizontal or vertical, respectively."
                            }
                        },
                        {
                            "@name": "math",
                            "@value": "1835103336",
                            "@c:identifier": "HB_OT_LAYOUT_BASELINE_TAG_MATH",
                            "@glib:nick": "math",
                            "@glib:name": "HB_OT_LAYOUT_BASELINE_TAG_MATH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "449",
                                "#text": "The baseline about which mathematical characters are centered.\nIn vertical writing mode when mathematical characters rotated 90 degrees clockwise, are centered."
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_layout_glyph_class_t",
                    "@glib:type-name": "hb_ot_layout_glyph_class_t",
                    "@glib:get-type": "hb_gobject_ot_layout_glyph_class_get_type",
                    "@c:type": "hb_ot_layout_glyph_class_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.h",
                        "@line": "137",
                        "#text": "The GDEF classes defined for glyphs."
                    },
                    "member": [
                        {
                            "@name": "unclassified",
                            "@value": "0",
                            "@c:identifier": "HB_OT_LAYOUT_GLYPH_CLASS_UNCLASSIFIED",
                            "@glib:nick": "unclassified",
                            "@glib:name": "HB_OT_LAYOUT_GLYPH_CLASS_UNCLASSIFIED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "139",
                                "#text": "Glyphs not matching the other classifications"
                            }
                        },
                        {
                            "@name": "base_glyph",
                            "@value": "1",
                            "@c:identifier": "HB_OT_LAYOUT_GLYPH_CLASS_BASE_GLYPH",
                            "@glib:nick": "base-glyph",
                            "@glib:name": "HB_OT_LAYOUT_GLYPH_CLASS_BASE_GLYPH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "140",
                                "#text": "Spacing, single characters, capable of accepting marks"
                            }
                        },
                        {
                            "@name": "ligature",
                            "@value": "2",
                            "@c:identifier": "HB_OT_LAYOUT_GLYPH_CLASS_LIGATURE",
                            "@glib:nick": "ligature",
                            "@glib:name": "HB_OT_LAYOUT_GLYPH_CLASS_LIGATURE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "141",
                                "#text": "Glyphs that represent ligation of multiple characters"
                            }
                        },
                        {
                            "@name": "mark",
                            "@value": "3",
                            "@c:identifier": "HB_OT_LAYOUT_GLYPH_CLASS_MARK",
                            "@glib:nick": "mark",
                            "@glib:name": "HB_OT_LAYOUT_GLYPH_CLASS_MARK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "142",
                                "#text": "Non-spacing, combining glyphs that represent marks"
                            }
                        },
                        {
                            "@name": "component",
                            "@value": "4",
                            "@c:identifier": "HB_OT_LAYOUT_GLYPH_CLASS_COMPONENT",
                            "@glib:nick": "component",
                            "@glib:name": "HB_OT_LAYOUT_GLYPH_CLASS_COMPONENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.h",
                                "@line": "143",
                                "#text": "Spacing glyphs that represent part of a single character"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_math_constant_t",
                    "@version": "1.3.3",
                    "@glib:type-name": "hb_ot_math_constant_t",
                    "@glib:get-type": "hb_gobject_ot_math_constant_get_type",
                    "@c:type": "hb_ot_math_constant_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.h",
                        "@line": "68",
                        "#text": "The 'MATH' table constants, refer to\n[OpenType documentation](https://docs.microsoft.com/en-us/typography/opentype/spec/math#mathconstants-table)\nFor more explanations."
                    },
                    "member": [
                        {
                            "@name": "script_percent_scale_down",
                            "@value": "0",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SCRIPT_PERCENT_SCALE_DOWN",
                            "@glib:nick": "script-percent-scale-down",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SCRIPT_PERCENT_SCALE_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "70",
                                "#text": "scriptPercentScaleDown"
                            }
                        },
                        {
                            "@name": "script_script_percent_scale_down",
                            "@value": "1",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SCRIPT_SCRIPT_PERCENT_SCALE_DOWN",
                            "@glib:nick": "script-script-percent-scale-down",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SCRIPT_SCRIPT_PERCENT_SCALE_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "71",
                                "#text": "scriptScriptPercentScaleDown"
                            }
                        },
                        {
                            "@name": "delimited_sub_formula_min_height",
                            "@value": "2",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_DELIMITED_SUB_FORMULA_MIN_HEIGHT",
                            "@glib:nick": "delimited-sub-formula-min-height",
                            "@glib:name": "HB_OT_MATH_CONSTANT_DELIMITED_SUB_FORMULA_MIN_HEIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "72",
                                "#text": "delimitedSubFormulaMinHeight"
                            }
                        },
                        {
                            "@name": "display_operator_min_height",
                            "@value": "3",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_DISPLAY_OPERATOR_MIN_HEIGHT",
                            "@glib:nick": "display-operator-min-height",
                            "@glib:name": "HB_OT_MATH_CONSTANT_DISPLAY_OPERATOR_MIN_HEIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "73",
                                "#text": "displayOperatorMinHeight"
                            }
                        },
                        {
                            "@name": "math_leading",
                            "@value": "4",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_MATH_LEADING",
                            "@glib:nick": "math-leading",
                            "@glib:name": "HB_OT_MATH_CONSTANT_MATH_LEADING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "74",
                                "#text": "mathLeading"
                            }
                        },
                        {
                            "@name": "axis_height",
                            "@value": "5",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_AXIS_HEIGHT",
                            "@glib:nick": "axis-height",
                            "@glib:name": "HB_OT_MATH_CONSTANT_AXIS_HEIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "75",
                                "#text": "axisHeight"
                            }
                        },
                        {
                            "@name": "accent_base_height",
                            "@value": "6",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_ACCENT_BASE_HEIGHT",
                            "@glib:nick": "accent-base-height",
                            "@glib:name": "HB_OT_MATH_CONSTANT_ACCENT_BASE_HEIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "76",
                                "#text": "accentBaseHeight"
                            }
                        },
                        {
                            "@name": "flattened_accent_base_height",
                            "@value": "7",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FLATTENED_ACCENT_BASE_HEIGHT",
                            "@glib:nick": "flattened-accent-base-height",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FLATTENED_ACCENT_BASE_HEIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "77",
                                "#text": "flattenedAccentBaseHeight"
                            }
                        },
                        {
                            "@name": "subscript_shift_down",
                            "@value": "8",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUBSCRIPT_SHIFT_DOWN",
                            "@glib:nick": "subscript-shift-down",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUBSCRIPT_SHIFT_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "78",
                                "#text": "subscriptShiftDown"
                            }
                        },
                        {
                            "@name": "subscript_top_max",
                            "@value": "9",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUBSCRIPT_TOP_MAX",
                            "@glib:nick": "subscript-top-max",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUBSCRIPT_TOP_MAX",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "79",
                                "#text": "subscriptTopMax"
                            }
                        },
                        {
                            "@name": "subscript_baseline_drop_min",
                            "@value": "10",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUBSCRIPT_BASELINE_DROP_MIN",
                            "@glib:nick": "subscript-baseline-drop-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUBSCRIPT_BASELINE_DROP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "80",
                                "#text": "subscriptBaselineDropMin"
                            }
                        },
                        {
                            "@name": "superscript_shift_up",
                            "@value": "11",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_SHIFT_UP",
                            "@glib:nick": "superscript-shift-up",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_SHIFT_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "81",
                                "#text": "superscriptShiftUp"
                            }
                        },
                        {
                            "@name": "superscript_shift_up_cramped",
                            "@value": "12",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_SHIFT_UP_CRAMPED",
                            "@glib:nick": "superscript-shift-up-cramped",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_SHIFT_UP_CRAMPED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "82",
                                "#text": "superscriptShiftUpCramped"
                            }
                        },
                        {
                            "@name": "superscript_bottom_min",
                            "@value": "13",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_BOTTOM_MIN",
                            "@glib:nick": "superscript-bottom-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_BOTTOM_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "83",
                                "#text": "superscriptBottomMin"
                            }
                        },
                        {
                            "@name": "superscript_baseline_drop_max",
                            "@value": "14",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_BASELINE_DROP_MAX",
                            "@glib:nick": "superscript-baseline-drop-max",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_BASELINE_DROP_MAX",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "84",
                                "#text": "superscriptBaselineDropMax"
                            }
                        },
                        {
                            "@name": "sub_superscript_gap_min",
                            "@value": "15",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUB_SUPERSCRIPT_GAP_MIN",
                            "@glib:nick": "sub-superscript-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUB_SUPERSCRIPT_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "85",
                                "#text": "subSuperscriptGapMin"
                            }
                        },
                        {
                            "@name": "superscript_bottom_max_with_subscript",
                            "@value": "16",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_BOTTOM_MAX_WITH_SUBSCRIPT",
                            "@glib:nick": "superscript-bottom-max-with-subscript",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SUPERSCRIPT_BOTTOM_MAX_WITH_SUBSCRIPT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "86",
                                "#text": "superscriptBottomMaxWithSubscript"
                            }
                        },
                        {
                            "@name": "space_after_script",
                            "@value": "17",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SPACE_AFTER_SCRIPT",
                            "@glib:nick": "space-after-script",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SPACE_AFTER_SCRIPT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "87",
                                "#text": "spaceAfterScript"
                            }
                        },
                        {
                            "@name": "upper_limit_gap_min",
                            "@value": "18",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_UPPER_LIMIT_GAP_MIN",
                            "@glib:nick": "upper-limit-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_UPPER_LIMIT_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "88",
                                "#text": "upperLimitGapMin"
                            }
                        },
                        {
                            "@name": "upper_limit_baseline_rise_min",
                            "@value": "19",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_UPPER_LIMIT_BASELINE_RISE_MIN",
                            "@glib:nick": "upper-limit-baseline-rise-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_UPPER_LIMIT_BASELINE_RISE_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "89",
                                "#text": "upperLimitBaselineRiseMin"
                            }
                        },
                        {
                            "@name": "lower_limit_gap_min",
                            "@value": "20",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_LOWER_LIMIT_GAP_MIN",
                            "@glib:nick": "lower-limit-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_LOWER_LIMIT_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "90",
                                "#text": "lowerLimitGapMin"
                            }
                        },
                        {
                            "@name": "lower_limit_baseline_drop_min",
                            "@value": "21",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_LOWER_LIMIT_BASELINE_DROP_MIN",
                            "@glib:nick": "lower-limit-baseline-drop-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_LOWER_LIMIT_BASELINE_DROP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "91",
                                "#text": "lowerLimitBaselineDropMin"
                            }
                        },
                        {
                            "@name": "stack_top_shift_up",
                            "@value": "22",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STACK_TOP_SHIFT_UP",
                            "@glib:nick": "stack-top-shift-up",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STACK_TOP_SHIFT_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "92",
                                "#text": "stackTopShiftUp"
                            }
                        },
                        {
                            "@name": "stack_top_display_style_shift_up",
                            "@value": "23",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STACK_TOP_DISPLAY_STYLE_SHIFT_UP",
                            "@glib:nick": "stack-top-display-style-shift-up",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STACK_TOP_DISPLAY_STYLE_SHIFT_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "93",
                                "#text": "stackTopDisplayStyleShiftUp"
                            }
                        },
                        {
                            "@name": "stack_bottom_shift_down",
                            "@value": "24",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STACK_BOTTOM_SHIFT_DOWN",
                            "@glib:nick": "stack-bottom-shift-down",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STACK_BOTTOM_SHIFT_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "94",
                                "#text": "stackBottomShiftDown"
                            }
                        },
                        {
                            "@name": "stack_bottom_display_style_shift_down",
                            "@value": "25",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STACK_BOTTOM_DISPLAY_STYLE_SHIFT_DOWN",
                            "@glib:nick": "stack-bottom-display-style-shift-down",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STACK_BOTTOM_DISPLAY_STYLE_SHIFT_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "95",
                                "#text": "stackBottomDisplayStyleShiftDown"
                            }
                        },
                        {
                            "@name": "stack_gap_min",
                            "@value": "26",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STACK_GAP_MIN",
                            "@glib:nick": "stack-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STACK_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "96",
                                "#text": "stackGapMin"
                            }
                        },
                        {
                            "@name": "stack_display_style_gap_min",
                            "@value": "27",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STACK_DISPLAY_STYLE_GAP_MIN",
                            "@glib:nick": "stack-display-style-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STACK_DISPLAY_STYLE_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "97",
                                "#text": "stackDisplayStyleGapMin"
                            }
                        },
                        {
                            "@name": "stretch_stack_top_shift_up",
                            "@value": "28",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STRETCH_STACK_TOP_SHIFT_UP",
                            "@glib:nick": "stretch-stack-top-shift-up",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STRETCH_STACK_TOP_SHIFT_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "98",
                                "#text": "stretchStackTopShiftUp"
                            }
                        },
                        {
                            "@name": "stretch_stack_bottom_shift_down",
                            "@value": "29",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STRETCH_STACK_BOTTOM_SHIFT_DOWN",
                            "@glib:nick": "stretch-stack-bottom-shift-down",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STRETCH_STACK_BOTTOM_SHIFT_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "99",
                                "#text": "stretchStackBottomShiftDown"
                            }
                        },
                        {
                            "@name": "stretch_stack_gap_above_min",
                            "@value": "30",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STRETCH_STACK_GAP_ABOVE_MIN",
                            "@glib:nick": "stretch-stack-gap-above-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STRETCH_STACK_GAP_ABOVE_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "100",
                                "#text": "stretchStackGapAboveMin"
                            }
                        },
                        {
                            "@name": "stretch_stack_gap_below_min",
                            "@value": "31",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_STRETCH_STACK_GAP_BELOW_MIN",
                            "@glib:nick": "stretch-stack-gap-below-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_STRETCH_STACK_GAP_BELOW_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "101",
                                "#text": "stretchStackGapBelowMin"
                            }
                        },
                        {
                            "@name": "fraction_numerator_shift_up",
                            "@value": "32",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_SHIFT_UP",
                            "@glib:nick": "fraction-numerator-shift-up",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_SHIFT_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "102",
                                "#text": "fractionNumeratorShiftUp"
                            }
                        },
                        {
                            "@name": "fraction_numerator_display_style_shift_up",
                            "@value": "33",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_DISPLAY_STYLE_SHIFT_UP",
                            "@glib:nick": "fraction-numerator-display-style-shift-up",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_DISPLAY_STYLE_SHIFT_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "103",
                                "#text": "fractionNumeratorDisplayStyleShiftUp"
                            }
                        },
                        {
                            "@name": "fraction_denominator_shift_down",
                            "@value": "34",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_SHIFT_DOWN",
                            "@glib:nick": "fraction-denominator-shift-down",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_SHIFT_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "104",
                                "#text": "fractionDenominatorShiftDown"
                            }
                        },
                        {
                            "@name": "fraction_denominator_display_style_shift_down",
                            "@value": "35",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_DISPLAY_STYLE_SHIFT_DOWN",
                            "@glib:nick": "fraction-denominator-display-style-shift-down",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_DISPLAY_STYLE_SHIFT_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "105",
                                "#text": "fractionDenominatorDisplayStyleShiftDown"
                            }
                        },
                        {
                            "@name": "fraction_numerator_gap_min",
                            "@value": "36",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_GAP_MIN",
                            "@glib:nick": "fraction-numerator-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "106",
                                "#text": "fractionNumeratorGapMin"
                            }
                        },
                        {
                            "@name": "fraction_num_display_style_gap_min",
                            "@value": "37",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_NUM_DISPLAY_STYLE_GAP_MIN",
                            "@glib:nick": "fraction-num-display-style-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_NUM_DISPLAY_STYLE_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "107",
                                "#text": "fractionNumDisplayStyleGapMin"
                            }
                        },
                        {
                            "@name": "fraction_rule_thickness",
                            "@value": "38",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_RULE_THICKNESS",
                            "@glib:nick": "fraction-rule-thickness",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_RULE_THICKNESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "108",
                                "#text": "fractionRuleThickness"
                            }
                        },
                        {
                            "@name": "fraction_denominator_gap_min",
                            "@value": "39",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_GAP_MIN",
                            "@glib:nick": "fraction-denominator-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "109",
                                "#text": "fractionDenominatorGapMin"
                            }
                        },
                        {
                            "@name": "fraction_denom_display_style_gap_min",
                            "@value": "40",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_FRACTION_DENOM_DISPLAY_STYLE_GAP_MIN",
                            "@glib:nick": "fraction-denom-display-style-gap-min",
                            "@glib:name": "HB_OT_MATH_CONSTANT_FRACTION_DENOM_DISPLAY_STYLE_GAP_MIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "110",
                                "#text": "fractionDenomDisplayStyleGapMin"
                            }
                        },
                        {
                            "@name": "skewed_fraction_horizontal_gap",
                            "@value": "41",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SKEWED_FRACTION_HORIZONTAL_GAP",
                            "@glib:nick": "skewed-fraction-horizontal-gap",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SKEWED_FRACTION_HORIZONTAL_GAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "111",
                                "#text": "skewedFractionHorizontalGap"
                            }
                        },
                        {
                            "@name": "skewed_fraction_vertical_gap",
                            "@value": "42",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_SKEWED_FRACTION_VERTICAL_GAP",
                            "@glib:nick": "skewed-fraction-vertical-gap",
                            "@glib:name": "HB_OT_MATH_CONSTANT_SKEWED_FRACTION_VERTICAL_GAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "112",
                                "#text": "skewedFractionVerticalGap"
                            }
                        },
                        {
                            "@name": "overbar_vertical_gap",
                            "@value": "43",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_OVERBAR_VERTICAL_GAP",
                            "@glib:nick": "overbar-vertical-gap",
                            "@glib:name": "HB_OT_MATH_CONSTANT_OVERBAR_VERTICAL_GAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "113",
                                "#text": "overbarVerticalGap"
                            }
                        },
                        {
                            "@name": "overbar_rule_thickness",
                            "@value": "44",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_OVERBAR_RULE_THICKNESS",
                            "@glib:nick": "overbar-rule-thickness",
                            "@glib:name": "HB_OT_MATH_CONSTANT_OVERBAR_RULE_THICKNESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "114",
                                "#text": "overbarRuleThickness"
                            }
                        },
                        {
                            "@name": "overbar_extra_ascender",
                            "@value": "45",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_OVERBAR_EXTRA_ASCENDER",
                            "@glib:nick": "overbar-extra-ascender",
                            "@glib:name": "HB_OT_MATH_CONSTANT_OVERBAR_EXTRA_ASCENDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "115",
                                "#text": "overbarExtraAscender"
                            }
                        },
                        {
                            "@name": "underbar_vertical_gap",
                            "@value": "46",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_UNDERBAR_VERTICAL_GAP",
                            "@glib:nick": "underbar-vertical-gap",
                            "@glib:name": "HB_OT_MATH_CONSTANT_UNDERBAR_VERTICAL_GAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "116",
                                "#text": "underbarVerticalGap"
                            }
                        },
                        {
                            "@name": "underbar_rule_thickness",
                            "@value": "47",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_UNDERBAR_RULE_THICKNESS",
                            "@glib:nick": "underbar-rule-thickness",
                            "@glib:name": "HB_OT_MATH_CONSTANT_UNDERBAR_RULE_THICKNESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "117",
                                "#text": "underbarRuleThickness"
                            }
                        },
                        {
                            "@name": "underbar_extra_descender",
                            "@value": "48",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_UNDERBAR_EXTRA_DESCENDER",
                            "@glib:nick": "underbar-extra-descender",
                            "@glib:name": "HB_OT_MATH_CONSTANT_UNDERBAR_EXTRA_DESCENDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "118",
                                "#text": "underbarExtraDescender"
                            }
                        },
                        {
                            "@name": "radical_vertical_gap",
                            "@value": "49",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_RADICAL_VERTICAL_GAP",
                            "@glib:nick": "radical-vertical-gap",
                            "@glib:name": "HB_OT_MATH_CONSTANT_RADICAL_VERTICAL_GAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "119",
                                "#text": "radicalVerticalGap"
                            }
                        },
                        {
                            "@name": "radical_display_style_vertical_gap",
                            "@value": "50",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_RADICAL_DISPLAY_STYLE_VERTICAL_GAP",
                            "@glib:nick": "radical-display-style-vertical-gap",
                            "@glib:name": "HB_OT_MATH_CONSTANT_RADICAL_DISPLAY_STYLE_VERTICAL_GAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "120",
                                "#text": "radicalDisplayStyleVerticalGap"
                            }
                        },
                        {
                            "@name": "radical_rule_thickness",
                            "@value": "51",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_RADICAL_RULE_THICKNESS",
                            "@glib:nick": "radical-rule-thickness",
                            "@glib:name": "HB_OT_MATH_CONSTANT_RADICAL_RULE_THICKNESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "121",
                                "#text": "radicalRuleThickness"
                            }
                        },
                        {
                            "@name": "radical_extra_ascender",
                            "@value": "52",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_RADICAL_EXTRA_ASCENDER",
                            "@glib:nick": "radical-extra-ascender",
                            "@glib:name": "HB_OT_MATH_CONSTANT_RADICAL_EXTRA_ASCENDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "122",
                                "#text": "radicalExtraAscender"
                            }
                        },
                        {
                            "@name": "radical_kern_before_degree",
                            "@value": "53",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_RADICAL_KERN_BEFORE_DEGREE",
                            "@glib:nick": "radical-kern-before-degree",
                            "@glib:name": "HB_OT_MATH_CONSTANT_RADICAL_KERN_BEFORE_DEGREE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "123",
                                "#text": "radicalKernBeforeDegree"
                            }
                        },
                        {
                            "@name": "radical_kern_after_degree",
                            "@value": "54",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_RADICAL_KERN_AFTER_DEGREE",
                            "@glib:nick": "radical-kern-after-degree",
                            "@glib:name": "HB_OT_MATH_CONSTANT_RADICAL_KERN_AFTER_DEGREE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "124",
                                "#text": "radicalKernAfterDegree"
                            }
                        },
                        {
                            "@name": "radical_degree_bottom_raise_percent",
                            "@value": "55",
                            "@c:identifier": "HB_OT_MATH_CONSTANT_RADICAL_DEGREE_BOTTOM_RAISE_PERCENT",
                            "@glib:nick": "radical-degree-bottom-raise-percent",
                            "@glib:name": "HB_OT_MATH_CONSTANT_RADICAL_DEGREE_BOTTOM_RAISE_PERCENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "125",
                                "#text": "radicalDegreeBottomRaisePercent"
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_math_kern_t",
                    "@version": "1.3.3",
                    "@glib:type-name": "hb_ot_math_kern_t",
                    "@glib:get-type": "hb_gobject_ot_math_kern_get_type",
                    "@c:type": "hb_ot_math_kern_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.h",
                        "@line": "192",
                        "#text": "The math kerning-table types defined for the four corners\nof a glyph."
                    },
                    "member": [
                        {
                            "@name": "top_right",
                            "@value": "0",
                            "@c:identifier": "HB_OT_MATH_KERN_TOP_RIGHT",
                            "@glib:nick": "top-right",
                            "@glib:name": "HB_OT_MATH_KERN_TOP_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "194",
                                "#text": "The top right corner of the glyph."
                            }
                        },
                        {
                            "@name": "top_left",
                            "@value": "1",
                            "@c:identifier": "HB_OT_MATH_KERN_TOP_LEFT",
                            "@glib:nick": "top-left",
                            "@glib:name": "HB_OT_MATH_KERN_TOP_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "195",
                                "#text": "The top left corner of the glyph."
                            }
                        },
                        {
                            "@name": "bottom_right",
                            "@value": "2",
                            "@c:identifier": "HB_OT_MATH_KERN_BOTTOM_RIGHT",
                            "@glib:nick": "bottom-right",
                            "@glib:name": "HB_OT_MATH_KERN_BOTTOM_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "196",
                                "#text": "The bottom right corner of the glyph."
                            }
                        },
                        {
                            "@name": "bottom_left",
                            "@value": "3",
                            "@c:identifier": "HB_OT_MATH_KERN_BOTTOM_LEFT",
                            "@glib:nick": "bottom-left",
                            "@glib:name": "HB_OT_MATH_KERN_BOTTOM_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.h",
                                "@line": "197",
                                "#text": "The bottom left corner of the glyph."
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_meta_tag_t",
                    "@version": "2.6.0",
                    "@glib:type-name": "hb_ot_meta_tag_t",
                    "@glib:get-type": "hb_gobject_ot_meta_tag_get_type",
                    "@c:type": "hb_ot_meta_tag_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-meta.h",
                        "@line": "36",
                        "#text": "Known metadata tags from https://docs.microsoft.com/en-us/typography/opentype/spec/meta"
                    },
                    "member": [
                        {
                            "@name": "design_languages",
                            "@value": "1684827751",
                            "@c:identifier": "HB_OT_META_TAG_DESIGN_LANGUAGES",
                            "@glib:nick": "design-languages",
                            "@glib:name": "HB_OT_META_TAG_DESIGN_LANGUAGES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-meta.h",
                                "@line": "38",
                                "#text": "Design languages. Text, using only\nBasic Latin (ASCII) characters. Indicates languages and/or scripts\nfor the user audiences that the font was primarily designed for."
                            }
                        },
                        {
                            "@name": "supported_languages",
                            "@value": "1936485991",
                            "@c:identifier": "HB_OT_META_TAG_SUPPORTED_LANGUAGES",
                            "@glib:nick": "supported-languages",
                            "@glib:name": "HB_OT_META_TAG_SUPPORTED_LANGUAGES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-meta.h",
                                "@line": "41",
                                "#text": "Supported languages. Text, using\nonly Basic Latin (ASCII) characters. Indicates languages and/or scripts\nthat the font is declared to be capable of supporting."
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_metrics_tag_t",
                    "@version": "2.6.0",
                    "@glib:type-name": "hb_ot_metrics_tag_t",
                    "@glib:get-type": "hb_gobject_ot_metrics_tag_get_type",
                    "@c:type": "hb_ot_metrics_tag_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-metrics.h",
                        "@line": "38",
                        "#text": "Metric tags corresponding to [MVAR Value\nTags](https://docs.microsoft.com/en-us/typography/opentype/spec/mvar#value-tags)"
                    },
                    "member": [
                        {
                            "@name": "horizontal_ascender",
                            "@value": "1751216995",
                            "@c:identifier": "HB_OT_METRICS_TAG_HORIZONTAL_ASCENDER",
                            "@glib:nick": "horizontal-ascender",
                            "@glib:name": "HB_OT_METRICS_TAG_HORIZONTAL_ASCENDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "40",
                                "#text": "horizontal ascender."
                            }
                        },
                        {
                            "@name": "horizontal_descender",
                            "@value": "1751413603",
                            "@c:identifier": "HB_OT_METRICS_TAG_HORIZONTAL_DESCENDER",
                            "@glib:nick": "horizontal-descender",
                            "@glib:name": "HB_OT_METRICS_TAG_HORIZONTAL_DESCENDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "41",
                                "#text": "horizontal descender."
                            }
                        },
                        {
                            "@name": "horizontal_line_gap",
                            "@value": "1751934832",
                            "@c:identifier": "HB_OT_METRICS_TAG_HORIZONTAL_LINE_GAP",
                            "@glib:nick": "horizontal-line-gap",
                            "@glib:name": "HB_OT_METRICS_TAG_HORIZONTAL_LINE_GAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "42",
                                "#text": "horizontal line gap."
                            }
                        },
                        {
                            "@name": "horizontal_clipping_ascent",
                            "@value": "1751346273",
                            "@c:identifier": "HB_OT_METRICS_TAG_HORIZONTAL_CLIPPING_ASCENT",
                            "@glib:nick": "horizontal-clipping-ascent",
                            "@glib:name": "HB_OT_METRICS_TAG_HORIZONTAL_CLIPPING_ASCENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "43",
                                "#text": "horizontal clipping ascent."
                            }
                        },
                        {
                            "@name": "horizontal_clipping_descent",
                            "@value": "1751346276",
                            "@c:identifier": "HB_OT_METRICS_TAG_HORIZONTAL_CLIPPING_DESCENT",
                            "@glib:nick": "horizontal-clipping-descent",
                            "@glib:name": "HB_OT_METRICS_TAG_HORIZONTAL_CLIPPING_DESCENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "44",
                                "#text": "horizontal clipping descent."
                            }
                        },
                        {
                            "@name": "vertical_ascender",
                            "@value": "1986098019",
                            "@c:identifier": "HB_OT_METRICS_TAG_VERTICAL_ASCENDER",
                            "@glib:nick": "vertical-ascender",
                            "@glib:name": "HB_OT_METRICS_TAG_VERTICAL_ASCENDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "45",
                                "#text": "vertical ascender."
                            }
                        },
                        {
                            "@name": "vertical_descender",
                            "@value": "1986294627",
                            "@c:identifier": "HB_OT_METRICS_TAG_VERTICAL_DESCENDER",
                            "@glib:nick": "vertical-descender",
                            "@glib:name": "HB_OT_METRICS_TAG_VERTICAL_DESCENDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "46",
                                "#text": "vertical descender."
                            }
                        },
                        {
                            "@name": "vertical_line_gap",
                            "@value": "1986815856",
                            "@c:identifier": "HB_OT_METRICS_TAG_VERTICAL_LINE_GAP",
                            "@glib:nick": "vertical-line-gap",
                            "@glib:name": "HB_OT_METRICS_TAG_VERTICAL_LINE_GAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "47",
                                "#text": "vertical line gap."
                            }
                        },
                        {
                            "@name": "horizontal_caret_rise",
                            "@value": "1751347827",
                            "@c:identifier": "HB_OT_METRICS_TAG_HORIZONTAL_CARET_RISE",
                            "@glib:nick": "horizontal-caret-rise",
                            "@glib:name": "HB_OT_METRICS_TAG_HORIZONTAL_CARET_RISE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "48",
                                "#text": "horizontal caret rise."
                            }
                        },
                        {
                            "@name": "horizontal_caret_run",
                            "@value": "1751347822",
                            "@c:identifier": "HB_OT_METRICS_TAG_HORIZONTAL_CARET_RUN",
                            "@glib:nick": "horizontal-caret-run",
                            "@glib:name": "HB_OT_METRICS_TAG_HORIZONTAL_CARET_RUN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "49",
                                "#text": "horizontal caret run."
                            }
                        },
                        {
                            "@name": "horizontal_caret_offset",
                            "@value": "1751347046",
                            "@c:identifier": "HB_OT_METRICS_TAG_HORIZONTAL_CARET_OFFSET",
                            "@glib:nick": "horizontal-caret-offset",
                            "@glib:name": "HB_OT_METRICS_TAG_HORIZONTAL_CARET_OFFSET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "50",
                                "#text": "horizontal caret offset."
                            }
                        },
                        {
                            "@name": "vertical_caret_rise",
                            "@value": "1986228851",
                            "@c:identifier": "HB_OT_METRICS_TAG_VERTICAL_CARET_RISE",
                            "@glib:nick": "vertical-caret-rise",
                            "@glib:name": "HB_OT_METRICS_TAG_VERTICAL_CARET_RISE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "51",
                                "#text": "vertical caret rise."
                            }
                        },
                        {
                            "@name": "vertical_caret_run",
                            "@value": "1986228846",
                            "@c:identifier": "HB_OT_METRICS_TAG_VERTICAL_CARET_RUN",
                            "@glib:nick": "vertical-caret-run",
                            "@glib:name": "HB_OT_METRICS_TAG_VERTICAL_CARET_RUN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "52",
                                "#text": "vertical caret run."
                            }
                        },
                        {
                            "@name": "vertical_caret_offset",
                            "@value": "1986228070",
                            "@c:identifier": "HB_OT_METRICS_TAG_VERTICAL_CARET_OFFSET",
                            "@glib:nick": "vertical-caret-offset",
                            "@glib:name": "HB_OT_METRICS_TAG_VERTICAL_CARET_OFFSET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "53",
                                "#text": "vertical caret offset."
                            }
                        },
                        {
                            "@name": "x_height",
                            "@value": "2020108148",
                            "@c:identifier": "HB_OT_METRICS_TAG_X_HEIGHT",
                            "@glib:nick": "x-height",
                            "@glib:name": "HB_OT_METRICS_TAG_X_HEIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "54",
                                "#text": "x height."
                            }
                        },
                        {
                            "@name": "cap_height",
                            "@value": "1668311156",
                            "@c:identifier": "HB_OT_METRICS_TAG_CAP_HEIGHT",
                            "@glib:nick": "cap-height",
                            "@glib:name": "HB_OT_METRICS_TAG_CAP_HEIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "55",
                                "#text": "cap height."
                            }
                        },
                        {
                            "@name": "subscript_em_x_size",
                            "@value": "1935833203",
                            "@c:identifier": "HB_OT_METRICS_TAG_SUBSCRIPT_EM_X_SIZE",
                            "@glib:nick": "subscript-em-x-size",
                            "@glib:name": "HB_OT_METRICS_TAG_SUBSCRIPT_EM_X_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "56",
                                "#text": "subscript em x size."
                            }
                        },
                        {
                            "@name": "subscript_em_y_size",
                            "@value": "1935833459",
                            "@c:identifier": "HB_OT_METRICS_TAG_SUBSCRIPT_EM_Y_SIZE",
                            "@glib:nick": "subscript-em-y-size",
                            "@glib:name": "HB_OT_METRICS_TAG_SUBSCRIPT_EM_Y_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "57",
                                "#text": "subscript em y size."
                            }
                        },
                        {
                            "@name": "subscript_em_x_offset",
                            "@value": "1935833199",
                            "@c:identifier": "HB_OT_METRICS_TAG_SUBSCRIPT_EM_X_OFFSET",
                            "@glib:nick": "subscript-em-x-offset",
                            "@glib:name": "HB_OT_METRICS_TAG_SUBSCRIPT_EM_X_OFFSET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "58",
                                "#text": "subscript em x offset."
                            }
                        },
                        {
                            "@name": "subscript_em_y_offset",
                            "@value": "1935833455",
                            "@c:identifier": "HB_OT_METRICS_TAG_SUBSCRIPT_EM_Y_OFFSET",
                            "@glib:nick": "subscript-em-y-offset",
                            "@glib:name": "HB_OT_METRICS_TAG_SUBSCRIPT_EM_Y_OFFSET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "59",
                                "#text": "subscript em y offset."
                            }
                        },
                        {
                            "@name": "superscript_em_x_size",
                            "@value": "1936750707",
                            "@c:identifier": "HB_OT_METRICS_TAG_SUPERSCRIPT_EM_X_SIZE",
                            "@glib:nick": "superscript-em-x-size",
                            "@glib:name": "HB_OT_METRICS_TAG_SUPERSCRIPT_EM_X_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "60",
                                "#text": "superscript em x size."
                            }
                        },
                        {
                            "@name": "superscript_em_y_size",
                            "@value": "1936750963",
                            "@c:identifier": "HB_OT_METRICS_TAG_SUPERSCRIPT_EM_Y_SIZE",
                            "@glib:nick": "superscript-em-y-size",
                            "@glib:name": "HB_OT_METRICS_TAG_SUPERSCRIPT_EM_Y_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "61",
                                "#text": "superscript em y size."
                            }
                        },
                        {
                            "@name": "superscript_em_x_offset",
                            "@value": "1936750703",
                            "@c:identifier": "HB_OT_METRICS_TAG_SUPERSCRIPT_EM_X_OFFSET",
                            "@glib:nick": "superscript-em-x-offset",
                            "@glib:name": "HB_OT_METRICS_TAG_SUPERSCRIPT_EM_X_OFFSET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "62",
                                "#text": "superscript em x offset."
                            }
                        },
                        {
                            "@name": "superscript_em_y_offset",
                            "@value": "1936750959",
                            "@c:identifier": "HB_OT_METRICS_TAG_SUPERSCRIPT_EM_Y_OFFSET",
                            "@glib:nick": "superscript-em-y-offset",
                            "@glib:name": "HB_OT_METRICS_TAG_SUPERSCRIPT_EM_Y_OFFSET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "63",
                                "#text": "superscript em y offset."
                            }
                        },
                        {
                            "@name": "strikeout_size",
                            "@value": "1937011315",
                            "@c:identifier": "HB_OT_METRICS_TAG_STRIKEOUT_SIZE",
                            "@glib:nick": "strikeout-size",
                            "@glib:name": "HB_OT_METRICS_TAG_STRIKEOUT_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "64",
                                "#text": "strikeout size."
                            }
                        },
                        {
                            "@name": "strikeout_offset",
                            "@value": "1937011311",
                            "@c:identifier": "HB_OT_METRICS_TAG_STRIKEOUT_OFFSET",
                            "@glib:nick": "strikeout-offset",
                            "@glib:name": "HB_OT_METRICS_TAG_STRIKEOUT_OFFSET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "65",
                                "#text": "strikeout offset."
                            }
                        },
                        {
                            "@name": "underline_size",
                            "@value": "1970168947",
                            "@c:identifier": "HB_OT_METRICS_TAG_UNDERLINE_SIZE",
                            "@glib:nick": "underline-size",
                            "@glib:name": "HB_OT_METRICS_TAG_UNDERLINE_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "66",
                                "#text": "underline size."
                            }
                        },
                        {
                            "@name": "underline_offset",
                            "@value": "1970168943",
                            "@c:identifier": "HB_OT_METRICS_TAG_UNDERLINE_OFFSET",
                            "@glib:nick": "underline-offset",
                            "@glib:name": "HB_OT_METRICS_TAG_UNDERLINE_OFFSET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-metrics.h",
                                "@line": "67",
                                "#text": "underline offset."
                            }
                        }
                    ]
                },
                {
                    "@name": "script_t",
                    "@glib:type-name": "hb_script_t",
                    "@glib:get-type": "hb_gobject_script_get_type",
                    "@c:type": "hb_script_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "333",
                        "#text": "Data type for scripts. Each #hb_script_t's value is an #hb_tag_t corresponding\nto the four-letter values defined by [ISO 15924](https://unicode.org/iso15924/).\n\nSee also the Script (sc) property of the Unicode Character Database."
                    },
                    "member": [
                        {
                            "@name": "common",
                            "@value": "1517910393",
                            "@c:identifier": "HB_SCRIPT_COMMON",
                            "@glib:nick": "common",
                            "@glib:name": "HB_SCRIPT_COMMON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "335",
                                "#text": "`Zyyy`"
                            }
                        },
                        {
                            "@name": "inherited",
                            "@value": "1516858984",
                            "@c:identifier": "HB_SCRIPT_INHERITED",
                            "@glib:nick": "inherited",
                            "@glib:name": "HB_SCRIPT_INHERITED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "336",
                                "#text": "`Zinh`"
                            }
                        },
                        {
                            "@name": "unknown",
                            "@value": "1517976186",
                            "@c:identifier": "HB_SCRIPT_UNKNOWN",
                            "@glib:nick": "unknown",
                            "@glib:name": "HB_SCRIPT_UNKNOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "337",
                                "#text": "`Zzzz`"
                            }
                        },
                        {
                            "@name": "arabic",
                            "@value": "1098015074",
                            "@c:identifier": "HB_SCRIPT_ARABIC",
                            "@glib:nick": "arabic",
                            "@glib:name": "HB_SCRIPT_ARABIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "338",
                                "#text": "`Arab`"
                            }
                        },
                        {
                            "@name": "armenian",
                            "@value": "1098018158",
                            "@c:identifier": "HB_SCRIPT_ARMENIAN",
                            "@glib:nick": "armenian",
                            "@glib:name": "HB_SCRIPT_ARMENIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "339",
                                "#text": "`Armn`"
                            }
                        },
                        {
                            "@name": "bengali",
                            "@value": "1113943655",
                            "@c:identifier": "HB_SCRIPT_BENGALI",
                            "@glib:nick": "bengali",
                            "@glib:name": "HB_SCRIPT_BENGALI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "340",
                                "#text": "`Beng`"
                            }
                        },
                        {
                            "@name": "cyrillic",
                            "@value": "1132032620",
                            "@c:identifier": "HB_SCRIPT_CYRILLIC",
                            "@glib:nick": "cyrillic",
                            "@glib:name": "HB_SCRIPT_CYRILLIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "341",
                                "#text": "`Cyrl`"
                            }
                        },
                        {
                            "@name": "devanagari",
                            "@value": "1147500129",
                            "@c:identifier": "HB_SCRIPT_DEVANAGARI",
                            "@glib:nick": "devanagari",
                            "@glib:name": "HB_SCRIPT_DEVANAGARI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "342",
                                "#text": "`Deva`"
                            }
                        },
                        {
                            "@name": "georgian",
                            "@value": "1197830002",
                            "@c:identifier": "HB_SCRIPT_GEORGIAN",
                            "@glib:nick": "georgian",
                            "@glib:name": "HB_SCRIPT_GEORGIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "343",
                                "#text": "`Geor`"
                            }
                        },
                        {
                            "@name": "greek",
                            "@value": "1198679403",
                            "@c:identifier": "HB_SCRIPT_GREEK",
                            "@glib:nick": "greek",
                            "@glib:name": "HB_SCRIPT_GREEK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "344",
                                "#text": "`Grek`"
                            }
                        },
                        {
                            "@name": "gujarati",
                            "@value": "1198877298",
                            "@c:identifier": "HB_SCRIPT_GUJARATI",
                            "@glib:nick": "gujarati",
                            "@glib:name": "HB_SCRIPT_GUJARATI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "345",
                                "#text": "`Gujr`"
                            }
                        },
                        {
                            "@name": "gurmukhi",
                            "@value": "1198879349",
                            "@c:identifier": "HB_SCRIPT_GURMUKHI",
                            "@glib:nick": "gurmukhi",
                            "@glib:name": "HB_SCRIPT_GURMUKHI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "346",
                                "#text": "`Guru`"
                            }
                        },
                        {
                            "@name": "hangul",
                            "@value": "1214344807",
                            "@c:identifier": "HB_SCRIPT_HANGUL",
                            "@glib:nick": "hangul",
                            "@glib:name": "HB_SCRIPT_HANGUL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "347",
                                "#text": "`Hang`"
                            }
                        },
                        {
                            "@name": "han",
                            "@value": "1214344809",
                            "@c:identifier": "HB_SCRIPT_HAN",
                            "@glib:nick": "han",
                            "@glib:name": "HB_SCRIPT_HAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "348",
                                "#text": "`Hani`"
                            }
                        },
                        {
                            "@name": "hebrew",
                            "@value": "1214603890",
                            "@c:identifier": "HB_SCRIPT_HEBREW",
                            "@glib:nick": "hebrew",
                            "@glib:name": "HB_SCRIPT_HEBREW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "349",
                                "#text": "`Hebr`"
                            }
                        },
                        {
                            "@name": "hiragana",
                            "@value": "1214870113",
                            "@c:identifier": "HB_SCRIPT_HIRAGANA",
                            "@glib:nick": "hiragana",
                            "@glib:name": "HB_SCRIPT_HIRAGANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "350",
                                "#text": "`Hira`"
                            }
                        },
                        {
                            "@name": "kannada",
                            "@value": "1265525857",
                            "@c:identifier": "HB_SCRIPT_KANNADA",
                            "@glib:nick": "kannada",
                            "@glib:name": "HB_SCRIPT_KANNADA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "351",
                                "#text": "`Knda`"
                            }
                        },
                        {
                            "@name": "katakana",
                            "@value": "1264676449",
                            "@c:identifier": "HB_SCRIPT_KATAKANA",
                            "@glib:nick": "katakana",
                            "@glib:name": "HB_SCRIPT_KATAKANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "352",
                                "#text": "`Kana`"
                            }
                        },
                        {
                            "@name": "lao",
                            "@value": "1281453935",
                            "@c:identifier": "HB_SCRIPT_LAO",
                            "@glib:nick": "lao",
                            "@glib:name": "HB_SCRIPT_LAO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "353",
                                "#text": "`Laoo`"
                            }
                        },
                        {
                            "@name": "latin",
                            "@value": "1281455214",
                            "@c:identifier": "HB_SCRIPT_LATIN",
                            "@glib:nick": "latin",
                            "@glib:name": "HB_SCRIPT_LATIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "354",
                                "#text": "`Latn`"
                            }
                        },
                        {
                            "@name": "malayalam",
                            "@value": "1298954605",
                            "@c:identifier": "HB_SCRIPT_MALAYALAM",
                            "@glib:nick": "malayalam",
                            "@glib:name": "HB_SCRIPT_MALAYALAM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "355",
                                "#text": "`Mlym`"
                            }
                        },
                        {
                            "@name": "oriya",
                            "@value": "1332902241",
                            "@c:identifier": "HB_SCRIPT_ORIYA",
                            "@glib:nick": "oriya",
                            "@glib:name": "HB_SCRIPT_ORIYA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "356",
                                "#text": "`Orya`"
                            }
                        },
                        {
                            "@name": "tamil",
                            "@value": "1415671148",
                            "@c:identifier": "HB_SCRIPT_TAMIL",
                            "@glib:nick": "tamil",
                            "@glib:name": "HB_SCRIPT_TAMIL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "357",
                                "#text": "`Taml`"
                            }
                        },
                        {
                            "@name": "telugu",
                            "@value": "1415933045",
                            "@c:identifier": "HB_SCRIPT_TELUGU",
                            "@glib:nick": "telugu",
                            "@glib:name": "HB_SCRIPT_TELUGU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "358",
                                "#text": "`Telu`"
                            }
                        },
                        {
                            "@name": "thai",
                            "@value": "1416126825",
                            "@c:identifier": "HB_SCRIPT_THAI",
                            "@glib:nick": "thai",
                            "@glib:name": "HB_SCRIPT_THAI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "359",
                                "#text": "`Thai`"
                            }
                        },
                        {
                            "@name": "tibetan",
                            "@value": "1416192628",
                            "@c:identifier": "HB_SCRIPT_TIBETAN",
                            "@glib:nick": "tibetan",
                            "@glib:name": "HB_SCRIPT_TIBETAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "360",
                                "#text": "`Tibt`"
                            }
                        },
                        {
                            "@name": "bopomofo",
                            "@value": "1114599535",
                            "@c:identifier": "HB_SCRIPT_BOPOMOFO",
                            "@glib:nick": "bopomofo",
                            "@glib:name": "HB_SCRIPT_BOPOMOFO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "361",
                                "#text": "`Bopo`"
                            }
                        },
                        {
                            "@name": "braille",
                            "@value": "1114792297",
                            "@c:identifier": "HB_SCRIPT_BRAILLE",
                            "@glib:nick": "braille",
                            "@glib:name": "HB_SCRIPT_BRAILLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "362",
                                "#text": "`Brai`"
                            }
                        },
                        {
                            "@name": "canadian_syllabics",
                            "@value": "1130458739",
                            "@c:identifier": "HB_SCRIPT_CANADIAN_SYLLABICS",
                            "@glib:nick": "canadian-syllabics",
                            "@glib:name": "HB_SCRIPT_CANADIAN_SYLLABICS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "363",
                                "#text": "`Cans`"
                            }
                        },
                        {
                            "@name": "cherokee",
                            "@value": "1130915186",
                            "@c:identifier": "HB_SCRIPT_CHEROKEE",
                            "@glib:nick": "cherokee",
                            "@glib:name": "HB_SCRIPT_CHEROKEE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "364",
                                "#text": "`Cher`"
                            }
                        },
                        {
                            "@name": "ethiopic",
                            "@value": "1165256809",
                            "@c:identifier": "HB_SCRIPT_ETHIOPIC",
                            "@glib:nick": "ethiopic",
                            "@glib:name": "HB_SCRIPT_ETHIOPIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "365",
                                "#text": "`Ethi`"
                            }
                        },
                        {
                            "@name": "khmer",
                            "@value": "1265134962",
                            "@c:identifier": "HB_SCRIPT_KHMER",
                            "@glib:nick": "khmer",
                            "@glib:name": "HB_SCRIPT_KHMER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "366",
                                "#text": "`Khmr`"
                            }
                        },
                        {
                            "@name": "mongolian",
                            "@value": "1299148391",
                            "@c:identifier": "HB_SCRIPT_MONGOLIAN",
                            "@glib:nick": "mongolian",
                            "@glib:name": "HB_SCRIPT_MONGOLIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "367",
                                "#text": "`Mong`"
                            }
                        },
                        {
                            "@name": "myanmar",
                            "@value": "1299803506",
                            "@c:identifier": "HB_SCRIPT_MYANMAR",
                            "@glib:nick": "myanmar",
                            "@glib:name": "HB_SCRIPT_MYANMAR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "368",
                                "#text": "`Mymr`"
                            }
                        },
                        {
                            "@name": "ogham",
                            "@value": "1332175213",
                            "@c:identifier": "HB_SCRIPT_OGHAM",
                            "@glib:nick": "ogham",
                            "@glib:name": "HB_SCRIPT_OGHAM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "369",
                                "#text": "`Ogam`"
                            }
                        },
                        {
                            "@name": "runic",
                            "@value": "1383427698",
                            "@c:identifier": "HB_SCRIPT_RUNIC",
                            "@glib:nick": "runic",
                            "@glib:name": "HB_SCRIPT_RUNIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "370",
                                "#text": "`Runr`"
                            }
                        },
                        {
                            "@name": "sinhala",
                            "@value": "1399418472",
                            "@c:identifier": "HB_SCRIPT_SINHALA",
                            "@glib:nick": "sinhala",
                            "@glib:name": "HB_SCRIPT_SINHALA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "371",
                                "#text": "`Sinh`"
                            }
                        },
                        {
                            "@name": "syriac",
                            "@value": "1400468067",
                            "@c:identifier": "HB_SCRIPT_SYRIAC",
                            "@glib:nick": "syriac",
                            "@glib:name": "HB_SCRIPT_SYRIAC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "372",
                                "#text": "`Syrc`"
                            }
                        },
                        {
                            "@name": "thaana",
                            "@value": "1416126817",
                            "@c:identifier": "HB_SCRIPT_THAANA",
                            "@glib:nick": "thaana",
                            "@glib:name": "HB_SCRIPT_THAANA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "373",
                                "#text": "`Thaa`"
                            }
                        },
                        {
                            "@name": "yi",
                            "@value": "1500080489",
                            "@c:identifier": "HB_SCRIPT_YI",
                            "@glib:nick": "yi",
                            "@glib:name": "HB_SCRIPT_YI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "374",
                                "#text": "`Yiii`"
                            }
                        },
                        {
                            "@name": "deseret",
                            "@value": "1148416628",
                            "@c:identifier": "HB_SCRIPT_DESERET",
                            "@glib:nick": "deseret",
                            "@glib:name": "HB_SCRIPT_DESERET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "375",
                                "#text": "`Dsrt`"
                            }
                        },
                        {
                            "@name": "gothic",
                            "@value": "1198486632",
                            "@c:identifier": "HB_SCRIPT_GOTHIC",
                            "@glib:nick": "gothic",
                            "@glib:name": "HB_SCRIPT_GOTHIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "376",
                                "#text": "`Goth`"
                            }
                        },
                        {
                            "@name": "old_italic",
                            "@value": "1232363884",
                            "@c:identifier": "HB_SCRIPT_OLD_ITALIC",
                            "@glib:nick": "old-italic",
                            "@glib:name": "HB_SCRIPT_OLD_ITALIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "377",
                                "#text": "`Ital`"
                            }
                        },
                        {
                            "@name": "buhid",
                            "@value": "1114990692",
                            "@c:identifier": "HB_SCRIPT_BUHID",
                            "@glib:nick": "buhid",
                            "@glib:name": "HB_SCRIPT_BUHID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "378",
                                "#text": "`Buhd`"
                            }
                        },
                        {
                            "@name": "hanunoo",
                            "@value": "1214344815",
                            "@c:identifier": "HB_SCRIPT_HANUNOO",
                            "@glib:nick": "hanunoo",
                            "@glib:name": "HB_SCRIPT_HANUNOO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "379",
                                "#text": "`Hano`"
                            }
                        },
                        {
                            "@name": "tagalog",
                            "@value": "1416064103",
                            "@c:identifier": "HB_SCRIPT_TAGALOG",
                            "@glib:nick": "tagalog",
                            "@glib:name": "HB_SCRIPT_TAGALOG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "380",
                                "#text": "`Tglg`"
                            }
                        },
                        {
                            "@name": "tagbanwa",
                            "@value": "1415669602",
                            "@c:identifier": "HB_SCRIPT_TAGBANWA",
                            "@glib:nick": "tagbanwa",
                            "@glib:name": "HB_SCRIPT_TAGBANWA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "381",
                                "#text": "`Tagb`"
                            }
                        },
                        {
                            "@name": "cypriot",
                            "@value": "1131442804",
                            "@c:identifier": "HB_SCRIPT_CYPRIOT",
                            "@glib:nick": "cypriot",
                            "@glib:name": "HB_SCRIPT_CYPRIOT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "382",
                                "#text": "`Cprt`"
                            }
                        },
                        {
                            "@name": "limbu",
                            "@value": "1281977698",
                            "@c:identifier": "HB_SCRIPT_LIMBU",
                            "@glib:nick": "limbu",
                            "@glib:name": "HB_SCRIPT_LIMBU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "383",
                                "#text": "`Limb`"
                            }
                        },
                        {
                            "@name": "linear_b",
                            "@value": "1281977954",
                            "@c:identifier": "HB_SCRIPT_LINEAR_B",
                            "@glib:nick": "linear-b",
                            "@glib:name": "HB_SCRIPT_LINEAR_B",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "384",
                                "#text": "`Linb`"
                            }
                        },
                        {
                            "@name": "osmanya",
                            "@value": "1332964705",
                            "@c:identifier": "HB_SCRIPT_OSMANYA",
                            "@glib:nick": "osmanya",
                            "@glib:name": "HB_SCRIPT_OSMANYA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "385",
                                "#text": "`Osma`"
                            }
                        },
                        {
                            "@name": "shavian",
                            "@value": "1399349623",
                            "@c:identifier": "HB_SCRIPT_SHAVIAN",
                            "@glib:nick": "shavian",
                            "@glib:name": "HB_SCRIPT_SHAVIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "386",
                                "#text": "`Shaw`"
                            }
                        },
                        {
                            "@name": "tai_le",
                            "@value": "1415670885",
                            "@c:identifier": "HB_SCRIPT_TAI_LE",
                            "@glib:nick": "tai-le",
                            "@glib:name": "HB_SCRIPT_TAI_LE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "387",
                                "#text": "`Tale`"
                            }
                        },
                        {
                            "@name": "ugaritic",
                            "@value": "1432838514",
                            "@c:identifier": "HB_SCRIPT_UGARITIC",
                            "@glib:nick": "ugaritic",
                            "@glib:name": "HB_SCRIPT_UGARITIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "388",
                                "#text": "`Ugar`"
                            }
                        },
                        {
                            "@name": "buginese",
                            "@value": "1114990441",
                            "@c:identifier": "HB_SCRIPT_BUGINESE",
                            "@glib:nick": "buginese",
                            "@glib:name": "HB_SCRIPT_BUGINESE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "389",
                                "#text": "`Bugi`"
                            }
                        },
                        {
                            "@name": "coptic",
                            "@value": "1131376756",
                            "@c:identifier": "HB_SCRIPT_COPTIC",
                            "@glib:nick": "coptic",
                            "@glib:name": "HB_SCRIPT_COPTIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "390",
                                "#text": "`Copt`"
                            }
                        },
                        {
                            "@name": "glagolitic",
                            "@value": "1198285159",
                            "@c:identifier": "HB_SCRIPT_GLAGOLITIC",
                            "@glib:nick": "glagolitic",
                            "@glib:name": "HB_SCRIPT_GLAGOLITIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "391",
                                "#text": "`Glag`"
                            }
                        },
                        {
                            "@name": "kharoshthi",
                            "@value": "1265131890",
                            "@c:identifier": "HB_SCRIPT_KHAROSHTHI",
                            "@glib:nick": "kharoshthi",
                            "@glib:name": "HB_SCRIPT_KHAROSHTHI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "392",
                                "#text": "`Khar`"
                            }
                        },
                        {
                            "@name": "new_tai_lue",
                            "@value": "1415670901",
                            "@c:identifier": "HB_SCRIPT_NEW_TAI_LUE",
                            "@glib:nick": "new-tai-lue",
                            "@glib:name": "HB_SCRIPT_NEW_TAI_LUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "393",
                                "#text": "`Talu`"
                            }
                        },
                        {
                            "@name": "old_persian",
                            "@value": "1483761007",
                            "@c:identifier": "HB_SCRIPT_OLD_PERSIAN",
                            "@glib:nick": "old-persian",
                            "@glib:name": "HB_SCRIPT_OLD_PERSIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "394",
                                "#text": "`Xpeo`"
                            }
                        },
                        {
                            "@name": "syloti_nagri",
                            "@value": "1400466543",
                            "@c:identifier": "HB_SCRIPT_SYLOTI_NAGRI",
                            "@glib:nick": "syloti-nagri",
                            "@glib:name": "HB_SCRIPT_SYLOTI_NAGRI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "395",
                                "#text": "`Sylo`"
                            }
                        },
                        {
                            "@name": "tifinagh",
                            "@value": "1415999079",
                            "@c:identifier": "HB_SCRIPT_TIFINAGH",
                            "@glib:nick": "tifinagh",
                            "@glib:name": "HB_SCRIPT_TIFINAGH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "396",
                                "#text": "`Tfng`"
                            }
                        },
                        {
                            "@name": "balinese",
                            "@value": "1113681001",
                            "@c:identifier": "HB_SCRIPT_BALINESE",
                            "@glib:nick": "balinese",
                            "@glib:name": "HB_SCRIPT_BALINESE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "397",
                                "#text": "`Bali`"
                            }
                        },
                        {
                            "@name": "cuneiform",
                            "@value": "1483961720",
                            "@c:identifier": "HB_SCRIPT_CUNEIFORM",
                            "@glib:nick": "cuneiform",
                            "@glib:name": "HB_SCRIPT_CUNEIFORM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "398",
                                "#text": "`Xsux`"
                            }
                        },
                        {
                            "@name": "nko",
                            "@value": "1315663727",
                            "@c:identifier": "HB_SCRIPT_NKO",
                            "@glib:nick": "nko",
                            "@glib:name": "HB_SCRIPT_NKO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "399",
                                "#text": "`Nkoo`"
                            }
                        },
                        {
                            "@name": "phags_pa",
                            "@value": "1349017959",
                            "@c:identifier": "HB_SCRIPT_PHAGS_PA",
                            "@glib:nick": "phags-pa",
                            "@glib:name": "HB_SCRIPT_PHAGS_PA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "400",
                                "#text": "`Phag`"
                            }
                        },
                        {
                            "@name": "phoenician",
                            "@value": "1349021304",
                            "@c:identifier": "HB_SCRIPT_PHOENICIAN",
                            "@glib:nick": "phoenician",
                            "@glib:name": "HB_SCRIPT_PHOENICIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "401",
                                "#text": "`Phnx`"
                            }
                        },
                        {
                            "@name": "carian",
                            "@value": "1130459753",
                            "@c:identifier": "HB_SCRIPT_CARIAN",
                            "@glib:nick": "carian",
                            "@glib:name": "HB_SCRIPT_CARIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "402",
                                "#text": "`Cari`"
                            }
                        },
                        {
                            "@name": "cham",
                            "@value": "1130914157",
                            "@c:identifier": "HB_SCRIPT_CHAM",
                            "@glib:nick": "cham",
                            "@glib:name": "HB_SCRIPT_CHAM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "403",
                                "#text": "`Cham`"
                            }
                        },
                        {
                            "@name": "kayah_li",
                            "@value": "1264675945",
                            "@c:identifier": "HB_SCRIPT_KAYAH_LI",
                            "@glib:nick": "kayah-li",
                            "@glib:name": "HB_SCRIPT_KAYAH_LI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "404",
                                "#text": "`Kali`"
                            }
                        },
                        {
                            "@name": "lepcha",
                            "@value": "1281716323",
                            "@c:identifier": "HB_SCRIPT_LEPCHA",
                            "@glib:nick": "lepcha",
                            "@glib:name": "HB_SCRIPT_LEPCHA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "405",
                                "#text": "`Lepc`"
                            }
                        },
                        {
                            "@name": "lycian",
                            "@value": "1283023721",
                            "@c:identifier": "HB_SCRIPT_LYCIAN",
                            "@glib:nick": "lycian",
                            "@glib:name": "HB_SCRIPT_LYCIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "406",
                                "#text": "`Lyci`"
                            }
                        },
                        {
                            "@name": "lydian",
                            "@value": "1283023977",
                            "@c:identifier": "HB_SCRIPT_LYDIAN",
                            "@glib:nick": "lydian",
                            "@glib:name": "HB_SCRIPT_LYDIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "407",
                                "#text": "`Lydi`"
                            }
                        },
                        {
                            "@name": "ol_chiki",
                            "@value": "1332503403",
                            "@c:identifier": "HB_SCRIPT_OL_CHIKI",
                            "@glib:nick": "ol-chiki",
                            "@glib:name": "HB_SCRIPT_OL_CHIKI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "408",
                                "#text": "`Olck`"
                            }
                        },
                        {
                            "@name": "rejang",
                            "@value": "1382706791",
                            "@c:identifier": "HB_SCRIPT_REJANG",
                            "@glib:nick": "rejang",
                            "@glib:name": "HB_SCRIPT_REJANG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "409",
                                "#text": "`Rjng`"
                            }
                        },
                        {
                            "@name": "saurashtra",
                            "@value": "1398895986",
                            "@c:identifier": "HB_SCRIPT_SAURASHTRA",
                            "@glib:nick": "saurashtra",
                            "@glib:name": "HB_SCRIPT_SAURASHTRA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "410",
                                "#text": "`Saur`"
                            }
                        },
                        {
                            "@name": "sundanese",
                            "@value": "1400204900",
                            "@c:identifier": "HB_SCRIPT_SUNDANESE",
                            "@glib:nick": "sundanese",
                            "@glib:name": "HB_SCRIPT_SUNDANESE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "411",
                                "#text": "`Sund`"
                            }
                        },
                        {
                            "@name": "vai",
                            "@value": "1449224553",
                            "@c:identifier": "HB_SCRIPT_VAI",
                            "@glib:nick": "vai",
                            "@glib:name": "HB_SCRIPT_VAI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "412",
                                "#text": "`Vaii`"
                            }
                        },
                        {
                            "@name": "avestan",
                            "@value": "1098281844",
                            "@c:identifier": "HB_SCRIPT_AVESTAN",
                            "@glib:nick": "avestan",
                            "@glib:name": "HB_SCRIPT_AVESTAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "413",
                                "#text": "`Avst`"
                            }
                        },
                        {
                            "@name": "bamum",
                            "@value": "1113681269",
                            "@c:identifier": "HB_SCRIPT_BAMUM",
                            "@glib:nick": "bamum",
                            "@glib:name": "HB_SCRIPT_BAMUM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "414",
                                "#text": "`Bamu`"
                            }
                        },
                        {
                            "@name": "egyptian_hieroglyphs",
                            "@value": "1164409200",
                            "@c:identifier": "HB_SCRIPT_EGYPTIAN_HIEROGLYPHS",
                            "@glib:nick": "egyptian-hieroglyphs",
                            "@glib:name": "HB_SCRIPT_EGYPTIAN_HIEROGLYPHS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "415",
                                "#text": "`Egyp`"
                            }
                        },
                        {
                            "@name": "imperial_aramaic",
                            "@value": "1098018153",
                            "@c:identifier": "HB_SCRIPT_IMPERIAL_ARAMAIC",
                            "@glib:nick": "imperial-aramaic",
                            "@glib:name": "HB_SCRIPT_IMPERIAL_ARAMAIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "416",
                                "#text": "`Armi`"
                            }
                        },
                        {
                            "@name": "inscriptional_pahlavi",
                            "@value": "1349020777",
                            "@c:identifier": "HB_SCRIPT_INSCRIPTIONAL_PAHLAVI",
                            "@glib:nick": "inscriptional-pahlavi",
                            "@glib:name": "HB_SCRIPT_INSCRIPTIONAL_PAHLAVI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "417",
                                "#text": "`Phli`"
                            }
                        },
                        {
                            "@name": "inscriptional_parthian",
                            "@value": "1349678185",
                            "@c:identifier": "HB_SCRIPT_INSCRIPTIONAL_PARTHIAN",
                            "@glib:nick": "inscriptional-parthian",
                            "@glib:name": "HB_SCRIPT_INSCRIPTIONAL_PARTHIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "418",
                                "#text": "`Prti`"
                            }
                        },
                        {
                            "@name": "javanese",
                            "@value": "1247901281",
                            "@c:identifier": "HB_SCRIPT_JAVANESE",
                            "@glib:nick": "javanese",
                            "@glib:name": "HB_SCRIPT_JAVANESE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "419",
                                "#text": "`Java`"
                            }
                        },
                        {
                            "@name": "kaithi",
                            "@value": "1265920105",
                            "@c:identifier": "HB_SCRIPT_KAITHI",
                            "@glib:nick": "kaithi",
                            "@glib:name": "HB_SCRIPT_KAITHI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "420",
                                "#text": "`Kthi`"
                            }
                        },
                        {
                            "@name": "lisu",
                            "@value": "1281979253",
                            "@c:identifier": "HB_SCRIPT_LISU",
                            "@glib:nick": "lisu",
                            "@glib:name": "HB_SCRIPT_LISU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "421",
                                "#text": "`Lisu`"
                            }
                        },
                        {
                            "@name": "meetei_mayek",
                            "@value": "1299473769",
                            "@c:identifier": "HB_SCRIPT_MEETEI_MAYEK",
                            "@glib:nick": "meetei-mayek",
                            "@glib:name": "HB_SCRIPT_MEETEI_MAYEK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "422",
                                "#text": "`Mtei`"
                            }
                        },
                        {
                            "@name": "old_south_arabian",
                            "@value": "1398895202",
                            "@c:identifier": "HB_SCRIPT_OLD_SOUTH_ARABIAN",
                            "@glib:nick": "old-south-arabian",
                            "@glib:name": "HB_SCRIPT_OLD_SOUTH_ARABIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "423",
                                "#text": "`Sarb`"
                            }
                        },
                        {
                            "@name": "old_turkic",
                            "@value": "1332898664",
                            "@c:identifier": "HB_SCRIPT_OLD_TURKIC",
                            "@glib:nick": "old-turkic",
                            "@glib:name": "HB_SCRIPT_OLD_TURKIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "424",
                                "#text": "`Orkh`"
                            }
                        },
                        {
                            "@name": "samaritan",
                            "@value": "1398893938",
                            "@c:identifier": "HB_SCRIPT_SAMARITAN",
                            "@glib:nick": "samaritan",
                            "@glib:name": "HB_SCRIPT_SAMARITAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "425",
                                "#text": "`Samr`"
                            }
                        },
                        {
                            "@name": "tai_tham",
                            "@value": "1281453665",
                            "@c:identifier": "HB_SCRIPT_TAI_THAM",
                            "@glib:nick": "tai-tham",
                            "@glib:name": "HB_SCRIPT_TAI_THAM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "426",
                                "#text": "`Lana`"
                            }
                        },
                        {
                            "@name": "tai_viet",
                            "@value": "1415673460",
                            "@c:identifier": "HB_SCRIPT_TAI_VIET",
                            "@glib:nick": "tai-viet",
                            "@glib:name": "HB_SCRIPT_TAI_VIET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "427",
                                "#text": "`Tavt`"
                            }
                        },
                        {
                            "@name": "batak",
                            "@value": "1113683051",
                            "@c:identifier": "HB_SCRIPT_BATAK",
                            "@glib:nick": "batak",
                            "@glib:name": "HB_SCRIPT_BATAK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "428",
                                "#text": "`Batk`"
                            }
                        },
                        {
                            "@name": "brahmi",
                            "@value": "1114792296",
                            "@c:identifier": "HB_SCRIPT_BRAHMI",
                            "@glib:nick": "brahmi",
                            "@glib:name": "HB_SCRIPT_BRAHMI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "429",
                                "#text": "`Brah`"
                            }
                        },
                        {
                            "@name": "mandaic",
                            "@value": "1298230884",
                            "@c:identifier": "HB_SCRIPT_MANDAIC",
                            "@glib:nick": "mandaic",
                            "@glib:name": "HB_SCRIPT_MANDAIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "430",
                                "#text": "`Mand`"
                            }
                        },
                        {
                            "@name": "chakma",
                            "@value": "1130457965",
                            "@c:identifier": "HB_SCRIPT_CHAKMA",
                            "@glib:nick": "chakma",
                            "@glib:name": "HB_SCRIPT_CHAKMA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "431",
                                "#text": "`Cakm`"
                            }
                        },
                        {
                            "@name": "meroitic_cursive",
                            "@value": "1298494051",
                            "@c:identifier": "HB_SCRIPT_MEROITIC_CURSIVE",
                            "@glib:nick": "meroitic-cursive",
                            "@glib:name": "HB_SCRIPT_MEROITIC_CURSIVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "432",
                                "#text": "`Merc`"
                            }
                        },
                        {
                            "@name": "meroitic_hieroglyphs",
                            "@value": "1298494063",
                            "@c:identifier": "HB_SCRIPT_MEROITIC_HIEROGLYPHS",
                            "@glib:nick": "meroitic-hieroglyphs",
                            "@glib:name": "HB_SCRIPT_MEROITIC_HIEROGLYPHS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "433",
                                "#text": "`Mero`"
                            }
                        },
                        {
                            "@name": "miao",
                            "@value": "1349284452",
                            "@c:identifier": "HB_SCRIPT_MIAO",
                            "@glib:nick": "miao",
                            "@glib:name": "HB_SCRIPT_MIAO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "434",
                                "#text": "`Plrd`"
                            }
                        },
                        {
                            "@name": "sharada",
                            "@value": "1399353956",
                            "@c:identifier": "HB_SCRIPT_SHARADA",
                            "@glib:nick": "sharada",
                            "@glib:name": "HB_SCRIPT_SHARADA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "435",
                                "#text": "`Shrd`"
                            }
                        },
                        {
                            "@name": "sora_sompeng",
                            "@value": "1399812705",
                            "@c:identifier": "HB_SCRIPT_SORA_SOMPENG",
                            "@glib:nick": "sora-sompeng",
                            "@glib:name": "HB_SCRIPT_SORA_SOMPENG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "436",
                                "#text": "`Sora`"
                            }
                        },
                        {
                            "@name": "takri",
                            "@value": "1415670642",
                            "@c:identifier": "HB_SCRIPT_TAKRI",
                            "@glib:nick": "takri",
                            "@glib:name": "HB_SCRIPT_TAKRI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "437",
                                "#text": "`Takr`"
                            }
                        },
                        {
                            "@name": "bassa_vah",
                            "@value": "1113682803",
                            "@c:identifier": "HB_SCRIPT_BASSA_VAH",
                            "@glib:nick": "bassa-vah",
                            "@glib:name": "HB_SCRIPT_BASSA_VAH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "438",
                                "#text": "`Bass`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "caucasian_albanian",
                            "@value": "1097295970",
                            "@c:identifier": "HB_SCRIPT_CAUCASIAN_ALBANIAN",
                            "@glib:nick": "caucasian-albanian",
                            "@glib:name": "HB_SCRIPT_CAUCASIAN_ALBANIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "439",
                                "#text": "`Aghb`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "duployan",
                            "@value": "1148547180",
                            "@c:identifier": "HB_SCRIPT_DUPLOYAN",
                            "@glib:nick": "duployan",
                            "@glib:name": "HB_SCRIPT_DUPLOYAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "440",
                                "#text": "`Dupl`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "elbasan",
                            "@value": "1164730977",
                            "@c:identifier": "HB_SCRIPT_ELBASAN",
                            "@glib:nick": "elbasan",
                            "@glib:name": "HB_SCRIPT_ELBASAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "441",
                                "#text": "`Elba`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "grantha",
                            "@value": "1198678382",
                            "@c:identifier": "HB_SCRIPT_GRANTHA",
                            "@glib:nick": "grantha",
                            "@glib:name": "HB_SCRIPT_GRANTHA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "442",
                                "#text": "`Gran`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "khojki",
                            "@value": "1265135466",
                            "@c:identifier": "HB_SCRIPT_KHOJKI",
                            "@glib:nick": "khojki",
                            "@glib:name": "HB_SCRIPT_KHOJKI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "443",
                                "#text": "`Khoj`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "khudawadi",
                            "@value": "1399418468",
                            "@c:identifier": "HB_SCRIPT_KHUDAWADI",
                            "@glib:nick": "khudawadi",
                            "@glib:name": "HB_SCRIPT_KHUDAWADI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "444",
                                "#text": "`Sind`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "linear_a",
                            "@value": "1281977953",
                            "@c:identifier": "HB_SCRIPT_LINEAR_A",
                            "@glib:nick": "linear-a",
                            "@glib:name": "HB_SCRIPT_LINEAR_A",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "445",
                                "#text": "`Lina`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "mahajani",
                            "@value": "1298229354",
                            "@c:identifier": "HB_SCRIPT_MAHAJANI",
                            "@glib:nick": "mahajani",
                            "@glib:name": "HB_SCRIPT_MAHAJANI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "446",
                                "#text": "`Mahj`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "manichaean",
                            "@value": "1298230889",
                            "@c:identifier": "HB_SCRIPT_MANICHAEAN",
                            "@glib:nick": "manichaean",
                            "@glib:name": "HB_SCRIPT_MANICHAEAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "447",
                                "#text": "`Mani`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "mende_kikakui",
                            "@value": "1298493028",
                            "@c:identifier": "HB_SCRIPT_MENDE_KIKAKUI",
                            "@glib:nick": "mende-kikakui",
                            "@glib:name": "HB_SCRIPT_MENDE_KIKAKUI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "448",
                                "#text": "`Mend`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "modi",
                            "@value": "1299145833",
                            "@c:identifier": "HB_SCRIPT_MODI",
                            "@glib:nick": "modi",
                            "@glib:name": "HB_SCRIPT_MODI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "449",
                                "#text": "`Modi`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "mro",
                            "@value": "1299345263",
                            "@c:identifier": "HB_SCRIPT_MRO",
                            "@glib:nick": "mro",
                            "@glib:name": "HB_SCRIPT_MRO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "450",
                                "#text": "`Mroo`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "nabataean",
                            "@value": "1315070324",
                            "@c:identifier": "HB_SCRIPT_NABATAEAN",
                            "@glib:nick": "nabataean",
                            "@glib:name": "HB_SCRIPT_NABATAEAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "451",
                                "#text": "`Nbat`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "old_north_arabian",
                            "@value": "1315009122",
                            "@c:identifier": "HB_SCRIPT_OLD_NORTH_ARABIAN",
                            "@glib:nick": "old-north-arabian",
                            "@glib:name": "HB_SCRIPT_OLD_NORTH_ARABIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "452",
                                "#text": "`Narb`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "old_permic",
                            "@value": "1348825709",
                            "@c:identifier": "HB_SCRIPT_OLD_PERMIC",
                            "@glib:nick": "old-permic",
                            "@glib:name": "HB_SCRIPT_OLD_PERMIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "453",
                                "#text": "`Perm`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "pahawh_hmong",
                            "@value": "1215131239",
                            "@c:identifier": "HB_SCRIPT_PAHAWH_HMONG",
                            "@glib:nick": "pahawh-hmong",
                            "@glib:name": "HB_SCRIPT_PAHAWH_HMONG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "454",
                                "#text": "`Hmng`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "palmyrene",
                            "@value": "1348562029",
                            "@c:identifier": "HB_SCRIPT_PALMYRENE",
                            "@glib:nick": "palmyrene",
                            "@glib:name": "HB_SCRIPT_PALMYRENE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "455",
                                "#text": "`Palm`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "pau_cin_hau",
                            "@value": "1348564323",
                            "@c:identifier": "HB_SCRIPT_PAU_CIN_HAU",
                            "@glib:nick": "pau-cin-hau",
                            "@glib:name": "HB_SCRIPT_PAU_CIN_HAU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "456",
                                "#text": "`Pauc`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "psalter_pahlavi",
                            "@value": "1349020784",
                            "@c:identifier": "HB_SCRIPT_PSALTER_PAHLAVI",
                            "@glib:nick": "psalter-pahlavi",
                            "@glib:name": "HB_SCRIPT_PSALTER_PAHLAVI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "457",
                                "#text": "`Phlp`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "siddham",
                            "@value": "1399415908",
                            "@c:identifier": "HB_SCRIPT_SIDDHAM",
                            "@glib:nick": "siddham",
                            "@glib:name": "HB_SCRIPT_SIDDHAM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "458",
                                "#text": "`Sidd`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "tirhuta",
                            "@value": "1416196712",
                            "@c:identifier": "HB_SCRIPT_TIRHUTA",
                            "@glib:nick": "tirhuta",
                            "@glib:name": "HB_SCRIPT_TIRHUTA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "459",
                                "#text": "`Tirh`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "warang_citi",
                            "@value": "1466004065",
                            "@c:identifier": "HB_SCRIPT_WARANG_CITI",
                            "@glib:nick": "warang-citi",
                            "@glib:name": "HB_SCRIPT_WARANG_CITI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "460",
                                "#text": "`Wara`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "ahom",
                            "@value": "1097363309",
                            "@c:identifier": "HB_SCRIPT_AHOM",
                            "@glib:nick": "ahom",
                            "@glib:name": "HB_SCRIPT_AHOM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "461",
                                "#text": "`Ahom`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "anatolian_hieroglyphs",
                            "@value": "1215067511",
                            "@c:identifier": "HB_SCRIPT_ANATOLIAN_HIEROGLYPHS",
                            "@glib:nick": "anatolian-hieroglyphs",
                            "@glib:name": "HB_SCRIPT_ANATOLIAN_HIEROGLYPHS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "462",
                                "#text": "`Hluw`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "hatran",
                            "@value": "1214346354",
                            "@c:identifier": "HB_SCRIPT_HATRAN",
                            "@glib:nick": "hatran",
                            "@glib:name": "HB_SCRIPT_HATRAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "463",
                                "#text": "`Hatr`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "multani",
                            "@value": "1299541108",
                            "@c:identifier": "HB_SCRIPT_MULTANI",
                            "@glib:nick": "multani",
                            "@glib:name": "HB_SCRIPT_MULTANI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "464",
                                "#text": "`Mult`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "old_hungarian",
                            "@value": "1215655527",
                            "@c:identifier": "HB_SCRIPT_OLD_HUNGARIAN",
                            "@glib:nick": "old-hungarian",
                            "@glib:name": "HB_SCRIPT_OLD_HUNGARIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "465",
                                "#text": "`Hung`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "signwriting",
                            "@value": "1399287415",
                            "@c:identifier": "HB_SCRIPT_SIGNWRITING",
                            "@glib:nick": "signwriting",
                            "@glib:name": "HB_SCRIPT_SIGNWRITING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "466",
                                "#text": "`Sgnw`, Since: 0.9.30"
                            }
                        },
                        {
                            "@name": "adlam",
                            "@value": "1097100397",
                            "@c:identifier": "HB_SCRIPT_ADLAM",
                            "@glib:nick": "adlam",
                            "@glib:name": "HB_SCRIPT_ADLAM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "467",
                                "#text": "`Adlm`, Since: 1.3.0"
                            }
                        },
                        {
                            "@name": "bhaiksuki",
                            "@value": "1114139507",
                            "@c:identifier": "HB_SCRIPT_BHAIKSUKI",
                            "@glib:nick": "bhaiksuki",
                            "@glib:name": "HB_SCRIPT_BHAIKSUKI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "468",
                                "#text": "`Bhks`, Since: 1.3.0"
                            }
                        },
                        {
                            "@name": "marchen",
                            "@value": "1298231907",
                            "@c:identifier": "HB_SCRIPT_MARCHEN",
                            "@glib:nick": "marchen",
                            "@glib:name": "HB_SCRIPT_MARCHEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "469",
                                "#text": "`Marc`, Since: 1.3.0"
                            }
                        },
                        {
                            "@name": "osage",
                            "@value": "1332963173",
                            "@c:identifier": "HB_SCRIPT_OSAGE",
                            "@glib:nick": "osage",
                            "@glib:name": "HB_SCRIPT_OSAGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "470",
                                "#text": "`Osge`, Since: 1.3.0"
                            }
                        },
                        {
                            "@name": "tangut",
                            "@value": "1415671399",
                            "@c:identifier": "HB_SCRIPT_TANGUT",
                            "@glib:nick": "tangut",
                            "@glib:name": "HB_SCRIPT_TANGUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "471",
                                "#text": "`Tang`, Since: 1.3.0"
                            }
                        },
                        {
                            "@name": "newa",
                            "@value": "1315272545",
                            "@c:identifier": "HB_SCRIPT_NEWA",
                            "@glib:nick": "newa",
                            "@glib:name": "HB_SCRIPT_NEWA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "472",
                                "#text": "`Newa`, Since: 1.3.0"
                            }
                        },
                        {
                            "@name": "masaram_gondi",
                            "@value": "1198485101",
                            "@c:identifier": "HB_SCRIPT_MASARAM_GONDI",
                            "@glib:nick": "masaram-gondi",
                            "@glib:name": "HB_SCRIPT_MASARAM_GONDI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "473",
                                "#text": "`Gonm`, Since: 1.6.0"
                            }
                        },
                        {
                            "@name": "nushu",
                            "@value": "1316186229",
                            "@c:identifier": "HB_SCRIPT_NUSHU",
                            "@glib:nick": "nushu",
                            "@glib:name": "HB_SCRIPT_NUSHU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "474",
                                "#text": "`Nshu`, Since: 1.6.0"
                            }
                        },
                        {
                            "@name": "soyombo",
                            "@value": "1399814511",
                            "@c:identifier": "HB_SCRIPT_SOYOMBO",
                            "@glib:nick": "soyombo",
                            "@glib:name": "HB_SCRIPT_SOYOMBO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "475",
                                "#text": "`Soyo`, Since: 1.6.0"
                            }
                        },
                        {
                            "@name": "zanabazar_square",
                            "@value": "1516334690",
                            "@c:identifier": "HB_SCRIPT_ZANABAZAR_SQUARE",
                            "@glib:nick": "zanabazar-square",
                            "@glib:name": "HB_SCRIPT_ZANABAZAR_SQUARE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "476",
                                "#text": "`Zanb`, Since: 1.6.0"
                            }
                        },
                        {
                            "@name": "dogra",
                            "@value": "1148151666",
                            "@c:identifier": "HB_SCRIPT_DOGRA",
                            "@glib:nick": "dogra",
                            "@glib:name": "HB_SCRIPT_DOGRA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "477",
                                "#text": "`Dogr`, Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "gunjala_gondi",
                            "@value": "1198485095",
                            "@c:identifier": "HB_SCRIPT_GUNJALA_GONDI",
                            "@glib:nick": "gunjala-gondi",
                            "@glib:name": "HB_SCRIPT_GUNJALA_GONDI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "478",
                                "#text": "`Gong`, Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "hanifi_rohingya",
                            "@value": "1383032935",
                            "@c:identifier": "HB_SCRIPT_HANIFI_ROHINGYA",
                            "@glib:nick": "hanifi-rohingya",
                            "@glib:name": "HB_SCRIPT_HANIFI_ROHINGYA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "479",
                                "#text": "`Rohg`, Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "makasar",
                            "@value": "1298230113",
                            "@c:identifier": "HB_SCRIPT_MAKASAR",
                            "@glib:nick": "makasar",
                            "@glib:name": "HB_SCRIPT_MAKASAR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "480",
                                "#text": "`Maka`, Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "medefaidrin",
                            "@value": "1298490470",
                            "@c:identifier": "HB_SCRIPT_MEDEFAIDRIN",
                            "@glib:nick": "medefaidrin",
                            "@glib:name": "HB_SCRIPT_MEDEFAIDRIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "481",
                                "#text": "`Medf`, Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "old_sogdian",
                            "@value": "1399809903",
                            "@c:identifier": "HB_SCRIPT_OLD_SOGDIAN",
                            "@glib:nick": "old-sogdian",
                            "@glib:name": "HB_SCRIPT_OLD_SOGDIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "482",
                                "#text": "`Sogo`, Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "sogdian",
                            "@value": "1399809892",
                            "@c:identifier": "HB_SCRIPT_SOGDIAN",
                            "@glib:nick": "sogdian",
                            "@glib:name": "HB_SCRIPT_SOGDIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "483",
                                "#text": "`Sogd`, Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "elymaic",
                            "@value": "1164736877",
                            "@c:identifier": "HB_SCRIPT_ELYMAIC",
                            "@glib:nick": "elymaic",
                            "@glib:name": "HB_SCRIPT_ELYMAIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "484",
                                "#text": "`Elym`, Since: 2.4.0"
                            }
                        },
                        {
                            "@name": "nandinagari",
                            "@value": "1315008100",
                            "@c:identifier": "HB_SCRIPT_NANDINAGARI",
                            "@glib:nick": "nandinagari",
                            "@glib:name": "HB_SCRIPT_NANDINAGARI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "485",
                                "#text": "`Nand`, Since: 2.4.0"
                            }
                        },
                        {
                            "@name": "nyiakeng_puachue_hmong",
                            "@value": "1215131248",
                            "@c:identifier": "HB_SCRIPT_NYIAKENG_PUACHUE_HMONG",
                            "@glib:nick": "nyiakeng-puachue-hmong",
                            "@glib:name": "HB_SCRIPT_NYIAKENG_PUACHUE_HMONG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "486",
                                "#text": "`Hmnp`, Since: 2.4.0"
                            }
                        },
                        {
                            "@name": "wancho",
                            "@value": "1466132591",
                            "@c:identifier": "HB_SCRIPT_WANCHO",
                            "@glib:nick": "wancho",
                            "@glib:name": "HB_SCRIPT_WANCHO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "487",
                                "#text": "`Wcho`, Since: 2.4.0"
                            }
                        },
                        {
                            "@name": "chorasmian",
                            "@value": "1130918515",
                            "@c:identifier": "HB_SCRIPT_CHORASMIAN",
                            "@glib:nick": "chorasmian",
                            "@glib:name": "HB_SCRIPT_CHORASMIAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "488",
                                "#text": "`Chrs`, Since: 2.6.7"
                            }
                        },
                        {
                            "@name": "dives_akuru",
                            "@value": "1147756907",
                            "@c:identifier": "HB_SCRIPT_DIVES_AKURU",
                            "@glib:nick": "dives-akuru",
                            "@glib:name": "HB_SCRIPT_DIVES_AKURU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "489",
                                "#text": "`Diak`, Since: 2.6.7"
                            }
                        },
                        {
                            "@name": "khitan_small_script",
                            "@value": "1265202291",
                            "@c:identifier": "HB_SCRIPT_KHITAN_SMALL_SCRIPT",
                            "@glib:nick": "khitan-small-script",
                            "@glib:name": "HB_SCRIPT_KHITAN_SMALL_SCRIPT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "490",
                                "#text": "`Kits`, Since: 2.6.7"
                            }
                        },
                        {
                            "@name": "yezidi",
                            "@value": "1499822697",
                            "@c:identifier": "HB_SCRIPT_YEZIDI",
                            "@glib:nick": "yezidi",
                            "@glib:name": "HB_SCRIPT_YEZIDI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "491",
                                "#text": "`Yezi`, Since: 2.6.7"
                            }
                        },
                        {
                            "@name": "cypro_minoan",
                            "@value": "1131441518",
                            "@c:identifier": "HB_SCRIPT_CYPRO_MINOAN",
                            "@glib:nick": "cypro-minoan",
                            "@glib:name": "HB_SCRIPT_CYPRO_MINOAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "492",
                                "#text": "`Cpmn`, Since: 3.0.0"
                            }
                        },
                        {
                            "@name": "old_uyghur",
                            "@value": "1333094258",
                            "@c:identifier": "HB_SCRIPT_OLD_UYGHUR",
                            "@glib:nick": "old-uyghur",
                            "@glib:name": "HB_SCRIPT_OLD_UYGHUR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "493",
                                "#text": "`Ougr`, Since: 3.0.0"
                            }
                        },
                        {
                            "@name": "tangsa",
                            "@value": "1416524641",
                            "@c:identifier": "HB_SCRIPT_TANGSA",
                            "@glib:nick": "tangsa",
                            "@glib:name": "HB_SCRIPT_TANGSA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "494",
                                "#text": "`Tnsa`, Since: 3.0.0"
                            }
                        },
                        {
                            "@name": "toto",
                            "@value": "1416590447",
                            "@c:identifier": "HB_SCRIPT_TOTO",
                            "@glib:nick": "toto",
                            "@glib:name": "HB_SCRIPT_TOTO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "495",
                                "#text": "`Toto`, Since: 3.0.0"
                            }
                        },
                        {
                            "@name": "vithkuqi",
                            "@value": "1449751656",
                            "@c:identifier": "HB_SCRIPT_VITHKUQI",
                            "@glib:nick": "vithkuqi",
                            "@glib:name": "HB_SCRIPT_VITHKUQI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "496",
                                "#text": "`Vith`, Since: 3.0.0"
                            }
                        },
                        {
                            "@name": "math",
                            "@value": "1517122664",
                            "@c:identifier": "HB_SCRIPT_MATH",
                            "@glib:nick": "math",
                            "@glib:name": "HB_SCRIPT_MATH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "497",
                                "#text": "`Zmth`, Since: 3.4.0"
                            }
                        },
                        {
                            "@name": "kawi",
                            "@value": "1264678761",
                            "@c:identifier": "HB_SCRIPT_KAWI",
                            "@glib:nick": "kawi",
                            "@glib:name": "HB_SCRIPT_KAWI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "498",
                                "#text": "`Kawi`, Since: 5.2.0"
                            }
                        },
                        {
                            "@name": "nag_mundari",
                            "@value": "1315006317",
                            "@c:identifier": "HB_SCRIPT_NAG_MUNDARI",
                            "@glib:nick": "nag-mundari",
                            "@glib:name": "HB_SCRIPT_NAG_MUNDARI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "499",
                                "#text": "`Nagm`, Since: 5.2.0"
                            }
                        },
                        {
                            "@name": "invalid",
                            "@value": "0",
                            "@c:identifier": "HB_SCRIPT_INVALID",
                            "@glib:nick": "invalid",
                            "@glib:name": "HB_SCRIPT_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "500",
                                "#text": "No script set"
                            }
                        }
                    ]
                },
                {
                    "@name": "style_tag_t",
                    "@version": "3.0.0",
                    "@glib:type-name": "hb_style_tag_t",
                    "@glib:get-type": "hb_gobject_style_tag_get_type",
                    "@c:type": "hb_style_tag_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-style.h",
                        "@line": "36",
                        "#text": "Defined by [OpenType Design-Variation Axis Tag Registry](https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg)."
                    },
                    "member": [
                        {
                            "@name": "italic",
                            "@value": "1769234796",
                            "@c:identifier": "HB_STYLE_TAG_ITALIC",
                            "@glib:nick": "italic",
                            "@glib:name": "HB_STYLE_TAG_ITALIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-style.h",
                                "@line": "38",
                                "#text": "Used to vary between non-italic and italic.\nA value of 0 can be interpreted as \"Roman\" (non-italic); a value of 1 can\nbe interpreted as (fully) italic."
                            }
                        },
                        {
                            "@name": "optical_size",
                            "@value": "1869640570",
                            "@c:identifier": "HB_STYLE_TAG_OPTICAL_SIZE",
                            "@glib:nick": "optical-size",
                            "@glib:name": "HB_STYLE_TAG_OPTICAL_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-style.h",
                                "@line": "41",
                                "#text": "Used to vary design to suit different text sizes.\nNon-zero. Values can be interpreted as text size, in points."
                            }
                        },
                        {
                            "@name": "slant_angle",
                            "@value": "1936486004",
                            "@c:identifier": "HB_STYLE_TAG_SLANT_ANGLE",
                            "@glib:nick": "slant-angle",
                            "@glib:name": "HB_STYLE_TAG_SLANT_ANGLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-style.h",
                                "@line": "43",
                                "#text": "Used to vary between upright and slanted text. Values\nmust be greater than -90 and less than +90. Values can be interpreted as\nthe angle, in counter-clockwise degrees, of oblique slant from whatever the\ndesigner considers to be upright for that font design. Typical right-leaning\nItalic fonts have a negative slant angle (typically around -12)"
                            }
                        },
                        {
                            "@name": "slant_ratio",
                            "@value": "1399615092",
                            "@c:identifier": "HB_STYLE_TAG_SLANT_RATIO",
                            "@glib:nick": "slant-ratio",
                            "@glib:name": "HB_STYLE_TAG_SLANT_RATIO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-style.h",
                                "@line": "48",
                                "#text": "same as @HB_STYLE_TAG_SLANT_ANGLE expression as ratio.\nTypical right-leaning Italic fonts have a positive slant ratio (typically around 0.2)"
                            }
                        },
                        {
                            "@name": "width",
                            "@value": "2003072104",
                            "@c:identifier": "HB_STYLE_TAG_WIDTH",
                            "@glib:nick": "width",
                            "@glib:name": "HB_STYLE_TAG_WIDTH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-style.h",
                                "@line": "50",
                                "#text": "Used to vary width of text from narrower to wider.\nNon-zero. Values can be interpreted as a percentage of whatever the font\ndesigner considers \u201cnormal width\u201d for that font design."
                            }
                        },
                        {
                            "@name": "weight",
                            "@value": "2003265652",
                            "@c:identifier": "HB_STYLE_TAG_WEIGHT",
                            "@glib:nick": "weight",
                            "@glib:name": "HB_STYLE_TAG_WEIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-style.h",
                                "@line": "53",
                                "#text": "Used to vary stroke thicknesses or other design details\nto give variation from lighter to blacker. Values can be interpreted in direct\ncomparison to values for usWeightClass in the OS/2 table,\nor the CSS font-weight property."
                            }
                        }
                    ]
                },
                {
                    "@name": "unicode_combining_class_t",
                    "@glib:type-name": "hb_unicode_combining_class_t",
                    "@glib:get-type": "hb_gobject_unicode_combining_class_get_type",
                    "@c:type": "hb_unicode_combining_class_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "125",
                        "#text": "Data type for the Canonical_Combining_Class (ccc) property\nfrom the Unicode Character Database.\n\n<note>Note: newer versions of Unicode may add new values.\nClient programs should be ready to handle any value in the 0..254 range\nbeing returned from hb_unicode_combining_class().</note>"
                    },
                    "member": [
                        {
                            "@name": "not_reordered",
                            "@value": "0",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_NOT_REORDERED",
                            "@glib:nick": "not-reordered",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_NOT_REORDERED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "127",
                                "#text": "Spacing and enclosing marks; also many vowel and consonant signs, even if nonspacing"
                            }
                        },
                        {
                            "@name": "overlay",
                            "@value": "1",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_OVERLAY",
                            "@glib:nick": "overlay",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_OVERLAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "128",
                                "#text": "Marks which overlay a base letter or symbol"
                            }
                        },
                        {
                            "@name": "nukta",
                            "@value": "7",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_NUKTA",
                            "@glib:nick": "nukta",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_NUKTA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "129",
                                "#text": "Diacritic nukta marks in Brahmi-derived scripts"
                            }
                        },
                        {
                            "@name": "kana_voicing",
                            "@value": "8",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_KANA_VOICING",
                            "@glib:nick": "kana-voicing",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_KANA_VOICING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "130",
                                "#text": "Hiragana/Katakana voicing marks"
                            }
                        },
                        {
                            "@name": "virama",
                            "@value": "9",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_VIRAMA",
                            "@glib:nick": "virama",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_VIRAMA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "131",
                                "#text": "Viramas"
                            }
                        },
                        {
                            "@name": "ccc10",
                            "@value": "10",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC10",
                            "@glib:nick": "ccc10",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "132",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc11",
                            "@value": "11",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC11",
                            "@glib:nick": "ccc11",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC11",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "133",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc12",
                            "@value": "12",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC12",
                            "@glib:nick": "ccc12",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "134",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc13",
                            "@value": "13",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC13",
                            "@glib:nick": "ccc13",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC13",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "135",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc14",
                            "@value": "14",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC14",
                            "@glib:nick": "ccc14",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "136",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc15",
                            "@value": "15",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC15",
                            "@glib:nick": "ccc15",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC15",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "137",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc16",
                            "@value": "16",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC16",
                            "@glib:nick": "ccc16",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "138",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc17",
                            "@value": "17",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC17",
                            "@glib:nick": "ccc17",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC17",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "139",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc18",
                            "@value": "18",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC18",
                            "@glib:nick": "ccc18",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "140",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc19",
                            "@value": "19",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC19",
                            "@glib:nick": "ccc19",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC19",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "141",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc20",
                            "@value": "20",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC20",
                            "@glib:nick": "ccc20",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "142",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc21",
                            "@value": "21",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC21",
                            "@glib:nick": "ccc21",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC21",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "143",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc22",
                            "@value": "22",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC22",
                            "@glib:nick": "ccc22",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "144",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc23",
                            "@value": "23",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC23",
                            "@glib:nick": "ccc23",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC23",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "145",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc24",
                            "@value": "24",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC24",
                            "@glib:nick": "ccc24",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "146",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc25",
                            "@value": "25",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC25",
                            "@glib:nick": "ccc25",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC25",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "147",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc26",
                            "@value": "26",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC26",
                            "@glib:nick": "ccc26",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC26",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "148",
                                "#text": "[Hebrew]"
                            }
                        },
                        {
                            "@name": "ccc27",
                            "@value": "27",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC27",
                            "@glib:nick": "ccc27",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC27",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "149",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc28",
                            "@value": "28",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC28",
                            "@glib:nick": "ccc28",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC28",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "150",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc29",
                            "@value": "29",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC29",
                            "@glib:nick": "ccc29",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC29",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "151",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc30",
                            "@value": "30",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC30",
                            "@glib:nick": "ccc30",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC30",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "152",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc31",
                            "@value": "31",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC31",
                            "@glib:nick": "ccc31",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC31",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "153",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc32",
                            "@value": "32",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC32",
                            "@glib:nick": "ccc32",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "154",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc33",
                            "@value": "33",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC33",
                            "@glib:nick": "ccc33",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC33",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "155",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc34",
                            "@value": "34",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC34",
                            "@glib:nick": "ccc34",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC34",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "156",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc35",
                            "@value": "35",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC35",
                            "@glib:nick": "ccc35",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC35",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "157",
                                "#text": "[Arabic]"
                            }
                        },
                        {
                            "@name": "ccc36",
                            "@value": "36",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC36",
                            "@glib:nick": "ccc36",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC36",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "158",
                                "#text": "[Syriac]"
                            }
                        },
                        {
                            "@name": "ccc84",
                            "@value": "84",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC84",
                            "@glib:nick": "ccc84",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC84",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "159",
                                "#text": "[Telugu]"
                            }
                        },
                        {
                            "@name": "ccc91",
                            "@value": "91",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC91",
                            "@glib:nick": "ccc91",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC91",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "160",
                                "#text": "[Telugu]"
                            }
                        },
                        {
                            "@name": "ccc103",
                            "@value": "103",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC103",
                            "@glib:nick": "ccc103",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC103",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "161",
                                "#text": "[Thai]"
                            }
                        },
                        {
                            "@name": "ccc107",
                            "@value": "107",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC107",
                            "@glib:nick": "ccc107",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC107",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "162",
                                "#text": "[Thai]"
                            }
                        },
                        {
                            "@name": "ccc118",
                            "@value": "118",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC118",
                            "@glib:nick": "ccc118",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC118",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "163",
                                "#text": "[Lao]"
                            }
                        },
                        {
                            "@name": "ccc122",
                            "@value": "122",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC122",
                            "@glib:nick": "ccc122",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC122",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "164",
                                "#text": "[Lao]"
                            }
                        },
                        {
                            "@name": "ccc129",
                            "@value": "129",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC129",
                            "@glib:nick": "ccc129",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC129",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "165",
                                "#text": "[Tibetan]"
                            }
                        },
                        {
                            "@name": "ccc130",
                            "@value": "130",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC130",
                            "@glib:nick": "ccc130",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC130",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "166",
                                "#text": "[Tibetan]"
                            }
                        },
                        {
                            "@name": "ccc133",
                            "@value": "132",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_CCC133",
                            "@glib:nick": "ccc133",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_CCC133",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "167",
                                "#text": "[Tibetan]"
                            }
                        },
                        {
                            "@name": "attached_below_left",
                            "@value": "200",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT",
                            "@glib:nick": "attached-below-left",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "168",
                                "#text": "Marks attached at the bottom left"
                            }
                        },
                        {
                            "@name": "attached_below",
                            "@value": "202",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW",
                            "@glib:nick": "attached-below",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "169",
                                "#text": "Marks attached directly below"
                            }
                        },
                        {
                            "@name": "attached_above",
                            "@value": "214",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE",
                            "@glib:nick": "attached-above",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "170",
                                "#text": "Marks attached directly above"
                            }
                        },
                        {
                            "@name": "attached_above_right",
                            "@value": "216",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT",
                            "@glib:nick": "attached-above-right",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "171",
                                "#text": "Marks attached at the top right"
                            }
                        },
                        {
                            "@name": "below_left",
                            "@value": "218",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_BELOW_LEFT",
                            "@glib:nick": "below-left",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_BELOW_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "172",
                                "#text": "Distinct marks at the bottom left"
                            }
                        },
                        {
                            "@name": "below",
                            "@value": "220",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_BELOW",
                            "@glib:nick": "below",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_BELOW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "173",
                                "#text": "Distinct marks directly below"
                            }
                        },
                        {
                            "@name": "below_right",
                            "@value": "222",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT",
                            "@glib:nick": "below-right",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "174",
                                "#text": "Distinct marks at the bottom right"
                            }
                        },
                        {
                            "@name": "left",
                            "@value": "224",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_LEFT",
                            "@glib:nick": "left",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "175",
                                "#text": "Distinct marks to the left"
                            }
                        },
                        {
                            "@name": "right",
                            "@value": "226",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_RIGHT",
                            "@glib:nick": "right",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "176",
                                "#text": "Distinct marks to the right"
                            }
                        },
                        {
                            "@name": "above_left",
                            "@value": "228",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT",
                            "@glib:nick": "above-left",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "177",
                                "#text": "Distinct marks at the top left"
                            }
                        },
                        {
                            "@name": "above",
                            "@value": "230",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_ABOVE",
                            "@glib:nick": "above",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_ABOVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "178",
                                "#text": "Distinct marks directly above"
                            }
                        },
                        {
                            "@name": "above_right",
                            "@value": "232",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT",
                            "@glib:nick": "above-right",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "179",
                                "#text": "Distinct marks at the top right"
                            }
                        },
                        {
                            "@name": "double_below",
                            "@value": "233",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW",
                            "@glib:nick": "double-below",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "180",
                                "#text": "Distinct marks subtending two bases"
                            }
                        },
                        {
                            "@name": "double_above",
                            "@value": "234",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE",
                            "@glib:nick": "double-above",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "181",
                                "#text": "Distinct marks extending above two bases"
                            }
                        },
                        {
                            "@name": "iota_subscript",
                            "@value": "240",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT",
                            "@glib:nick": "iota-subscript",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "182",
                                "#text": "Greek iota subscript only"
                            }
                        },
                        {
                            "@name": "invalid",
                            "@value": "255",
                            "@c:identifier": "HB_UNICODE_COMBINING_CLASS_INVALID",
                            "@glib:nick": "invalid",
                            "@glib:name": "HB_UNICODE_COMBINING_CLASS_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "183",
                                "#text": "Invalid combining class"
                            }
                        }
                    ]
                },
                {
                    "@name": "unicode_general_category_t",
                    "@glib:type-name": "hb_unicode_general_category_t",
                    "@glib:get-type": "hb_gobject_unicode_general_category_get_type",
                    "@c:type": "hb_unicode_general_category_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "53",
                        "#text": "Data type for the \"General_Category\" (gc) property from\nthe Unicode Character Database."
                    },
                    "member": [
                        {
                            "@name": "control",
                            "@value": "0",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_CONTROL",
                            "@glib:nick": "control",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_CONTROL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "55",
                                "#text": "[Cc]"
                            }
                        },
                        {
                            "@name": "format",
                            "@value": "1",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_FORMAT",
                            "@glib:nick": "format",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_FORMAT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "56",
                                "#text": "[Cf]"
                            }
                        },
                        {
                            "@name": "unassigned",
                            "@value": "2",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED",
                            "@glib:nick": "unassigned",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "57",
                                "#text": "[Cn]"
                            }
                        },
                        {
                            "@name": "private_use",
                            "@value": "3",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE",
                            "@glib:nick": "private-use",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "58",
                                "#text": "[Co]"
                            }
                        },
                        {
                            "@name": "surrogate",
                            "@value": "4",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_SURROGATE",
                            "@glib:nick": "surrogate",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_SURROGATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "59",
                                "#text": "[Cs]"
                            }
                        },
                        {
                            "@name": "lowercase_letter",
                            "@value": "5",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER",
                            "@glib:nick": "lowercase-letter",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "60",
                                "#text": "[Ll]"
                            }
                        },
                        {
                            "@name": "modifier_letter",
                            "@value": "6",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER",
                            "@glib:nick": "modifier-letter",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "61",
                                "#text": "[Lm]"
                            }
                        },
                        {
                            "@name": "other_letter",
                            "@value": "7",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER",
                            "@glib:nick": "other-letter",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "62",
                                "#text": "[Lo]"
                            }
                        },
                        {
                            "@name": "titlecase_letter",
                            "@value": "8",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER",
                            "@glib:nick": "titlecase-letter",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "63",
                                "#text": "[Lt]"
                            }
                        },
                        {
                            "@name": "uppercase_letter",
                            "@value": "9",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER",
                            "@glib:nick": "uppercase-letter",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "64",
                                "#text": "[Lu]"
                            }
                        },
                        {
                            "@name": "spacing_mark",
                            "@value": "10",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK",
                            "@glib:nick": "spacing-mark",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "65",
                                "#text": "[Mc]"
                            }
                        },
                        {
                            "@name": "enclosing_mark",
                            "@value": "11",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK",
                            "@glib:nick": "enclosing-mark",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "66",
                                "#text": "[Me]"
                            }
                        },
                        {
                            "@name": "non_spacing_mark",
                            "@value": "12",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK",
                            "@glib:nick": "non-spacing-mark",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "67",
                                "#text": "[Mn]"
                            }
                        },
                        {
                            "@name": "decimal_number",
                            "@value": "13",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER",
                            "@glib:nick": "decimal-number",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "68",
                                "#text": "[Nd]"
                            }
                        },
                        {
                            "@name": "letter_number",
                            "@value": "14",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER",
                            "@glib:nick": "letter-number",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "69",
                                "#text": "[Nl]"
                            }
                        },
                        {
                            "@name": "other_number",
                            "@value": "15",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER",
                            "@glib:nick": "other-number",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "70",
                                "#text": "[No]"
                            }
                        },
                        {
                            "@name": "connect_punctuation",
                            "@value": "16",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION",
                            "@glib:nick": "connect-punctuation",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "71",
                                "#text": "[Pc]"
                            }
                        },
                        {
                            "@name": "dash_punctuation",
                            "@value": "17",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION",
                            "@glib:nick": "dash-punctuation",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "72",
                                "#text": "[Pd]"
                            }
                        },
                        {
                            "@name": "close_punctuation",
                            "@value": "18",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION",
                            "@glib:nick": "close-punctuation",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "73",
                                "#text": "[Pe]"
                            }
                        },
                        {
                            "@name": "final_punctuation",
                            "@value": "19",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION",
                            "@glib:nick": "final-punctuation",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "74",
                                "#text": "[Pf]"
                            }
                        },
                        {
                            "@name": "initial_punctuation",
                            "@value": "20",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION",
                            "@glib:nick": "initial-punctuation",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "75",
                                "#text": "[Pi]"
                            }
                        },
                        {
                            "@name": "other_punctuation",
                            "@value": "21",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION",
                            "@glib:nick": "other-punctuation",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "76",
                                "#text": "[Po]"
                            }
                        },
                        {
                            "@name": "open_punctuation",
                            "@value": "22",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION",
                            "@glib:nick": "open-punctuation",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "77",
                                "#text": "[Ps]"
                            }
                        },
                        {
                            "@name": "currency_symbol",
                            "@value": "23",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL",
                            "@glib:nick": "currency-symbol",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "78",
                                "#text": "[Sc]"
                            }
                        },
                        {
                            "@name": "modifier_symbol",
                            "@value": "24",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL",
                            "@glib:nick": "modifier-symbol",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "79",
                                "#text": "[Sk]"
                            }
                        },
                        {
                            "@name": "math_symbol",
                            "@value": "25",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL",
                            "@glib:nick": "math-symbol",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "80",
                                "#text": "[Sm]"
                            }
                        },
                        {
                            "@name": "other_symbol",
                            "@value": "26",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL",
                            "@glib:nick": "other-symbol",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "81",
                                "#text": "[So]"
                            }
                        },
                        {
                            "@name": "line_separator",
                            "@value": "27",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR",
                            "@glib:nick": "line-separator",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "82",
                                "#text": "[Zl]"
                            }
                        },
                        {
                            "@name": "paragraph_separator",
                            "@value": "28",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR",
                            "@glib:nick": "paragraph-separator",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "83",
                                "#text": "[Zp]"
                            }
                        },
                        {
                            "@name": "space_separator",
                            "@value": "29",
                            "@c:identifier": "HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR",
                            "@glib:nick": "space-separator",
                            "@glib:name": "HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.h",
                                "@line": "84",
                                "#text": "[Zs]"
                            }
                        }
                    ]
                }
            ],
            "function": [
                {
                    "@name": "aat_layout_feature_type_get_name_id",
                    "@c:identifier": "hb_aat_layout_feature_type_get_name_id",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.cc",
                        "@line": "380",
                        "#text": "Fetches the name identifier of the specified feature type in the face's `name` table."
                    },
                    "source-position": {
                        "@filename": "hb-aat-layout.h",
                        "@line": "732"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-aat-layout.cc",
                            "@line": "387",
                            "#text": "Name identifier of the requested feature type"
                        },
                        "type": {
                            "@name": "ot_name_id_t",
                            "@c:type": "hb_ot_name_id_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "382",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "feature_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "383",
                                    "#text": "The #hb_aat_layout_feature_type_t of the requested feature type"
                                },
                                "type": {
                                    "@name": "aat_layout_feature_type_t",
                                    "@c:type": "hb_aat_layout_feature_type_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "aat_layout_feature_type_get_selector_infos",
                    "@c:identifier": "hb_aat_layout_feature_type_get_selector_infos",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.cc",
                        "@line": "398",
                        "#text": "Fetches a list of the selectors available for the specified feature in the given face.\n\nIf upon return, @default_index is set to #HB_AAT_LAYOUT_NO_SELECTOR_INDEX, then\nthe feature type is non-exclusive.  Otherwise, @default_index is the index of\nthe selector that is selected by default."
                    },
                    "source-position": {
                        "@filename": "hb-aat-layout.h",
                        "@line": "761"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-aat-layout.cc",
                            "@line": "415",
                            "#text": "Number of all available feature selectors"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "400",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "feature_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "401",
                                    "#text": "The #hb_aat_layout_feature_type_t of the requested feature type"
                                },
                                "type": {
                                    "@name": "aat_layout_feature_type_t",
                                    "@c:type": "hb_aat_layout_feature_type_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "402",
                                    "#text": "offset of the first feature type to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "selector_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "403",
                                    "#text": "Input = the maximum number of selectors to return;\n                 Output = the actual number of selectors returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "selectors",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "405",
                                    "#text": "A buffer pointer. The selectors available for the feature type queries."
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_aat_layout_feature_selector_info_t*",
                                    "type": {
                                        "@name": "aat_layout_feature_selector_info_t",
                                        "@c:type": "hb_aat_layout_feature_selector_info_t"
                                    }
                                }
                            },
                            {
                                "@name": "default_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "407",
                                    "#text": "The index of the feature's default selector, if any"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "aat_layout_get_feature_types",
                    "@c:identifier": "hb_aat_layout_get_feature_types",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.cc",
                        "@line": "357",
                        "#text": "Fetches a list of the AAT feature types included in the specified face."
                    },
                    "source-position": {
                        "@filename": "hb-aat-layout.h",
                        "@line": "726"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-aat-layout.cc",
                            "@line": "367",
                            "#text": "Number of all available feature types."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "359",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "360",
                                    "#text": "offset of the first feature type to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "feature_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "361",
                                    "#text": "Input = the maximum number of feature types to return;\n                Output = the actual number of feature types returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "features",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-aat-layout.cc",
                                    "@line": "363",
                                    "#text": "Array of feature types found"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_aat_layout_feature_type_t*",
                                    "type": {
                                        "@name": "aat_layout_feature_type_t",
                                        "@c:type": "hb_aat_layout_feature_type_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "aat_layout_has_positioning",
                    "@c:identifier": "hb_aat_layout_has_positioning",
                    "@version": "2.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.cc",
                        "@line": "294",
                        "#text": "Tests whether the specified face includes any positioning information\nin the `kerx` table.\n\n<note>Note: does not examine the `GPOS` table.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-aat-layout.h",
                        "@line": "782"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-aat-layout.cc",
                            "@line": "303",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.cc",
                                "@line": "296",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "aat_layout_has_substitution",
                    "@c:identifier": "hb_aat_layout_has_substitution",
                    "@version": "2.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.cc",
                        "@line": "223",
                        "#text": "Tests whether the specified face includes any substitutions in the\n`morx` or `mort` tables.\n\n<note>Note: does not examine the `GSUB` table.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-aat-layout.h",
                        "@line": "774"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-aat-layout.cc",
                            "@line": "232",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.cc",
                                "@line": "225",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "aat_layout_has_tracking",
                    "@c:identifier": "hb_aat_layout_has_tracking",
                    "@version": "2.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.cc",
                        "@line": "329",
                        "#text": "Tests whether the specified face includes any tracking information\nin the `trak` table."
                    },
                    "source-position": {
                        "@filename": "hb-aat-layout.h",
                        "@line": "790"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-aat-layout.cc",
                            "@line": "336",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-aat-layout.cc",
                                "@line": "331",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_copy_writable_or_fail",
                    "@c:identifier": "hb_blob_copy_writable_or_fail",
                    "@version": "1.8.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "189",
                        "#text": "Makes a writable copy of @blob."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "118"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "195",
                            "#text": "The new blob, or nullptr if allocation failed"
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "blob",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.cc",
                                "@line": "191",
                                "#text": "A blob."
                            },
                            "type": {
                                "@name": "blob_t",
                                "@c:type": "hb_blob_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_create",
                    "@c:identifier": "hb_blob_create",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "52",
                        "#text": "Creates a new \"blob\" object wrapping @data.  The @mode parameter is used\nto negotiate ownership and lifecycle of @data."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "87"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "63",
                            "#text": "New blob, or the empty blob if something failed or if @length is\nzero.  Destroy with hb_blob_destroy()."
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "54",
                                    "#text": "Pointer to blob data."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "55",
                                    "#text": "Length of @data in bytes."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "mode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "56",
                                    "#text": "Memory mode for @data."
                                },
                                "type": {
                                    "@name": "memory_mode_t",
                                    "@c:type": "hb_memory_mode_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "57",
                                    "#text": "Data parameter to pass to @destroy."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "58",
                                    "#text": "Callback to call when @data is not needed anymore."
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "blob_create_from_file",
                    "@c:identifier": "hb_blob_create_from_file",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "594",
                        "#text": "Creates a new blob containing the data from the\nspecified binary font file."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "101"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "601",
                            "#text": "An #hb_blob_t pointer with the content of the file,\nor hb_blob_get_empty() if failed."
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "file_name",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.cc",
                                "@line": "596",
                                "#text": "A font filename"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_create_from_file_or_fail",
                    "@c:identifier": "hb_blob_create_from_file_or_fail",
                    "@version": "2.8.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "613",
                        "#text": "Creates a new blob containing the data from the\nspecified binary font file."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "104"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "620",
                            "#text": "An #hb_blob_t pointer with the content of the file,\nor `NULL` if failed."
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "file_name",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.cc",
                                "@line": "615",
                                "#text": "A font filename"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_create_or_fail",
                    "@c:identifier": "hb_blob_create_or_fail",
                    "@version": "2.8.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "87",
                        "#text": "Creates a new \"blob\" object wrapping @data.  The @mode parameter is used\nto negotiate ownership and lifecycle of @data.\n\nNote that this function returns a freshly-allocated empty blob even if @length\nis zero. This is in contrast to hb_blob_create(), which returns the singleton\nempty blob (as returned by hb_blob_get_empty()) if @length is zero."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "94"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "102",
                            "#text": "New blob, or `NULL` if failed.  Destroy with hb_blob_destroy()."
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "89",
                                    "#text": "Pointer to blob data."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "90",
                                    "#text": "Length of @data in bytes."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "mode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "91",
                                    "#text": "Memory mode for @data."
                                },
                                "type": {
                                    "@name": "memory_mode_t",
                                    "@c:type": "hb_memory_mode_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "92",
                                    "#text": "Data parameter to pass to @destroy."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "93",
                                    "#text": "Callback to call when @data is not needed anymore."
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "blob_create_sub_blob",
                    "@c:identifier": "hb_blob_create_sub_blob",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "148",
                        "#text": "Returns a blob that represents a range of bytes in @parent.  The new\nblob is always created with #HB_MEMORY_MODE_READONLY, meaning that it\nwill never modify data in the parent blob.  The parent data is not\nexpected to be modified, and will result in undefined behavior if it\nis.\n\nMakes @parent immutable."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "113"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "162",
                            "#text": "New blob, or the empty blob if something failed or if\n@length is zero or @offset is beyond the end of @parent's data.  Destroy\nwith hb_blob_destroy()."
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "parent",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "150",
                                    "#text": "Parent blob."
                                },
                                "type": {
                                    "@name": "blob_t",
                                    "@c:type": "hb_blob_t*"
                                }
                            },
                            {
                                "@name": "offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "151",
                                    "#text": "Start offset of sub-blob within @parent, in bytes."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "152",
                                    "#text": "Length of sub-blob."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "blob_destroy",
                    "@c:identifier": "hb_blob_destroy",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "249",
                        "#text": "Decreases the reference count on @blob, and if it reaches zero, destroys\n@blob, freeing all memory, possibly calling the destroy-callback the blob\nwas created for if it has not been called already.\n\nSee TODO:link object types for more information."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "127"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "blob",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.cc",
                                "@line": "251",
                                "#text": "a blob."
                            },
                            "type": {
                                "@name": "blob_t",
                                "@c:type": "hb_blob_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_get_data",
                    "@c:identifier": "hb_blob_get_data",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "363",
                        "#text": "Fetches the data from a blob."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "153"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "370",
                            "#text": "the byte data of @blob."
                        },
                        "array": {
                            "@length": "1",
                            "@zero-terminated": "0",
                            "@c:type": "const char*",
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "blob",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "365",
                                    "#text": "a blob."
                                },
                                "type": {
                                    "@name": "blob_t",
                                    "@c:type": "hb_blob_t*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "366",
                                    "#text": "The length in bytes of the data retrieved"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "blob_get_data_writable",
                    "@c:identifier": "hb_blob_get_data_writable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "383",
                        "#text": "Tries to make blob data writable (possibly copying it) and\nreturn pointer to data.\n\nFails if blob has been made immutable, or if memory allocation\nfails."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "156"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "394",
                            "#text": "Writable blob data,\nor `NULL` if failed."
                        },
                        "array": {
                            "@length": "1",
                            "@zero-terminated": "0",
                            "@c:type": "char*",
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "blob",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "385",
                                    "#text": "a blob."
                                },
                                "type": {
                                    "@name": "blob_t",
                                    "@c:type": "hb_blob_t*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "386",
                                    "#text": "output length of the writable data."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "blob_get_empty",
                    "@c:identifier": "hb_blob_get_empty",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "214",
                        "#text": "Returns the singleton empty blob.\n\nSee TODO:link object types for more information."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "121"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "221",
                            "#text": "The empty blob."
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    }
                },
                {
                    "@name": "blob_get_length",
                    "@c:identifier": "hb_blob_get_length",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "347",
                        "#text": "Fetches the length of a blob's data."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "150"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "353",
                            "#text": "the length of @blob data in bytes."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "blob",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.cc",
                                "@line": "349",
                                "#text": "a blob."
                            },
                            "type": {
                                "@name": "blob_t",
                                "@c:type": "hb_blob_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_get_user_data",
                    "@c:identifier": "hb_blob_get_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "293",
                        "#text": "Fetches the user data associated with the specified key,\nattached to the specified font-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "138"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "301",
                            "#text": "A pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "blob",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "295",
                                    "#text": "a blob"
                                },
                                "type": {
                                    "@name": "blob_t",
                                    "@c:type": "const hb_blob_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "296",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "blob_is_immutable",
                    "@c:identifier": "hb_blob_is_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "330",
                        "#text": "Tests whether a blob is immutable."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "146"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "336",
                            "#text": "`true` if @blob is immutable, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "blob",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.cc",
                                "@line": "332",
                                "#text": "a blob."
                            },
                            "type": {
                                "@name": "blob_t",
                                "@c:type": "hb_blob_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_make_immutable",
                    "@c:identifier": "hb_blob_make_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "313",
                        "#text": "Makes a blob immutable."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "143"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "blob",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.cc",
                                "@line": "315",
                                "#text": "a blob"
                            },
                            "type": {
                                "@name": "blob_t",
                                "@c:type": "hb_blob_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_reference",
                    "@c:identifier": "hb_blob_reference",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "231",
                        "#text": "Increases the reference count on @blob.\n\nSee TODO:link object types for more information."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "124"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "239",
                            "#text": "@blob."
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "blob",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-blob.cc",
                                "@line": "233",
                                "#text": "a blob."
                            },
                            "type": {
                                "@name": "blob_t",
                                "@c:type": "hb_blob_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "blob_set_user_data",
                    "@c:identifier": "hb_blob_set_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "269",
                        "#text": "Attaches a user-data key/data pair to the specified blob."
                    },
                    "source-position": {
                        "@filename": "hb-blob.h",
                        "@line": "130"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-blob.cc",
                            "@line": "279",
                            "#text": "`true` if success, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "blob",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "271",
                                    "#text": "An #hb_blob_t"
                                },
                                "type": {
                                    "@name": "blob_t",
                                    "@c:type": "hb_blob_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "272",
                                    "#text": "The user-data key to set"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "273",
                                    "#text": "A pointer to the user data to set"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "274",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-blob.cc",
                                    "@line": "275",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_add",
                    "@c:identifier": "hb_buffer_add",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1337",
                        "#text": "Appends a character with the Unicode value of @codepoint to @buffer, and\ngives it the initial cluster value of @cluster. Clusters can be any thing\nthe client wants, they are usually used to refer to the index of the\ncharacter in the input text stream and are output in\n#hb_glyph_info_t.cluster field.\n\nThis function does not check the validity of @codepoint, it is up to the\ncaller to ensure it is a valid Unicode code point."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "520"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1339",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "codepoint",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1340",
                                    "#text": "A Unicode code point."
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "cluster",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1341",
                                    "#text": "The cluster value of @codepoint."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_add_codepoints",
                    "@c:identifier": "hb_buffer_add_codepoints",
                    "@version": "0.9.31",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1778",
                        "#text": "Appends characters from @text array to @buffer. The @item_offset is the\nposition of the first character from @text that will be appended, and\n@item_length is the number of character. When shaping part of a larger text\n(e.g. a run of text from a paragraph), instead of passing just the substring\ncorresponding to the run, it is preferable to pass the whole\nparagraph and specify the run start and length as @item_offset and\n@item_length, respectively, to give HarfBuzz the full context to be able,\nfor example, to do cross-run Arabic shaping or properly handle combining\nmarks at stat of run.\n\nThis function does not check the validity of @text, it is up to the caller\nto ensure it contains a valid Unicode code points."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "553"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1780",
                                    "#text": "a #hb_buffer_t to append characters to."
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "text",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1781",
                                    "#text": "an array of Unicode code points to append."
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_codepoint_t*",
                                    "type": {
                                        "@name": "codepoint_t",
                                        "@c:type": "hb_codepoint_t"
                                    }
                                }
                            },
                            {
                                "@name": "text_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1782",
                                    "#text": "the length of the @text, or -1 if it is `NULL` terminated."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "item_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1783",
                                    "#text": "the offset of the first code point to add to the @buffer."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "item_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1784",
                                    "#text": "the number of code points to add to the @buffer, or -1 for the\n              end of @text (assuming it is `NULL` terminated)."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_add_latin1",
                    "@c:identifier": "hb_buffer_add_latin1",
                    "@version": "0.9.39",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1751",
                        "#text": "Similar to hb_buffer_add_codepoints(), but allows only access to first 256\nUnicode code points that can fit in 8-bit strings.\n\n<note>Has nothing to do with non-Unicode Latin-1 encoding.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "546"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1753",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "text",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1754",
                                    "#text": "an array of UTF-8\n              characters to append"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const uint8_t*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "text_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1756",
                                    "#text": "the length of the @text, or -1 if it is `NULL` terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "item_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1757",
                                    "#text": "the offset of the first character to add to the @buffer"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "item_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1758",
                                    "#text": "the number of characters to add to the @buffer, or -1 for the\n              end of @text (assuming it is `NULL` terminated)"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_add_utf16",
                    "@c:identifier": "hb_buffer_add_utf16",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1699",
                        "#text": "See hb_buffer_add_codepoints().\n\nReplaces invalid UTF-16 characters with the @buffer replacement code point,\nsee hb_buffer_set_replacement_codepoint()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "532"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1701",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "text",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1702",
                                    "#text": "An array of UTF-16 characters to append"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const uint16_t*",
                                    "type": {
                                        "@name": "guint16",
                                        "@c:type": "uint16_t"
                                    }
                                }
                            },
                            {
                                "@name": "text_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1703",
                                    "#text": "The length of the @text, or -1 if it is `NULL` terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "item_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1704",
                                    "#text": "The offset of the first character to add to the @buffer"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "item_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1705",
                                    "#text": "The number of characters to add to the @buffer, or -1 for the\n              end of @text (assuming it is `NULL` terminated)"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_add_utf32",
                    "@c:identifier": "hb_buffer_add_utf32",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1725",
                        "#text": "See hb_buffer_add_codepoints().\n\nReplaces invalid UTF-32 characters with the @buffer replacement code point,\nsee hb_buffer_set_replacement_codepoint()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "539"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1727",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "text",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1728",
                                    "#text": "An array of UTF-32 characters to append"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const uint32_t*",
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "uint32_t"
                                    }
                                }
                            },
                            {
                                "@name": "text_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1729",
                                    "#text": "The length of the @text, or -1 if it is `NULL` terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "item_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1730",
                                    "#text": "The offset of the first character to add to the @buffer"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "item_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1731",
                                    "#text": "The number of characters to add to the @buffer, or -1 for the\n              end of @text (assuming it is `NULL` terminated)"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_add_utf8",
                    "@c:identifier": "hb_buffer_add_utf8",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1672",
                        "#text": "See hb_buffer_add_codepoints().\n\nReplaces invalid UTF-8 characters with the @buffer replacement code point,\nsee hb_buffer_set_replacement_codepoint()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "525"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1674",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "text",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1675",
                                    "#text": "An array of UTF-8\n              characters to append."
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "text_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1677",
                                    "#text": "The length of the @text, or -1 if it is `NULL` terminated."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "item_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1678",
                                    "#text": "The offset of the first character to add to the @buffer."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "item_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1679",
                                    "#text": "The number of characters to add to the @buffer, or -1 for the\n              end of @text (assuming it is `NULL` terminated)."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_allocation_successful",
                    "@c:identifier": "hb_buffer_allocation_successful",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1320",
                        "#text": "Check if allocating memory for the buffer succeeded."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "504"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1326",
                            "#text": "`true` if @buffer memory allocation succeeded, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1322",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_append",
                    "@c:identifier": "hb_buffer_append",
                    "@version": "1.5.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1813",
                        "#text": "Append (part of) contents of another buffer to this buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "560"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1815",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "source",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1816",
                                    "#text": "source #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "const hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "start",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1817",
                                    "#text": "start index into source buffer to copy.  Use 0 to copy from start of buffer."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "end",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1818",
                                    "#text": "end index into source buffer to copy.  Use @HB_FEATURE_GLOBAL_END to copy to end of buffer."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_clear_contents",
                    "@c:identifier": "hb_buffer_clear_contents",
                    "@version": "0.9.11",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1284",
                        "#text": "Similar to hb_buffer_reset(), but does not clear the Unicode functions and\nthe replacement code point."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "496"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1286",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_create",
                    "@c:identifier": "hb_buffer_create",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "667",
                        "#text": "Creates a new #hb_buffer_t with all properties to defaults."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "253"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "672",
                            "#text": "A newly allocated #hb_buffer_t with a reference count of 1. The initial\nreference count should be released with hb_buffer_destroy() when you are done\nusing the #hb_buffer_t. This function never returns `NULL`. If memory cannot\nbe allocated, a special #hb_buffer_t object will be returned on which\nhb_buffer_allocation_successful() returns `false`."
                        },
                        "type": {
                            "@name": "buffer_t",
                            "@c:type": "hb_buffer_t*"
                        }
                    }
                },
                {
                    "@name": "buffer_create_similar",
                    "@c:identifier": "hb_buffer_create_similar",
                    "@version": "3.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "697",
                        "#text": "Creates a new #hb_buffer_t, similar to hb_buffer_create(). The only\ndifference is that the buffer is configured similarly to @src."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "256"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "704",
                            "#text": "A newly allocated #hb_buffer_t, similar to hb_buffer_create()."
                        },
                        "type": {
                            "@name": "buffer_t",
                            "@c:type": "hb_buffer_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "src",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "699",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_deserialize_glyphs",
                    "@c:identifier": "hb_buffer_deserialize_glyphs",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer-serialize.cc",
                        "@line": "726",
                        "#text": "Deserializes glyphs @buffer from textual representation in the format\nproduced by hb_buffer_serialize_glyphs()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "681"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer-serialize.cc",
                            "@line": "739",
                            "#text": "`true` if @buf is not fully consumed, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "728",
                                    "#text": "an #hb_buffer_t buffer."
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "buf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "729",
                                    "#text": "string to deserialize"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "buf_len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "730",
                                    "#text": "the size of @buf, or -1 if it is `NULL`-terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "end_ptr",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "731",
                                    "#text": "output pointer to the character after last\n                              consumed one."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char**"
                                }
                            },
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "733",
                                    "#text": "font for getting glyph IDs"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "734",
                                    "#text": "the #hb_buffer_serialize_format_t of the input @buf"
                                },
                                "type": {
                                    "@name": "buffer_serialize_format_t",
                                    "@c:type": "hb_buffer_serialize_format_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_deserialize_unicode",
                    "@c:identifier": "hb_buffer_deserialize_unicode",
                    "@version": "2.7.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer-serialize.cc",
                        "@line": "799",
                        "#text": "Deserializes Unicode @buffer from textual representation in the format\nproduced by hb_buffer_serialize_unicode()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "689"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer-serialize.cc",
                            "@line": "811",
                            "#text": "`true` if @buf is not fully consumed, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "801",
                                    "#text": "an #hb_buffer_t buffer."
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "buf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "802",
                                    "#text": "string to deserialize"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "buf_len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "803",
                                    "#text": "the size of @buf, or -1 if it is `NULL`-terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "end_ptr",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "804",
                                    "#text": "output pointer to the character after last\n                              consumed one."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char**"
                                }
                            },
                            {
                                "@name": "format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "806",
                                    "#text": "the #hb_buffer_serialize_format_t of the input @buf"
                                },
                                "type": {
                                    "@name": "buffer_serialize_format_t",
                                    "@c:type": "hb_buffer_serialize_format_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_destroy",
                    "@c:identifier": "hb_buffer_destroy",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "770",
                        "#text": "Deallocate the @buffer.\nDecreases the reference count on @buffer by one. If the result is zero, then\n@buffer and all associated resources are freed. See hb_buffer_reference()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "269"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "772",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_diff",
                    "@c:identifier": "hb_buffer_diff",
                    "@version": "1.5.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1994",
                        "#text": "If dottedcircle_glyph is (hb_codepoint_t) -1 then #HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT\nand #HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT are never returned.  This should be used by most\ncallers if just comparing two buffers is needed."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "759"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "buffer_diff_flags_t",
                            "@c:type": "hb_buffer_diff_flags_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1996",
                                    "#text": "a buffer."
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "reference",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1997",
                                    "#text": "other buffer to compare to."
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "dottedcircle_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1998",
                                    "#text": "glyph id of U+25CC DOTTED CIRCLE, or (hb_codepont_t) -1."
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "position_fuzz",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1999",
                                    "#text": "allowed absolute difference in position values."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_get_cluster_level",
                    "@c:identifier": "hb_buffer_get_cluster_level",
                    "@version": "0.9.42",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1144",
                        "#text": "Fetches the cluster level of a buffer. The #hb_buffer_cluster_level_t\ndictates one aspect of how HarfBuzz will treat non-base characters\nduring shaping."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "457"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1152",
                            "#text": "The cluster level of @buffer"
                        },
                        "type": {
                            "@name": "buffer_cluster_level_t",
                            "@c:type": "hb_buffer_cluster_level_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1146",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_content_type",
                    "@c:identifier": "hb_buffer_get_content_type",
                    "@version": "0.9.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "858",
                        "#text": "Fetches the type of @buffer contents. Buffers are either empty, contain\ncharacters (before shaping), or contain glyphs (the result of shaping)."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "302"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "865",
                            "#text": "The type of @buffer contents"
                        },
                        "type": {
                            "@name": "buffer_content_type_t",
                            "@c:type": "hb_buffer_content_type_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "860",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_direction",
                    "@c:identifier": "hb_buffer_get_direction",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "944",
                        "#text": "See hb_buffer_set_direction()"
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "317"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "950",
                            "#text": "The direction of the @buffer."
                        },
                        "type": {
                            "@name": "direction_t",
                            "@c:type": "hb_direction_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "946",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_empty",
                    "@c:identifier": "hb_buffer_get_empty",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "737",
                        "#text": "Fetches an empty #hb_buffer_t."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "263"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "742",
                            "#text": "The empty buffer"
                        },
                        "type": {
                            "@name": "buffer_t",
                            "@c:type": "hb_buffer_t*"
                        }
                    }
                },
                {
                    "@name": "buffer_get_flags",
                    "@c:identifier": "hb_buffer_get_flags",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1106",
                        "#text": "Fetches the #hb_buffer_flags_t of @buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "415"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1112",
                            "#text": "The @buffer flags"
                        },
                        "type": {
                            "@name": "buffer_flags_t",
                            "@c:type": "hb_buffer_flags_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1108",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_glyph_infos",
                    "@c:identifier": "hb_buffer_get_glyph_infos",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1423",
                        "#text": "Returns @buffer glyph information array.  Returned pointer\nis valid as long as @buffer contents are not modified."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "575"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1431",
                            "#text": "The @buffer glyph information array.\nThe value valid as long as buffer has not been modified."
                        },
                        "array": {
                            "@length": "1",
                            "@zero-terminated": "0",
                            "@c:type": "hb_glyph_info_t*",
                            "type": {
                                "@name": "glyph_info_t",
                                "@c:type": "hb_glyph_info_t"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1425",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1426",
                                    "#text": "The output-array length."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_get_glyph_positions",
                    "@c:identifier": "hb_buffer_get_glyph_positions",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1447",
                        "#text": "Returns @buffer glyph position array.  Returned pointer\nis valid as long as @buffer contents are not modified.\n\nIf buffer did not have positions before, the positions will be\ninitialized to zeros, unless this function is called from\nwithin a buffer message callback (see hb_buffer_set_message_func()),\nin which case `NULL` is returned."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "579"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1460",
                            "#text": "The @buffer glyph position array.\nThe value valid as long as buffer has not been modified."
                        },
                        "array": {
                            "@length": "1",
                            "@zero-terminated": "0",
                            "@c:type": "hb_glyph_position_t*",
                            "type": {
                                "@name": "glyph_position_t",
                                "@c:type": "hb_glyph_position_t"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1449",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1450",
                                    "#text": "The output length"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_get_invisible_glyph",
                    "@c:identifier": "hb_buffer_get_invisible_glyph",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1226",
                        "#text": "See hb_buffer_set_invisible_glyph()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "481"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1232",
                            "#text": "The @buffer invisible #hb_codepoint_t"
                        },
                        "type": {
                            "@name": "codepoint_t",
                            "@c:type": "hb_codepoint_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1228",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_language",
                    "@c:identifier": "hb_buffer_get_language",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1032",
                        "#text": "See hb_buffer_set_language()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "332"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1038",
                            "#text": "The #hb_language_t of the buffer. Must not be freed by the caller."
                        },
                        "type": {
                            "@name": "language_t",
                            "@c:type": "hb_language_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1034",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_length",
                    "@c:identifier": "hb_buffer_get_length",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1405",
                        "#text": "Returns the number of items in the buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "570"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1411",
                            "#text": "The @buffer length.\nThe value valid as long as buffer has not been modified."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1407",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_not_found_glyph",
                    "@c:identifier": "hb_buffer_get_not_found_glyph",
                    "@version": "3.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1266",
                        "#text": "See hb_buffer_set_not_found_glyph()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "488"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1272",
                            "#text": "The @buffer not-found #hb_codepoint_t"
                        },
                        "type": {
                            "@name": "codepoint_t",
                            "@c:type": "hb_codepoint_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1268",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_replacement_codepoint",
                    "@c:identifier": "hb_buffer_get_replacement_codepoint",
                    "@version": "0.9.31",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1185",
                        "#text": "Fetches the #hb_codepoint_t that replaces invalid entries for a given encoding\nwhen adding text to @buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "474"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1192",
                            "#text": "The @buffer replacement #hb_codepoint_t"
                        },
                        "type": {
                            "@name": "codepoint_t",
                            "@c:type": "hb_codepoint_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1187",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_script",
                    "@c:identifier": "hb_buffer_get_script",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "988",
                        "#text": "Fetches the script of @buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "324"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "994",
                            "#text": "The #hb_script_t of the @buffer"
                        },
                        "type": {
                            "@name": "script_t",
                            "@c:type": "hb_script_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "990",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_segment_properties",
                    "@c:identifier": "hb_buffer_get_segment_properties",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1070",
                        "#text": "Sets @props to the #hb_segment_properties_t of @buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "339"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1072",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "const hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "props",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1073",
                                    "#text": "The output #hb_segment_properties_t"
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "hb_segment_properties_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_get_unicode_funcs",
                    "@c:identifier": "hb_buffer_get_unicode_funcs",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "902",
                        "#text": "Fetches the Unicode-functions structure of a buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "310"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "908",
                            "#text": "The Unicode-functions structure"
                        },
                        "type": {
                            "@name": "unicode_funcs_t",
                            "@c:type": "hb_unicode_funcs_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "904",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "const hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_get_user_data",
                    "@c:identifier": "hb_buffer_get_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "821",
                        "#text": "Fetches the user data associated with the specified key,\nattached to the specified buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "279"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "829",
                            "#text": "A pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "823",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "const hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "824",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_guess_segment_properties",
                    "@c:identifier": "hb_buffer_guess_segment_properties",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1567",
                        "#text": "Sets unset buffer segment properties based on buffer Unicode\ncontents.  If buffer is not empty, it must have content type\n#HB_BUFFER_CONTENT_TYPE_UNICODE.\n\nIf buffer script is not set (ie. is #HB_SCRIPT_INVALID), it\nwill be set to the Unicode script of the first character in\nthe buffer that has a script other than #HB_SCRIPT_COMMON,\n#HB_SCRIPT_INHERITED, and #HB_SCRIPT_UNKNOWN.\n\nNext, if buffer direction is not set (ie. is #HB_DIRECTION_INVALID),\nit will be set to the natural horizontal direction of the\nbuffer script as returned by hb_script_get_horizontal_direction().\nIf hb_script_get_horizontal_direction() returns #HB_DIRECTION_INVALID,\nthen #HB_DIRECTION_LTR is used.\n\nFinally, if buffer language is not set (ie. is #HB_LANGUAGE_INVALID),\nit will be set to the process's default language as returned by\nhb_language_get_default().  This may change in the future by\ntaking buffer script into consideration when choosing a language.\nNote that hb_language_get_default() is NOT threadsafe the first time\nit is called.  See documentation for that function for details."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "343"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1569",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_has_positions",
                    "@c:identifier": "hb_buffer_has_positions",
                    "@version": "2.7.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1484",
                        "#text": "Returns whether @buffer has glyph position data.\nA buffer gains position data when hb_buffer_get_glyph_positions() is called on it,\nand cleared of position data when hb_buffer_clear_contents() is called."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "583"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1492",
                            "#text": "`true` if the @buffer has position array, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1486",
                                "#text": "an #hb_buffer_t."
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_normalize_glyphs",
                    "@c:identifier": "hb_buffer_normalize_glyphs",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1944",
                        "#text": "Reorders a glyph buffer to have canonical in-cluster glyph order / position.\nThe resulting clusters should behave identical to pre-reordering clusters.\n\n<note>This has nothing to do with Unicode normalization.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "587"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1946",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_pre_allocate",
                    "@c:identifier": "hb_buffer_pre_allocate",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1302",
                        "#text": "Pre allocates memory for @buffer to fit at least @size number of items."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "499"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1309",
                            "#text": "`true` if @buffer memory allocation succeeded, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1304",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "size",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1305",
                                    "#text": "Number of items to pre allocate."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_reference",
                    "@c:identifier": "hb_buffer_reference",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "752",
                        "#text": "Increases the reference count on @buffer by one. This prevents @buffer from\nbeing destroyed until a matching call to hb_buffer_destroy() is made."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "266"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "759",
                            "#text": "The referenced #hb_buffer_t."
                        },
                        "type": {
                            "@name": "buffer_t",
                            "@c:type": "hb_buffer_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "754",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_reset",
                    "@c:identifier": "hb_buffer_reset",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "719",
                        "#text": "Resets the buffer to its initial status, as if it was just newly created\nwith hb_buffer_create()."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "259"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "721",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_reverse",
                    "@c:identifier": "hb_buffer_reverse",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1520",
                        "#text": "Reverses buffer contents."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "507"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1522",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_reverse_clusters",
                    "@c:identifier": "hb_buffer_reverse_clusters",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1551",
                        "#text": "Reverses buffer clusters.  That is, the buffer contents are\nreversed, then each cluster (consecutive items having the\nsame cluster number) are reversed again."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "514"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "buffer",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1553",
                                "#text": "An #hb_buffer_t"
                            },
                            "type": {
                                "@name": "buffer_t",
                                "@c:type": "hb_buffer_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_reverse_range",
                    "@c:identifier": "hb_buffer_reverse_range",
                    "@version": "0.9.41",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1534",
                        "#text": "Reverses buffer contents between @start and @end."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "510"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1536",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "start",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1537",
                                    "#text": "start index"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "end",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1538",
                                    "#text": "end index"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_serialize",
                    "@c:identifier": "hb_buffer_serialize",
                    "@version": "2.7.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer-serialize.cc",
                        "@line": "632",
                        "#text": "Serializes @buffer into a textual representation of its content, whether\nUnicode codepoints or glyph identifiers and positioning information. This is\nuseful for showing the contents of the buffer, for example during debugging.\nSee the documentation of hb_buffer_serialize_unicode() and\nhb_buffer_serialize_glyphs() for a description of the output format."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "670"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer-serialize.cc",
                            "@line": "653",
                            "#text": "The number of serialized items."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "634",
                                    "#text": "an #hb_buffer_t buffer."
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "start",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "635",
                                    "#text": "the first item in @buffer to serialize."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "end",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "636",
                                    "#text": "the last item in @buffer to serialize."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "buf",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "637",
                                    "#text": "output string to\n      write serialized buffer into."
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "buf_size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "639",
                                    "#text": "the size of @buf."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "buf_consumed",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "640",
                                    "#text": "if not `NULL`, will be set to the number of bytes written into @buf."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "641",
                                    "#text": "the #hb_font_t used to shape this buffer, needed to\n       read glyph names and extents. If `NULL`, an empty font will be used."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "643",
                                    "#text": "the #hb_buffer_serialize_format_t to use for formatting the output."
                                },
                                "type": {
                                    "@name": "buffer_serialize_format_t",
                                    "@c:type": "hb_buffer_serialize_format_t"
                                }
                            },
                            {
                                "@name": "flags",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "644",
                                    "#text": "the #hb_buffer_serialize_flags_t that control what glyph properties\n        to serialize."
                                },
                                "type": {
                                    "@name": "buffer_serialize_flags_t",
                                    "@c:type": "hb_buffer_serialize_flags_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_serialize_format_from_string",
                    "@c:identifier": "hb_buffer_serialize_format_from_string",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer-serialize.cc",
                        "@line": "56",
                        "#text": "Parses a string into an #hb_buffer_serialize_format_t. Does not check if\n@str is a valid buffer serialization format, use\nhb_buffer_serialize_list_formats() to get the list of supported formats."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "640"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer-serialize.cc",
                            "@line": "65",
                            "#text": "The parsed #hb_buffer_serialize_format_t."
                        },
                        "type": {
                            "@name": "buffer_serialize_format_t",
                            "@c:type": "hb_buffer_serialize_format_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "58",
                                    "#text": "a string to parse"
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "59",
                                    "#text": "length of @str, or -1 if string is `NULL` terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_serialize_format_to_string",
                    "@c:identifier": "hb_buffer_serialize_format_to_string",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer-serialize.cc",
                        "@line": "77",
                        "#text": "Converts @format to the string corresponding it, or `NULL` if it is not a valid\n#hb_buffer_serialize_format_t."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "643"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer-serialize.cc",
                            "@line": "84",
                            "#text": "A `NULL` terminated string corresponding to @format. Should not be freed."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "format",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer-serialize.cc",
                                "@line": "79",
                                "#text": "an #hb_buffer_serialize_format_t to convert."
                            },
                            "type": {
                                "@name": "buffer_serialize_format_t",
                                "@c:type": "hb_buffer_serialize_format_t"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_serialize_glyphs",
                    "@c:identifier": "hb_buffer_serialize_glyphs",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer-serialize.cc",
                        "@line": "395",
                        "#text": "Serializes @buffer into a textual representation of its glyph content,\nuseful for showing the contents of the buffer, for example during debugging.\nThere are currently two supported serialization formats:\n\n## text\nA human-readable, plain text format.\nThe serialized glyphs will look something like:\n\n```\n[uni0651=0@518,0+0|uni0628=0+1897]\n```\n\n- The serialized glyphs are delimited with `[` and `]`.\n- Glyphs are separated with `|`\n- Each glyph starts with glyph name, or glyph index if\n  #HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES flag is set. Then,\n  - If #HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS is not set, `=` then #hb_glyph_info_t.cluster.\n  - If #HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS is not set, the #hb_glyph_position_t in the format:\n    - If both #hb_glyph_position_t.x_offset and #hb_glyph_position_t.y_offset are not 0, `@x_offset,y_offset`. Then,\n    - `+x_advance`, then `,y_advance` if #hb_glyph_position_t.y_advance is not 0. Then,\n  - If #HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS is set, the #hb_glyph_extents_t in the format `<x_bearing,y_bearing,width,height>`\n\n## json\nA machine-readable, structured format.\nThe serialized glyphs will look something like:\n\n```\n[{\"g\":\"uni0651\",\"cl\":0,\"dx\":518,\"dy\":0,\"ax\":0,\"ay\":0},\n{\"g\":\"uni0628\",\"cl\":0,\"dx\":0,\"dy\":0,\"ax\":1897,\"ay\":0}]\n```\n\nEach glyph is a JSON object, with the following properties:\n- `g`: the glyph name or glyph index if\n  #HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES flag is set.\n- `cl`: #hb_glyph_info_t.cluster if\n  #HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS is not set.\n- `dx`,`dy`,`ax`,`ay`: #hb_glyph_position_t.x_offset, #hb_glyph_position_t.y_offset,\n   #hb_glyph_position_t.x_advance and #hb_glyph_position_t.y_advance\n   respectively, if #HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS is not set.\n- `xb`,`yb`,`w`,`h`: #hb_glyph_extents_t.x_bearing, #hb_glyph_extents_t.y_bearing,\n   #hb_glyph_extents_t.width and #hb_glyph_extents_t.height respectively if\n   #HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS is set."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "649"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer-serialize.cc",
                            "@line": "453",
                            "#text": "The number of serialized items."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "397",
                                    "#text": "an #hb_buffer_t buffer."
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "start",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "398",
                                    "#text": "the first item in @buffer to serialize."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "end",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "399",
                                    "#text": "the last item in @buffer to serialize."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "buf",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "400",
                                    "#text": "output string to\n      write serialized buffer into."
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "buf_size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "402",
                                    "#text": "the size of @buf."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "buf_consumed",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "403",
                                    "#text": "if not `NULL`, will be set to the number of bytes written into @buf."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "404",
                                    "#text": "the #hb_font_t used to shape this buffer, needed to\n       read glyph names and extents. If `NULL`, an empty font will be used."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "406",
                                    "#text": "the #hb_buffer_serialize_format_t to use for formatting the output."
                                },
                                "type": {
                                    "@name": "buffer_serialize_format_t",
                                    "@c:type": "hb_buffer_serialize_format_t"
                                }
                            },
                            {
                                "@name": "flags",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "407",
                                    "#text": "the #hb_buffer_serialize_flags_t that control what glyph properties\n        to serialize."
                                },
                                "type": {
                                    "@name": "buffer_serialize_flags_t",
                                    "@c:type": "hb_buffer_serialize_flags_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_serialize_list_formats",
                    "@c:identifier": "hb_buffer_serialize_list_formats",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer-serialize.cc",
                        "@line": "40",
                        "#text": "Returns a list of supported buffer serialization formats."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "646"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer-serialize.cc",
                            "@line": "45",
                            "#text": "A string array of buffer serialization formats. Should not be freed."
                        },
                        "array": {
                            "@c:type": "const char**",
                            "type": {
                                "@name": "utf8"
                            }
                        }
                    }
                },
                {
                    "@name": "buffer_serialize_unicode",
                    "@c:identifier": "hb_buffer_serialize_unicode",
                    "@version": "2.7.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer-serialize.cc",
                        "@line": "509",
                        "#text": "Serializes @buffer into a textual representation of its content,\nwhen the buffer contains Unicode codepoints (i.e., before shaping). This is\nuseful for showing the contents of the buffer, for example during debugging.\nThere are currently two supported serialization formats:\n\n## text\nA human-readable, plain text format.\nThe serialized codepoints will look something like:\n\n```\n\u00a0<U+0651=0|U+0628=1>\n```\n\n- Glyphs are separated with `|`\n- Unicode codepoints are expressed as zero-padded four (or more)\n  digit hexadecimal numbers preceded by `U+`\n- If #HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS is not set, the cluster\n  will be indicated with a `=` then #hb_glyph_info_t.cluster.\n\n## json\nA machine-readable, structured format.\nThe serialized codepoints will be a list of objects with the following\nproperties:\n- `u`: the Unicode codepoint as a decimal integer\n- `cl`: #hb_glyph_info_t.cluster if\n  #HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS is not set.\n\nFor example:\n\n```\n[{u:1617,cl:0},{u:1576,cl:1}]\n```"
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "660"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer-serialize.cc",
                            "@line": "555",
                            "#text": "The number of serialized items."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "511",
                                    "#text": "an #hb_buffer_t buffer."
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "start",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "512",
                                    "#text": "the first item in @buffer to serialize."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "end",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "513",
                                    "#text": "the last item in @buffer to serialize."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "buf",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "514",
                                    "#text": "output string to\n      write serialized buffer into."
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "buf_size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "516",
                                    "#text": "the size of @buf."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "buf_consumed",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "517",
                                    "#text": "if not `NULL`, will be set to the number of bytes written into @buf."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "518",
                                    "#text": "the #hb_buffer_serialize_format_t to use for formatting the output."
                                },
                                "type": {
                                    "@name": "buffer_serialize_format_t",
                                    "@c:type": "hb_buffer_serialize_format_t"
                                }
                            },
                            {
                                "@name": "flags",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer-serialize.cc",
                                    "@line": "519",
                                    "#text": "the #hb_buffer_serialize_flags_t that control what glyph properties\n        to serialize."
                                },
                                "type": {
                                    "@name": "buffer_serialize_flags_t",
                                    "@c:type": "hb_buffer_serialize_flags_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_cluster_level",
                    "@c:identifier": "hb_buffer_set_cluster_level",
                    "@version": "0.9.42",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1123",
                        "#text": "Sets the cluster level of a buffer. The #hb_buffer_cluster_level_t\ndictates one aspect of how HarfBuzz will treat non-base characters\nduring shaping."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "453"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1125",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "cluster_level",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1126",
                                    "#text": "The cluster level to set on the buffer"
                                },
                                "type": {
                                    "@name": "buffer_cluster_level_t",
                                    "@c:type": "hb_buffer_cluster_level_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_content_type",
                    "@c:identifier": "hb_buffer_set_content_type",
                    "@version": "0.9.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "841",
                        "#text": "Sets the type of @buffer contents. Buffers are either empty, contain\ncharacters (before shaping), or contain glyphs (the result of shaping)."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "298"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "843",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "content_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "844",
                                    "#text": "The type of buffer contents to set"
                                },
                                "type": {
                                    "@name": "buffer_content_type_t",
                                    "@c:type": "hb_buffer_content_type_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_direction",
                    "@c:identifier": "hb_buffer_set_direction",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "918",
                        "#text": "Set the text flow direction of the buffer. No shaping can happen without\nsetting @buffer direction, and it controls the visual direction for the\noutput glyphs; for RTL direction the glyphs will be reversed. Many layout\nfeatures depend on the proper setting of the direction, for example,\nreversing RTL text before shaping, then shaping with LTR direction is not\nthe same as keeping the text in logical order and shaping with RTL\ndirection."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "313"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "920",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "921",
                                    "#text": "the #hb_direction_t of the @buffer"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_flags",
                    "@c:identifier": "hb_buffer_set_flags",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1087",
                        "#text": "Sets @buffer flags to @flags. See #hb_buffer_flags_t."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "411"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1089",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "flags",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1090",
                                    "#text": "The buffer flags to set"
                                },
                                "type": {
                                    "@name": "buffer_flags_t",
                                    "@c:type": "hb_buffer_flags_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_invisible_glyph",
                    "@c:identifier": "hb_buffer_set_invisible_glyph",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1204",
                        "#text": "Sets the #hb_codepoint_t that replaces invisible characters in\nthe shaping result.  If set to zero (default), the glyph for the\nU+0020 SPACE character is used.  Otherwise, this value is used\nverbatim."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "477"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1206",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "invisible",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1207",
                                    "#text": "the invisible #hb_codepoint_t"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_language",
                    "@c:identifier": "hb_buffer_set_language",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1005",
                        "#text": "Sets the language of @buffer to @language.\n\nLanguages are crucial for selecting which OpenType feature to apply to the\nbuffer which can result in applying language-specific behaviour. Languages\nare orthogonal to the scripts, and though they are related, they are\ndifferent concepts and should not be confused with each other.\n\nUse hb_language_from_string() to convert from BCP 47 language tags to\n#hb_language_t."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "327"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1007",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "language",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1008",
                                    "#text": "An hb_language_t to set"
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_length",
                    "@c:identifier": "hb_buffer_set_length",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1363",
                        "#text": "Similar to hb_buffer_pre_allocate(), but clears any new items added at the\nend."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "566"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1371",
                            "#text": "`true` if @buffer memory allocation succeeded, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1365",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1366",
                                    "#text": "The new length of @buffer"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_message_func",
                    "@c:identifier": "hb_buffer_set_message_func",
                    "@version": "1.1.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "2090",
                        "#text": "Sets the implementation function for #hb_buffer_message_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "792"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "2092",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "2093",
                                    "#text": "Callback function"
                                },
                                "type": {
                                    "@name": "buffer_message_func_t",
                                    "@c:type": "hb_buffer_message_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "2094",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "2095",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_not_found_glyph",
                    "@c:identifier": "hb_buffer_set_not_found_glyph",
                    "@version": "3.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1243",
                        "#text": "Sets the #hb_codepoint_t that replaces characters not found in\nthe font during shaping.\n\nThe not-found glyph defaults to zero, sometimes knows as the\n\".notdef\" glyph.  This API allows for differentiating the two."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "484"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1245",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "not_found",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1246",
                                    "#text": "the not-found #hb_codepoint_t"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_replacement_codepoint",
                    "@c:identifier": "hb_buffer_set_replacement_codepoint",
                    "@version": "0.9.31",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1163",
                        "#text": "Sets the #hb_codepoint_t that replaces invalid entries for a given encoding\nwhen adding text to @buffer.\n\nDefault is #HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "470"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1165",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "replacement",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1166",
                                    "#text": "the replacement #hb_codepoint_t"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_script",
                    "@c:identifier": "hb_buffer_set_script",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "961",
                        "#text": "Sets the script of @buffer to @script.\n\nScript is crucial for choosing the proper shaping behaviour for scripts that\nrequire it (e.g. Arabic) and the which OpenType features defined in the font\nto be applied.\n\nYou can pass one of the predefined #hb_script_t values, or use\nhb_script_from_string() or hb_script_from_iso15924_tag() to get the\ncorresponding script from an ISO 15924 script tag."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "320"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "963",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "script",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "964",
                                    "#text": "An #hb_script_t to set."
                                },
                                "type": {
                                    "@name": "script_t",
                                    "@c:type": "hb_script_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_segment_properties",
                    "@c:identifier": "hb_buffer_set_segment_properties",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1049",
                        "#text": "Sets the segment properties of the buffer, a shortcut for calling\nhb_buffer_set_direction(), hb_buffer_set_script() and\nhb_buffer_set_language() individually."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "335"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1051",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "props",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "1052",
                                    "#text": "An #hb_segment_properties_t to use"
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "const hb_segment_properties_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_unicode_funcs",
                    "@c:identifier": "hb_buffer_set_unicode_funcs",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "877",
                        "#text": "Sets the Unicode-functions structure of a buffer to\n@unicode_funcs."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "306"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "879",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "unicode_funcs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "880",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "buffer_set_user_data",
                    "@c:identifier": "hb_buffer_set_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "797",
                        "#text": "Attaches a user-data key/data pair to the specified buffer."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "272"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "807",
                            "#text": "`true` if success, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "799",
                                    "#text": "An #hb_buffer_t"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "800",
                                    "#text": "The user-data key"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "801",
                                    "#text": "A pointer to the user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "802",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "803",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "color_get_alpha",
                    "@c:identifier": "hb_color_get_alpha",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "1173",
                        "#text": "Fetches the alpha channel of the given @color."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "885"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "1179",
                            "#text": "Alpha channel value"
                        },
                        "type": {
                            "@name": "guint8",
                            "@c:type": "uint8_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "color",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "1175",
                                "#text": "an #hb_color_t we are interested in its channels."
                            },
                            "type": {
                                "@name": "color_t",
                                "@c:type": "hb_color_t"
                            }
                        }
                    }
                },
                {
                    "@name": "color_get_blue",
                    "@c:identifier": "hb_color_get_blue",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "1221",
                        "#text": "Fetches the blue channel of the given @color."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "897"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "1227",
                            "#text": "Blue channel value"
                        },
                        "type": {
                            "@name": "guint8",
                            "@c:type": "uint8_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "color",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "1223",
                                "#text": "an #hb_color_t we are interested in its channels."
                            },
                            "type": {
                                "@name": "color_t",
                                "@c:type": "hb_color_t"
                            }
                        }
                    }
                },
                {
                    "@name": "color_get_green",
                    "@c:identifier": "hb_color_get_green",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "1205",
                        "#text": "Fetches the green channel of the given @color."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "893"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "1211",
                            "#text": "Green channel value"
                        },
                        "type": {
                            "@name": "guint8",
                            "@c:type": "uint8_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "color",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "1207",
                                "#text": "an #hb_color_t we are interested in its channels."
                            },
                            "type": {
                                "@name": "color_t",
                                "@c:type": "hb_color_t"
                            }
                        }
                    }
                },
                {
                    "@name": "color_get_red",
                    "@c:identifier": "hb_color_get_red",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "1189",
                        "#text": "Fetches the red channel of the given @color."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "889"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "1195",
                            "#text": "Red channel value"
                        },
                        "type": {
                            "@name": "guint8",
                            "@c:type": "uint8_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "color",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "1191",
                                "#text": "an #hb_color_t we are interested in its channels."
                            },
                            "type": {
                                "@name": "color_t",
                                "@c:type": "hb_color_t"
                            }
                        }
                    }
                },
                {
                    "@name": "direction_from_string",
                    "@c:identifier": "hb_direction_from_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "170",
                        "#text": "Converts a string to an #hb_direction_t.\n\nMatching is loose and applies only to the first letter. For\nexamples, \"LTR\" and \"left-to-right\" will both return #HB_DIRECTION_LTR.\n\nUnmatched strings will return #HB_DIRECTION_INVALID."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "239"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "182",
                            "#text": "The #hb_direction_t matching @str"
                        },
                        "type": {
                            "@name": "direction_t",
                            "@c:type": "hb_direction_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "172",
                                    "#text": "String to convert"
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "173",
                                    "#text": "Length of @str, or -1 if it is `NULL`-terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "direction_to_string",
                    "@c:identifier": "hb_direction_to_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "203",
                        "#text": "Converts an #hb_direction_t to a string."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "242"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "209",
                            "#text": "The string corresponding to @direction"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "direction",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "205",
                                "#text": "The #hb_direction_t to convert"
                            },
                            "type": {
                                "@name": "direction_t",
                                "@c:type": "hb_direction_t"
                            }
                        }
                    }
                },
                {
                    "@name": "draw_close_path",
                    "@c:identifier": "hb_draw_close_path",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "348",
                        "#text": "Perform a \"close-path\" draw operation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "319"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "350",
                                    "#text": "draw functions"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "351",
                                    "#text": "associated draw data passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "352",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_cubic_to",
                    "@c:identifier": "hb_draw_cubic_to",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "319",
                        "#text": "Perform a \"cubic-to\" draw operation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "312"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "321",
                                    "#text": "draw functions"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "322",
                                    "#text": "associated draw data passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "323",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "control1_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "324",
                                    "#text": "X component of first control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "control1_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "325",
                                    "#text": "Y component of first control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "control2_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "326",
                                    "#text": "X component of second control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "control2_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "327",
                                    "#text": "Y component of second control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "328",
                                    "#text": "X component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "329",
                                    "#text": "Y component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_funcs_create",
                    "@c:identifier": "hb_draw_funcs_create",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "133",
                        "#text": "Creates a new draw callbacks object."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "280"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-draw.cc",
                            "@line": "138",
                            "#text": "A newly allocated #hb_draw_funcs_t with a reference count of 1. The initial\nreference count should be released with hb_draw_funcs_destroy when you are\ndone using the #hb_draw_funcs_t. This function never returns `NULL`. If\nmemory cannot be allocated, a special singleton #hb_draw_funcs_t object will\nbe returned."
                        },
                        "type": {
                            "@name": "draw_funcs_t",
                            "@c:type": "hb_draw_funcs_t*"
                        }
                    }
                },
                {
                    "@name": "draw_funcs_destroy",
                    "@c:identifier": "hb_draw_funcs_destroy",
                    "@version": "4.0.0",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "189",
                        "#text": "Deallocate the @dfuncs.\nDecreases the reference count on @dfuncs by one. If the result is zero, then\n@dfuncs and all associated resources are freed. See hb_draw_funcs_reference()."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "286"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dfuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.cc",
                                "@line": "191",
                                "#text": "draw functions"
                            },
                            "type": {
                                "@name": "draw_funcs_t",
                                "@c:type": "hb_draw_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "draw_funcs_is_immutable",
                    "@c:identifier": "hb_draw_funcs_is_immutable",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "235",
                        "#text": "Checks whether @dfuncs is immutable."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "292"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-draw.cc",
                            "@line": "241",
                            "#text": "`true` if @dfuncs is immutable, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dfuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.cc",
                                "@line": "237",
                                "#text": "draw functions"
                            },
                            "type": {
                                "@name": "draw_funcs_t",
                                "@c:type": "hb_draw_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "draw_funcs_make_immutable",
                    "@c:identifier": "hb_draw_funcs_make_immutable",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "218",
                        "#text": "Makes @dfuncs object immutable."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "289"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dfuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.cc",
                                "@line": "220",
                                "#text": "draw functions"
                            },
                            "type": {
                                "@name": "draw_funcs_t",
                                "@c:type": "hb_draw_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "draw_funcs_reference",
                    "@c:identifier": "hb_draw_funcs_reference",
                    "@version": "4.0.0",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "171",
                        "#text": "Increases the reference count on @dfuncs by one. This prevents @buffer from\nbeing destroyed until a matching call to hb_draw_funcs_destroy() is made."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "283"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-draw.cc",
                            "@line": "178",
                            "#text": "The referenced #hb_draw_funcs_t."
                        },
                        "type": {
                            "@name": "draw_funcs_t",
                            "@c:type": "hb_draw_funcs_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "dfuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-draw.cc",
                                "@line": "173",
                                "#text": "draw functions"
                            },
                            "type": {
                                "@name": "draw_funcs_t",
                                "@c:type": "hb_draw_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "draw_funcs_set_close_path_func",
                    "@c:identifier": "hb_draw_funcs_set_close_path_func",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "262",
                        "#text": "Sets close-path callback to the draw functions object."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "274"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "264",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "265",
                                    "#text": "close-path callback"
                                },
                                "type": {
                                    "@name": "draw_close_path_func_t",
                                    "@c:type": "hb_draw_close_path_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "266",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "267",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_funcs_set_cubic_to_func",
                    "@c:identifier": "hb_draw_funcs_set_cubic_to_func",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "246",
                        "#text": "Sets cubic-to callback to the draw functions object."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "258"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "248",
                                    "#text": "draw functions"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "249",
                                    "#text": "cubic-to callback"
                                },
                                "type": {
                                    "@name": "draw_cubic_to_func_t",
                                    "@c:type": "hb_draw_cubic_to_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "250",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "251",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_funcs_set_line_to_func",
                    "@c:identifier": "hb_draw_funcs_set_line_to_func",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "214",
                        "#text": "Sets line-to callback to the draw functions object."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "226"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "216",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "217",
                                    "#text": "line-to callback"
                                },
                                "type": {
                                    "@name": "draw_line_to_func_t",
                                    "@c:type": "hb_draw_line_to_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "218",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "219",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_funcs_set_move_to_func",
                    "@c:identifier": "hb_draw_funcs_set_move_to_func",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "198",
                        "#text": "Sets move-to callback to the draw functions object."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "210"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "200",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "201",
                                    "#text": "move-to callback"
                                },
                                "type": {
                                    "@name": "draw_move_to_func_t",
                                    "@c:type": "hb_draw_move_to_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "202",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "203",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_funcs_set_quadratic_to_func",
                    "@c:identifier": "hb_draw_funcs_set_quadratic_to_func",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "230",
                        "#text": "Sets quadratic-to callback to the draw functions object."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "242"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "232",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "233",
                                    "#text": "quadratic-to callback"
                                },
                                "type": {
                                    "@name": "draw_quadratic_to_func_t",
                                    "@c:type": "hb_draw_quadratic_to_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "234",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "235",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_line_to",
                    "@c:identifier": "hb_draw_line_to",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "273",
                        "#text": "Perform a \"line-to\" draw operation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "301"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "275",
                                    "#text": "draw functions"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "276",
                                    "#text": "associated draw data passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "277",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "to_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "278",
                                    "#text": "X component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "279",
                                    "#text": "Y component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_move_to",
                    "@c:identifier": "hb_draw_move_to",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "252",
                        "#text": "Perform a \"move-to\" draw operation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "296"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "254",
                                    "#text": "draw functions"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "255",
                                    "#text": "associated draw data passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "256",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "to_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "257",
                                    "#text": "X component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "258",
                                    "#text": "Y component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_quadratic_to",
                    "@c:identifier": "hb_draw_quadratic_to",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "294",
                        "#text": "Perform a \"quadratic-to\" draw operation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "306"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "296",
                                    "#text": "draw functions"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "297",
                                    "#text": "associated draw data passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "298",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "control_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "299",
                                    "#text": "X component of control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "control_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "300",
                                    "#text": "Y component of control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "301",
                                    "#text": "X component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.cc",
                                    "@line": "302",
                                    "#text": "Y component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_builder_add_table",
                    "@c:identifier": "hb_face_builder_add_table",
                    "@version": "1.9.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "758",
                        "#text": "Add table for @tag with data provided by @blob to the face.  @face must\nbe created using hb_face_builder_create()."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "170"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "760",
                                    "#text": "A face object created with hb_face_builder_create()"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "761",
                                    "#text": "The #hb_tag_t of the table to add"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "blob",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "762",
                                    "#text": "The blob containing the table data to add"
                                },
                                "type": {
                                    "@name": "blob_t",
                                    "@c:type": "hb_blob_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_builder_create",
                    "@c:identifier": "hb_face_builder_create",
                    "@version": "1.9.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "736",
                        "#text": "Creates a #hb_face_t that can be used with hb_face_builder_add_table().\nAfter tables are added to the face, it can be compiled to a binary\nfont file by calling hb_face_reference_blob()."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "167"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "743",
                            "#text": "New face."
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    }
                },
                {
                    "@name": "face_collect_unicodes",
                    "@c:identifier": "hb_face_collect_unicodes",
                    "@version": "1.9.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "579",
                        "#text": "Collects all of the Unicode characters covered by @face and adds\nthem to the #hb_set_t set @out."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "149"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "581",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "out",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "582",
                                    "#text": "The set to add Unicode characters to"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_collect_variation_selectors",
                    "@c:identifier": "hb_face_collect_variation_selectors",
                    "@version": "1.9.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "595",
                        "#text": "Collects all Unicode \"Variation Selector\" characters covered by @face and adds\nthem to the #hb_set_t set @out."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "153"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "597",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "out",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "598",
                                    "#text": "The set to add Variation Selector characters to"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_collect_variation_unicodes",
                    "@c:identifier": "hb_face_collect_variation_unicodes",
                    "@version": "1.9.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "611",
                        "#text": "Collects all Unicode characters for @variation_selector covered by @face and adds\nthem to the #hb_set_t set @out."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "157"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "613",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "variation_selector",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "614",
                                    "#text": "The Variation Selector to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "out",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "615",
                                    "#text": "The set to add Unicode characters to"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_count",
                    "@c:identifier": "hb_face_count",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "54",
                        "#text": "Fetches the number of faces in a blob."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "42"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "60",
                            "#text": "Number of faces in @blob"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "blob",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "56",
                                "#text": "a blob."
                            },
                            "type": {
                                "@name": "blob_t",
                                "@c:type": "hb_blob_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_create",
                    "@c:identifier": "hb_face_create",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "192",
                        "#text": "Constructs a new face object from the specified blob and\na face index into that blob.\n\nThe face index is used for blobs of file formats such as TTC and\nand DFont that can contain more than one face.  Face indices within\nsuch collections are zero-based.\n\n<note>Note: If the blob font format is not a collection, @index\nis ignored.  Otherwise, only the lower 16-bits of @index are used.\nThe unmodified @index can be accessed via hb_face_get_index().</note>\n\n<note>Note: The high 16-bits of @index, if non-zero, are used by\nhb_font_create() to load named-instances in variable fonts.  See\nhb_font_create() for details.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "58"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "212",
                            "#text": "The new face object"
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "blob",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "194",
                                    "#text": "#hb_blob_t to work upon"
                                },
                                "type": {
                                    "@name": "blob_t",
                                    "@c:type": "hb_blob_t*"
                                }
                            },
                            {
                                "@name": "index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "195",
                                    "#text": "The index of the face within @blob"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_create_for_tables",
                    "@c:identifier": "hb_face_create_for_tables",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "100",
                        "#text": "Variant of hb_face_create(), built for those cases where it is more\nconvenient to provide data for individual tables instead of the whole font\ndata. With the caveat that hb_face_get_table_tags() does not currently work\nwith faces created this way.\n\nCreates a new face object from the specified @user_data and @reference_table_func,\nwith the @destroy callback."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "78"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "114",
                            "#text": "The new face object"
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "reference_table_func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "1",
                                "@destroy": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "102",
                                    "#text": "Table-referencing function"
                                },
                                "type": {
                                    "@name": "reference_table_func_t",
                                    "@c:type": "hb_reference_table_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "103",
                                    "#text": "A pointer to the user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "104",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_destroy",
                    "@c:identifier": "hb_face_destroy",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "276",
                        "#text": "Decreases the reference count on a face object. When the\nreference count reaches zero, the face is destroyed,\nfreeing all memory."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "89"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "278",
                                "#text": "A face object"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_get_empty",
                    "@c:identifier": "hb_face_get_empty",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "244",
                        "#text": "Fetches the singleton empty face object."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "83"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "249",
                            "#text": "The empty face object"
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    }
                },
                {
                    "@name": "face_get_glyph_count",
                    "@c:identifier": "hb_face_get_glyph_count",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "520",
                        "#text": "Fetches the glyph-count value of the specified face object."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "135"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "526",
                            "#text": "The glyph-count value of @face"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "522",
                                "#text": "A face object"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "const hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_get_index",
                    "@c:identifier": "hb_face_get_index",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "448",
                        "#text": "Fetches the face-index corresponding to the given face.\n\n<note>Note: face indices within a collection are zero-based.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "121"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "456",
                            "#text": "The index of @face."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "450",
                                "#text": "A face object"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "const hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_get_table_tags",
                    "@c:identifier": "hb_face_get_table_tags",
                    "@version": "1.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "536",
                        "#text": "Fetches a list of all table tags for a face, if possible. The list returned will\nbegin at the offset provided"
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "138"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "547",
                            "#text": "Total number of tables, or zero if it is not possible to list"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "538",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "const hb_face_t*"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "539",
                                    "#text": "The index of first table tag to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "table_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "540",
                                    "#text": "Input = the maximum number of table tags to return;\n               Output = the actual number of table tags returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "table_tags",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "542",
                                    "#text": "The array of table tags found"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_get_upem",
                    "@c:identifier": "hb_face_get_upem",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "485",
                        "#text": "Fetches the units-per-em (upem) value of the specified face object."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "128"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "491",
                            "#text": "The upem value of @face"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "487",
                                "#text": "A face object"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "const hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_get_user_data",
                    "@c:identifier": "hb_face_get_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "332",
                        "#text": "Fetches the user data associated with the specified key,\nattached to the specified face object."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "99"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "340",
                            "#text": "A pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "334",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "const hb_face_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "335",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_is_immutable",
                    "@c:identifier": "hb_face_is_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "368",
                        "#text": "Tests whether the given face object is immutable."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "106"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "374",
                            "#text": "`true` is @face is immutable, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "370",
                                "#text": "A face object"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "const hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_make_immutable",
                    "@c:identifier": "hb_face_make_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "351",
                        "#text": "Makes the given face object immutable."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "103"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "353",
                                "#text": "A face object"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_reference",
                    "@c:identifier": "hb_face_reference",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "260",
                        "#text": "Increases the reference count on a face object."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "86"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "266",
                            "#text": "The @face object"
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "262",
                                "#text": "A face object"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_reference_blob",
                    "@c:identifier": "hb_face_reference_blob",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "407",
                        "#text": "Fetches a pointer to the binary blob that contains the\nspecified face. Returns an empty blob if referencing face data is not\npossible."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "114"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "415",
                            "#text": "A pointer to the blob for @face"
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-face.cc",
                                "@line": "409",
                                "#text": "A face object"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "face_reference_table",
                    "@c:identifier": "hb_face_reference_table",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "385",
                        "#text": "Fetches a reference to the specified table within\nthe specified face."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "110"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "393",
                            "#text": "A pointer to the @tag table within @face"
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "387",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "const hb_face_t*"
                                }
                            },
                            {
                                "@name": "tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "388",
                                    "#text": "The #hb_tag_t of the table to query"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_set_glyph_count",
                    "@c:identifier": "hb_face_set_glyph_count",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "501",
                        "#text": "Sets the glyph count for a face object to the specified value."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "131"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "503",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "glyph_count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "504",
                                    "#text": "The glyph-count value to assign"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_set_index",
                    "@c:identifier": "hb_face_set_index",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "425",
                        "#text": "Assigns the specified face-index to @face. Fails if the\nface is immutable.\n\n<note>Note: changing the index has no effect on the face itself\nThis only changes the value returned by hb_face_get_index().</note>"
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "117"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "427",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "428",
                                    "#text": "The index to assign"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_set_upem",
                    "@c:identifier": "hb_face_set_upem",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "466",
                        "#text": "Sets the units-per-em (upem) for a face object to the specified value."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "124"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "468",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "upem",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "469",
                                    "#text": "The units-per-em value to assign"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "face_set_user_data",
                    "@c:identifier": "hb_face_set_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "308",
                        "#text": "Attaches a user-data key/data pair to the given face object."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "92"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.cc",
                            "@line": "318",
                            "#text": "`true` if success, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "310",
                                    "#text": "A face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "311",
                                    "#text": "The user-data key to set"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "312",
                                    "#text": "A pointer to the user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "313",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.cc",
                                    "@line": "314",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "feature_from_string",
                    "@c:identifier": "hb_feature_from_string",
                    "@version": "0.9.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "913",
                        "#text": "Parses a string into a #hb_feature_t.\n\nThe format for specifying feature strings follows. All valid CSS\nfont-feature-settings values other than 'normal' and the global values are\nalso accepted, though not documented below. CSS string escapes are not\nsupported.\n\nThe range indices refer to the positions between Unicode characters. The\nposition before the first character is always 0.\n\nThe format is Python-esque.  Here is how it all works:\n\n<informaltable pgwide='1' align='left' frame='none'>\n<tgroup cols='5'>\n<thead>\n<row><entry>Syntax</entry>    <entry>Value</entry> <entry>Start</entry> <entry>End</entry></row>\n</thead>\n<tbody>\n<row><entry>Setting value:</entry></row>\n<row><entry>kern</entry>      <entry>1</entry>     <entry>0</entry>      <entry>\u221e</entry>   <entry>Turn feature on</entry></row>\n<row><entry>+kern</entry>     <entry>1</entry>     <entry>0</entry>      <entry>\u221e</entry>   <entry>Turn feature on</entry></row>\n<row><entry>-kern</entry>     <entry>0</entry>     <entry>0</entry>      <entry>\u221e</entry>   <entry>Turn feature off</entry></row>\n<row><entry>kern=0</entry>    <entry>0</entry>     <entry>0</entry>      <entry>\u221e</entry>   <entry>Turn feature off</entry></row>\n<row><entry>kern=1</entry>    <entry>1</entry>     <entry>0</entry>      <entry>\u221e</entry>   <entry>Turn feature on</entry></row>\n<row><entry>aalt=2</entry>    <entry>2</entry>     <entry>0</entry>      <entry>\u221e</entry>   <entry>Choose 2nd alternate</entry></row>\n<row><entry>Setting index:</entry></row>\n<row><entry>kern[]</entry>    <entry>1</entry>     <entry>0</entry>      <entry>\u221e</entry>   <entry>Turn feature on</entry></row>\n<row><entry>kern[:]</entry>   <entry>1</entry>     <entry>0</entry>      <entry>\u221e</entry>   <entry>Turn feature on</entry></row>\n<row><entry>kern[5:]</entry>  <entry>1</entry>     <entry>5</entry>      <entry>\u221e</entry>   <entry>Turn feature on, partial</entry></row>\n<row><entry>kern[:5]</entry>  <entry>1</entry>     <entry>0</entry>      <entry>5</entry>   <entry>Turn feature on, partial</entry></row>\n<row><entry>kern[3:5]</entry> <entry>1</entry>     <entry>3</entry>      <entry>5</entry>   <entry>Turn feature on, range</entry></row>\n<row><entry>kern[3]</entry>   <entry>1</entry>     <entry>3</entry>      <entry>3+1</entry> <entry>Turn feature on, single char</entry></row>\n<row><entry>Mixing it all:</entry></row>\n<row><entry>aalt[3:5]=2</entry> <entry>2</entry>   <entry>3</entry>      <entry>5</entry>   <entry>Turn 2nd alternate on for range</entry></row>\n</tbody>\n</tgroup>\n</informaltable>"
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "830"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "957",
                            "#text": "`true` if @str is successfully parsed, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "915",
                                    "#text": "a string to parse"
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "916",
                                    "#text": "length of @str, or -1 if string is `NULL` terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "feature",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "917",
                                    "#text": "the #hb_feature_t to initialize with the parsed values"
                                },
                                "type": {
                                    "@name": "feature_t",
                                    "@c:type": "hb_feature_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "feature_to_string",
                    "@c:identifier": "hb_feature_to_string",
                    "@version": "0.9.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "983",
                        "#text": "Converts a #hb_feature_t into a `NULL`-terminated string in the format\nunderstood by hb_feature_from_string(). The client in responsible for\nallocating big enough size for @buf, 128 bytes is more than enough."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "834"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "feature",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "985",
                                    "#text": "an #hb_feature_t to convert"
                                },
                                "type": {
                                    "@name": "feature_t",
                                    "@c:type": "hb_feature_t*"
                                }
                            },
                            {
                                "@name": "buf",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "986",
                                    "#text": "output string"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "987",
                                    "#text": "the allocated size of @buf"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_add_glyph_origin_for_direction",
                    "@c:identifier": "hb_font_add_glyph_origin_for_direction",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1443",
                        "#text": "Adds the origin coordinates to an (X,Y) point coordinate, in\nthe specified glyph ID in the specified font.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "926"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1445",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1446",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1447",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1448",
                                    "#text": "Input = The original X coordinate\n    Output = The X coordinate plus the X-coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1450",
                                    "#text": "Input = The original Y coordinate\n    Output = The Y coordinate plus the Y-coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_changed",
                    "@c:identifier": "hb_font_changed",
                    "@version": "4.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1960",
                        "#text": "Notifies the @font that underlying font data has changed.\nThis has the effect of increasing the serial as returned\nby hb_font_get_serial(), which invalidates internal caches."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1009"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "1962",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_create",
                    "@c:identifier": "hb_font_create",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1694",
                        "#text": "Constructs a new font object from the specified face.\n\n<note>Note: If @face's index value (as passed to hb_face_create()\nhas non-zero top 16-bits, those bits minus one are passed to\nhb_font_set_var_named_instance(), effectively loading a named-instance\nof a variable font, instead of the default-instance.  This allows\nspecifying which named-instance to load by default when creating the\nface.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "973"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1707",
                            "#text": "The new font object"
                        },
                        "type": {
                            "@name": "font_t",
                            "@c:type": "hb_font_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "1696",
                                "#text": "a face."
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_create_sub_font",
                    "@c:identifier": "hb_font_create_sub_font",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1745",
                        "#text": "Constructs a sub-font font object from the specified @parent font,\nreplicating the parent's properties."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "976"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1752",
                            "#text": "The new sub-font font object"
                        },
                        "type": {
                            "@name": "font_t",
                            "@c:type": "hb_font_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "parent",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "1747",
                                "#text": "The parent font object"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_destroy",
                    "@c:identifier": "hb_font_destroy",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1830",
                        "#text": "Decreases the reference count on the given font object. When the\nreference count reaches zero, the font is destroyed,\nfreeing all memory."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "985"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "1832",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_funcs_create",
                    "@c:identifier": "hb_font_funcs_create",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "665",
                        "#text": "Creates a new #hb_font_funcs_t structure of font functions."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "69"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "670",
                            "#text": "The font-functions structure"
                        },
                        "type": {
                            "@name": "font_funcs_t",
                            "@c:type": "hb_font_funcs_t*"
                        }
                    }
                },
                {
                    "@name": "font_funcs_destroy",
                    "@c:identifier": "hb_font_funcs_destroy",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "718",
                        "#text": "Decreases the reference count on a font-functions structure. When\nthe reference count reaches zero, the font-functions structure is\ndestroyed, freeing all memory."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "78"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ffuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "720",
                                "#text": "The font-functions structure"
                            },
                            "type": {
                                "@name": "font_funcs_t",
                                "@c:type": "hb_font_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_funcs_get_empty",
                    "@c:identifier": "hb_font_funcs_get_empty",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "687",
                        "#text": "Fetches an empty font-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "72"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "692",
                            "#text": "The font-functions structure"
                        },
                        "type": {
                            "@name": "font_funcs_t",
                            "@c:type": "hb_font_funcs_t*"
                        }
                    }
                },
                {
                    "@name": "font_funcs_get_user_data",
                    "@c:identifier": "hb_font_funcs_get_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "771",
                        "#text": "Fetches the user data associated with the specified key,\nattached to the specified font-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "89"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "779",
                            "#text": "A pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "773",
                                    "#text": "The font-functions structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "const hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "774",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_is_immutable",
                    "@c:identifier": "hb_font_funcs_is_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "808",
                        "#text": "Tests whether a font-functions structure is immutable."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "97"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "814",
                            "#text": "`true` if @ffuncs is immutable, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ffuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "810",
                                "#text": "The font-functions structure"
                            },
                            "type": {
                                "@name": "font_funcs_t",
                                "@c:type": "hb_font_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_funcs_make_immutable",
                    "@c:identifier": "hb_font_funcs_make_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "791",
                        "#text": "Makes a font-functions structure immutable."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "94"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ffuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "793",
                                "#text": "The font-functions structure"
                            },
                            "type": {
                                "@name": "font_funcs_t",
                                "@c:type": "hb_font_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_funcs_reference",
                    "@c:identifier": "hb_font_funcs_reference",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "702",
                        "#text": "Increases the reference count on a font-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "75"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "708",
                            "#text": "The font-functions structure"
                        },
                        "type": {
                            "@name": "font_funcs_t",
                            "@c:type": "hb_font_funcs_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ffuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "704",
                                "#text": "The font-functions structure"
                            },
                            "type": {
                                "@name": "font_funcs_t",
                                "@c:type": "hb_font_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_funcs_set_font_h_extents_func",
                    "@c:identifier": "hb_font_funcs_set_font_h_extents_func",
                    "@version": "1.1.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "536",
                        "#text": "Sets the implementation function for #hb_font_get_font_h_extents_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "548"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "538",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "539",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_font_h_extents_func_t",
                                    "@c:type": "hb_font_get_font_h_extents_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "540",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "541",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_font_v_extents_func",
                    "@c:identifier": "hb_font_funcs_set_font_v_extents_func",
                    "@version": "1.1.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "552",
                        "#text": "Sets the implementation function for #hb_font_get_font_v_extents_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "564"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "554",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "555",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_font_v_extents_func_t",
                                    "@c:type": "hb_font_get_font_v_extents_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "556",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "557",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_contour_point_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_contour_point_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "744",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_contour_point_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "756"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "746",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "747",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_contour_point_func_t",
                                    "@c:type": "hb_font_get_glyph_contour_point_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "748",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "749",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_extents_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_extents_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "728",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_extents_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "740"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "730",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "731",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_extents_func_t",
                                    "@c:type": "hb_font_get_glyph_extents_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "732",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "733",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_from_name_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_from_name_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "776",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_from_name_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "788"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "778",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "779",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_from_name_func_t",
                                    "@c:type": "hb_font_get_glyph_from_name_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "780",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "781",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_func",
                    "@version": "0.9.2",
                    "@deprecated": "1",
                    "@deprecated-version": "1.2.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2677",
                        "#text": "Deprecated.  Use hb_font_funcs_set_nominal_glyph_func() and\nhb_font_funcs_set_variation_glyph_func() instead."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "106"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2679",
                                    "#text": "The font-functions structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2680",
                                    "#text": "callback function"
                                },
                                "type": {
                                    "@name": "font_get_glyph_func_t",
                                    "@c:type": "hb_font_get_glyph_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2681",
                                    "#text": "data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2682",
                                    "#text": "function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_h_advance_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_h_advance_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "616",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_h_advance_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "628"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "618",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "619",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_h_advance_func_t",
                                    "@c:type": "hb_font_get_glyph_h_advance_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "620",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "621",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_h_advances_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_h_advances_func",
                    "@version": "1.8.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "648",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_h_advances_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "660"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "650",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "651",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_h_advances_func_t",
                                    "@c:type": "hb_font_get_glyph_h_advances_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "652",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "653",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_h_kerning_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_h_kerning_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "712",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_h_kerning_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "724"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "714",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "715",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_h_kerning_func_t",
                                    "@c:type": "hb_font_get_glyph_h_kerning_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "716",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "717",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_h_origin_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_h_origin_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "680",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_h_origin_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "692"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "682",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "683",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_h_origin_func_t",
                                    "@c:type": "hb_font_get_glyph_h_origin_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "684",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "685",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_name_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_name_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "760",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_name_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "772"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "762",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "763",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_name_func_t",
                                    "@c:type": "hb_font_get_glyph_name_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "764",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "765",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_shape_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_shape_func",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "792",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_shape_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "804"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "794",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "795",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_shape_func_t",
                                    "@c:type": "hb_font_get_glyph_shape_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "796",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "797",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_v_advance_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_v_advance_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "632",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_v_advance_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "644"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "634",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "635",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_v_advance_func_t",
                                    "@c:type": "hb_font_get_glyph_v_advance_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "636",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "637",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_v_advances_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_v_advances_func",
                    "@version": "1.8.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "664",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_v_advances_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "676"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "666",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "667",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_v_advances_func_t",
                                    "@c:type": "hb_font_get_glyph_v_advances_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "668",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "669",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_v_kerning_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_v_kerning_func",
                    "@version": "0.9.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "226",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_v_kerning_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "239"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "228",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "229",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_v_kerning_func_t",
                                    "@c:type": "hb_font_get_glyph_v_kerning_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "230",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "231",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_glyph_v_origin_func",
                    "@c:identifier": "hb_font_funcs_set_glyph_v_origin_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "696",
                        "#text": "Sets the implementation function for #hb_font_get_glyph_v_origin_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "708"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "698",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "699",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_glyph_v_origin_func_t",
                                    "@c:type": "hb_font_get_glyph_v_origin_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "700",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "701",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_nominal_glyph_func",
                    "@c:identifier": "hb_font_funcs_set_nominal_glyph_func",
                    "@version": "1.2.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "568",
                        "#text": "Sets the implementation function for #hb_font_get_nominal_glyph_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "580"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "570",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "571",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_nominal_glyph_func_t",
                                    "@c:type": "hb_font_get_nominal_glyph_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "572",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "573",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_nominal_glyphs_func",
                    "@c:identifier": "hb_font_funcs_set_nominal_glyphs_func",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "584",
                        "#text": "Sets the implementation function for #hb_font_get_nominal_glyphs_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "596"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "586",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "587",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_nominal_glyphs_func_t",
                                    "@c:type": "hb_font_get_nominal_glyphs_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "588",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "589",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_user_data",
                    "@c:identifier": "hb_font_funcs_set_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "747",
                        "#text": "Attaches a user-data key/data pair to the specified font-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "81"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "757",
                            "#text": "`true` if success, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "749",
                                    "#text": "The font-functions structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "750",
                                    "#text": "The user-data key to set"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "751",
                                    "#text": "A pointer to the user data set"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "752",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "753",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_funcs_set_variation_glyph_func",
                    "@c:identifier": "hb_font_funcs_set_variation_glyph_func",
                    "@version": "1.2.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "600",
                        "#text": "Sets the implementation function for #hb_font_get_variation_glyph_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "612"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ffuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "602",
                                    "#text": "A font-function structure"
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "603",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "font_get_variation_glyph_func_t",
                                    "@c:type": "hb_font_get_variation_glyph_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "604",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "605",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_empty",
                    "@c:identifier": "hb_font_get_empty",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1799",
                        "#text": "Fetches the empty font object."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "979"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1804",
                            "#text": "The empty font object"
                        },
                        "type": {
                            "@name": "font_t",
                            "@c:type": "hb_font_t*"
                        }
                    }
                },
                {
                    "@name": "font_get_extents_for_direction",
                    "@c:identifier": "hb_font_get_extents_for_direction",
                    "@version": "1.1.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1341",
                        "#text": "Fetches the extents for a font in a text segment of the\nspecified direction.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "904"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1343",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1344",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "extents",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1345",
                                    "#text": "The #hb_font_extents_t retrieved"
                                },
                                "type": {
                                    "@name": "font_extents_t",
                                    "@c:type": "hb_font_extents_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_face",
                    "@c:identifier": "hb_font_get_face",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2061",
                        "#text": "Fetches the face associated with the specified font object."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1023"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "2067",
                            "#text": "The #hb_face_t value"
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "2063",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_get_glyph",
                    "@c:identifier": "hb_font_get_glyph",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "936",
                        "#text": "Fetches the glyph ID for a Unicode code point in the specified\nfont, with an optional variation selector.\n\nIf @variation_selector is 0, calls hb_font_get_nominal_glyph();\notherwise calls hb_font_get_variation_glyph()."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "899"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "949",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "938",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "939",
                                    "#text": "The Unicode code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "variation_selector",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "940",
                                    "#text": "A variation-selector code point"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "941",
                                    "#text": "The glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_advance_for_direction",
                    "@c:identifier": "hb_font_get_glyph_advance_for_direction",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1362",
                        "#text": "Fetches the advance for a glyph ID from the specified font,\nin a text segment of the specified direction.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "908"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1364",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1365",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1366",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1367",
                                    "#text": "The horizontal advance retrieved"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1368",
                                    "#text": "The vertical advance retrieved"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_advances_for_direction",
                    "@c:identifier": "hb_font_get_glyph_advances_for_direction",
                    "@version": "1.8.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1387",
                        "#text": "Fetches the advances for a sequence of glyph IDs in the specified\nfont, in a text segment of the specified direction.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "913"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1389",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1390",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1391",
                                    "#text": "The number of glyph IDs in the sequence queried"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "first_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1392",
                                    "#text": "The first glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "const hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "glyph_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1393",
                                    "#text": "The stride between successive glyph IDs"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            },
                            {
                                "@name": "first_advance",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1394",
                                    "#text": "The first advance retrieved"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "advance_stride",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1395",
                                    "#text": "The stride between successive advances"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_contour_point",
                    "@c:identifier": "hb_font_get_glyph_contour_point",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1247",
                        "#text": "Fetches the (x,y) coordinates of a specified contour-point index\nin the specified glyph, within the specified font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "875"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1258",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1249",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1250",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "point_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1251",
                                    "#text": "The contour-point index to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1252",
                                    "#text": "The X value retrieved for the contour point"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1253",
                                    "#text": "The Y value retrieved for the contour point"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_contour_point_for_origin",
                    "@c:identifier": "hb_font_get_glyph_contour_point_for_origin",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1553",
                        "#text": "Fetches the (X,Y) coordinates of a specified contour-point index\nin the specified glyph ID in the specified font, with respect\nto the origin in a text segment in the specified direction.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "949"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1569",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1555",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1556",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "point_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1557",
                                    "#text": "The contour-point index to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1558",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1559",
                                    "#text": "The X value retrieved for the contour point"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1560",
                                    "#text": "The Y value retrieved for the contour point"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_extents",
                    "@c:identifier": "hb_font_get_glyph_extents",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1226",
                        "#text": "Fetches the #hb_glyph_extents_t data for a glyph ID\nin the specified font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "870"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1235",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1228",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1229",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "extents",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1230",
                                    "#text": "The #hb_glyph_extents_t retrieved"
                                },
                                "type": {
                                    "@name": "glyph_extents_t",
                                    "@c:type": "hb_glyph_extents_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_extents_for_origin",
                    "@c:identifier": "hb_font_get_glyph_extents_for_origin",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1526",
                        "#text": "Fetches the #hb_glyph_extents_t data for a glyph ID\nin the specified font, with respect to the origin in\na text segment in the specified direction.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "943"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1540",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1528",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1529",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1530",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "extents",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1531",
                                    "#text": "The #hb_glyph_extents_t retrieved"
                                },
                                "type": {
                                    "@name": "glyph_extents_t",
                                    "@c:type": "hb_glyph_extents_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_from_name",
                    "@c:identifier": "hb_font_get_glyph_from_name",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1294",
                        "#text": "Fetches the glyph ID that corresponds to a name string in the specified @font.\n\n<note>Note: @len == -1 means the name string is null-terminated.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "884"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1305",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1296",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1297",
                                    "#text": "The name string to query"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1298",
                                    "#text": "The length of the name queried"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1299",
                                    "#text": "The glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_h_advance",
                    "@c:identifier": "hb_font_get_glyph_h_advance",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1042",
                        "#text": "Fetches the advance for a glyph ID in the specified font,\nfor horizontal text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "835"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1050",
                            "#text": "The advance of @glyph within @font"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1044",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1045",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_h_advances",
                    "@c:identifier": "hb_font_get_glyph_h_advances",
                    "@version": "1.8.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1080",
                        "#text": "Fetches the advances for a sequence of glyph IDs in the specified\nfont, for horizontal text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "842"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1082",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1083",
                                    "#text": "The number of glyph IDs in the sequence queried"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "first_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1084",
                                    "#text": "The first glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "const hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "glyph_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1085",
                                    "#text": "The stride between successive glyph IDs"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            },
                            {
                                "@name": "first_advance",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1086",
                                    "#text": "The first advance retrieved"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "advance_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1087",
                                    "#text": "The stride between successive advances"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_h_kerning",
                    "@c:identifier": "hb_font_get_glyph_h_kerning",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1175",
                        "#text": "Fetches the kerning-adjustment value for a glyph-pair in\nthe specified font, for horizontal text segments.\n\n<note>It handles legacy kerning only (as returned by the corresponding\n#hb_font_funcs_t function).</note>"
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "866"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1187",
                            "#text": "The kerning adjustment value"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1177",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "left_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1178",
                                    "#text": "The glyph ID of the left glyph in the glyph pair"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "right_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1179",
                                    "#text": "The glyph ID of the right glyph in the glyph pair"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_h_origin",
                    "@c:identifier": "hb_font_get_glyph_h_origin",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1129",
                        "#text": "Fetches the (X,Y) coordinates of the origin for a glyph ID\nin the specified font, for horizontal text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "857"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1139",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1131",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1132",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1133",
                                    "#text": "The X coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1134",
                                    "#text": "The Y coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_kerning_for_direction",
                    "@c:identifier": "hb_font_get_glyph_kerning_for_direction",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1499",
                        "#text": "Fetches the kerning-adjustment value for a glyph-pair in the specified font.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "937"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1501",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "first_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1502",
                                    "#text": "The glyph ID of the first glyph in the glyph pair to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "second_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1503",
                                    "#text": "The glyph ID of the second glyph in the glyph pair to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1504",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1505",
                                    "#text": "The horizontal kerning-adjustment value retrieved"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1506",
                                    "#text": "The vertical kerning-adjustment value retrieved"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_name",
                    "@c:identifier": "hb_font_get_glyph_name",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1272",
                        "#text": "Fetches the glyph-name string for a glyph ID in the specified @font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "880"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1281",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1274",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1275",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "name",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1276",
                                    "#text": "Name string retrieved for the glyph ID"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1277",
                                    "#text": "Length of the glyph-name string retrieved"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_origin_for_direction",
                    "@c:identifier": "hb_font_get_glyph_origin_for_direction",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1417",
                        "#text": "Fetches the (X,Y) coordinates of the origin for a glyph in\nthe specified font.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "921"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1419",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1420",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1421",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1422",
                                    "#text": "The X coordinate retrieved for the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1423",
                                    "#text": "The Y coordinate retrieved for the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_shape",
                    "@c:identifier": "hb_font_get_glyph_shape",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1318",
                        "#text": "Fetches the glyph shape that corresponds to a glyph in the specified @font.\nThe shape is returned by way of calls to the callsbacks of the @dfuncs\nobjects, with @draw_data passed to them."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "889"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1320",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1321",
                                    "#text": "The glyph ID"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1322",
                                    "#text": "#hb_draw_funcs_t to draw to"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1323",
                                    "#text": "User data to pass to draw callbacks"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_v_advance",
                    "@c:identifier": "hb_font_get_glyph_v_advance",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1061",
                        "#text": "Fetches the advance for a glyph ID in the specified font,\nfor vertical text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "838"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1069",
                            "#text": "The advance of @glyph within @font"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1063",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1064",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_v_advances",
                    "@c:identifier": "hb_font_get_glyph_v_advances",
                    "@version": "1.8.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1104",
                        "#text": "Fetches the advances for a sequence of glyph IDs in the specified\nfont, for vertical text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "849"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1106",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1107",
                                    "#text": "The number of glyph IDs in the sequence queried"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "first_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1108",
                                    "#text": "The first glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "const hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "glyph_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1109",
                                    "#text": "The stride between successive glyph IDs"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            },
                            {
                                "@name": "first_advance",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1110",
                                    "#text": "The first advance retrieved"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "advance_stride",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1111",
                                    "#text": "The stride between successive advances"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_v_kerning",
                    "@c:identifier": "hb_font_get_glyph_v_kerning",
                    "@version": "0.9.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1200",
                        "#text": "Fetches the kerning-adjustment value for a glyph-pair in\nthe specified font, for vertical text segments.\n\n<note>It handles legacy kerning only (as returned by the corresponding\n#hb_font_funcs_t function).</note>"
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "244"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1212",
                            "#text": "The kerning adjustment value"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1202",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "top_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1203",
                                    "#text": "The glyph ID of the top glyph in the glyph pair"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "bottom_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1204",
                                    "#text": "The glyph ID of the bottom glyph in the glyph pair"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_v_origin",
                    "@c:identifier": "hb_font_get_glyph_v_origin",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1152",
                        "#text": "Fetches the (X,Y) coordinates of the origin for a glyph ID\nin the specified font, for vertical text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "861"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1162",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1154",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1155",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1156",
                                    "#text": "The X coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1157",
                                    "#text": "The Y coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_h_extents",
                    "@c:identifier": "hb_font_get_h_extents",
                    "@version": "1.1.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "898",
                        "#text": "Fetches the extents for a specified font, for horizontal\ntext segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "811"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "906",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "900",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "extents",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "901",
                                    "#text": "The font extents retrieved"
                                },
                                "type": {
                                    "@name": "font_extents_t",
                                    "@c:type": "hb_font_extents_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_nominal_glyph",
                    "@c:identifier": "hb_font_get_nominal_glyph",
                    "@version": "1.2.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "964",
                        "#text": "Fetches the nominal glyph ID for a Unicode code point in the\nspecified font.\n\nThis version of the function should not be used to fetch glyph IDs\nfor code points modified by variation selectors. For variation-selector\nsupport, user hb_font_get_variation_glyph() or use hb_font_get_glyph()."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "818"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "977",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "966",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "967",
                                    "#text": "The Unicode code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "968",
                                    "#text": "The glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_nominal_glyphs",
                    "@c:identifier": "hb_font_get_nominal_glyphs",
                    "@version": "2.6.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "989",
                        "#text": "Fetches the nominal glyph IDs for a sequence of Unicode code points. Glyph\nIDs must be returned in a #hb_codepoint_t output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "827"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1001",
                            "#text": "the number of code points processed"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "991",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "992",
                                    "#text": "number of code points to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "first_unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "993",
                                    "#text": "The first Unicode code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "const hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "unicode_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "994",
                                    "#text": "The stride between successive code points"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "first_glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "995",
                                    "#text": "The first glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "glyph_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "996",
                                    "#text": "The stride between successive glyph IDs"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_parent",
                    "@c:identifier": "hb_font_get_parent",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2012",
                        "#text": "Fetches the parent font of @font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1016"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "2018",
                            "#text": "The parent font object"
                        },
                        "type": {
                            "@name": "font_t",
                            "@c:type": "hb_font_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "2014",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_get_ppem",
                    "@c:identifier": "hb_font_get_ppem",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2226",
                        "#text": "Fetches the horizontal and vertical points-per-em (ppem) of a font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1058"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2228",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "x_ppem",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2229",
                                    "#text": "Horizontal ppem value"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "y_ppem",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2230",
                                    "#text": "Vertical ppem value"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_ptem",
                    "@c:identifier": "hb_font_get_ptem",
                    "@version": "1.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2272",
                        "#text": "Fetches the \"point size\" of a font. Used in CoreText to\nimplement optical sizing."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1070"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "2279",
                            "#text": "Point size.  A value of zero means \"not set.\""
                        },
                        "type": {
                            "@name": "gfloat",
                            "@c:type": "float"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "2274",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_get_scale",
                    "@c:identifier": "hb_font_get_scale",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2180",
                        "#text": "Fetches the horizontal and vertical scale of a font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1045"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2182",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "x_scale",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2183",
                                    "#text": "Horizontal scale value"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int*"
                                }
                            },
                            {
                                "@name": "y_scale",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2184",
                                    "#text": "Vertical scale value"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_serial",
                    "@c:identifier": "hb_font_get_serial",
                    "@version": "4.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1942",
                        "#text": "Returns the internal serial number of the font. The serial\nnumber is increased every time a setting on the font is\nchanged, using a setter function."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1006"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1950",
                            "#text": "serial number"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "1944",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_get_synthetic_slant",
                    "@c:identifier": "hb_font_get_synthetic_slant",
                    "@version": "3.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2325",
                        "#text": "Fetches the \"synthetic slant\" of a font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1076"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "2331",
                            "#text": "Synthetic slant.  By default is zero."
                        },
                        "type": {
                            "@name": "gfloat",
                            "@c:type": "float"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "2327",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_get_user_data",
                    "@c:identifier": "hb_font_get_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1887",
                        "#text": "Fetches the user-data object associated with the specified key,\nattached to the specified font object."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "996"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1895",
                            "#text": "Pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1889",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "const hb_font_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1890",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_v_extents",
                    "@c:identifier": "hb_font_get_v_extents",
                    "@version": "1.1.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "917",
                        "#text": "Fetches the extents for a specified font, for vertical\ntext segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "814"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "925",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "919",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "extents",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "920",
                                    "#text": "The font extents retrieved"
                                },
                                "type": {
                                    "@name": "font_extents_t",
                                    "@c:type": "hb_font_extents_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_var_coords_design",
                    "@c:identifier": "hb_font_get_var_coords_design",
                    "@version": "3.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2563",
                        "#text": "Fetches the list of variation coordinates (in design-space units) currently\nset on a font.\n\nNote that this returned array may only contain values for some\n(or none) of the axes; omitted axes effectively have their default\nvalues.\n\nReturn value is valid as long as variation coordinates of the font\nare not modified."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1089"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "2578",
                            "#text": "coordinates array"
                        },
                        "type": {
                            "@name": "gfloat",
                            "@c:type": "const float*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2565",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2566",
                                    "#text": "Number of coordinates retrieved"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_var_coords_normalized",
                    "@c:identifier": "hb_font_get_var_coords_normalized",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2535",
                        "#text": "Fetches the list of normalized variation coordinates currently\nset on a font.\n\nNote that this returned array may only contain values for some\n(or none) of the axes; omitted axes effectively have zero values.\n\nReturn value is valid as long as variation coordinates of the font\nare not modified."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1098"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "2549",
                            "#text": "coordinates array"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "const int*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2537",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2538",
                                    "#text": "Number of coordinates retrieved"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_variation_glyph",
                    "@c:identifier": "hb_font_get_variation_glyph",
                    "@version": "1.2.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1018",
                        "#text": "Fetches the glyph ID for a Unicode code point when followed by\nby the specified variation-selector code point, in the specified\nfont."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "822"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1029",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1020",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1021",
                                    "#text": "The Unicode code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "variation_selector",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1022",
                                    "#text": "The  variation-selector code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1023",
                                    "#text": "The glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_glyph_from_string",
                    "@c:identifier": "hb_font_glyph_from_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1608",
                        "#text": "Fetches the glyph ID from @font that matches the specified string.\nStrings of the format `gidDDD` or `uniUUUU` are parsed automatically.\n\n<note>Note: @len == -1 means the string is null-terminated.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "961"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1620",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1610",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "s",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1611",
                                    "#text": "string to query"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1612",
                                    "#text": "The length of the string @s"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1613",
                                    "#text": "The glyph ID corresponding to the string requested"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_glyph_to_string",
                    "@c:identifier": "hb_font_glyph_to_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1584",
                        "#text": "Fetches the name of the specified glyph ID in @font and returns\nit in string @s.\n\nIf the glyph ID has no name in @font, a string of the form `gidDDD` is\ngenerated, with `DDD` being the glyph ID."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "956"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1586",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1587",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "s",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1588",
                                    "#text": "The string containing the glyph name"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1589",
                                    "#text": "Length of string @s"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_is_immutable",
                    "@c:identifier": "hb_font_is_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1926",
                        "#text": "Tests whether a font object is immutable."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1003"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1932",
                            "#text": "`true` if @font is immutable, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "1928",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_make_immutable",
                    "@c:identifier": "hb_font_make_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1906",
                        "#text": "Makes @font immutable."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1000"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "1908",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_reference",
                    "@c:identifier": "hb_font_reference",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1814",
                        "#text": "Increases the reference count on the given font object."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "982"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1820",
                            "#text": "The @font object"
                        },
                        "type": {
                            "@name": "font_t",
                            "@c:type": "hb_font_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-font.cc",
                                "@line": "1816",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "font_set_face",
                    "@c:identifier": "hb_font_set_face",
                    "@version": "1.4.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2028",
                        "#text": "Sets @face as the font-face value of @font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1019"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2030",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2031",
                                    "#text": "The #hb_face_t to assign"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_funcs",
                    "@c:identifier": "hb_font_set_funcs",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2078",
                        "#text": "Replaces the font-functions structure attached to a font, updating\nthe font's user-data with @font-data and the @destroy callback."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1027"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2080",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "klass",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2081",
                                    "#text": "The font-functions structure."
                                },
                                "type": {
                                    "@name": "font_funcs_t",
                                    "@c:type": "hb_font_funcs_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2082",
                                    "#text": "Data to attach to @font"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2083",
                                    "#text": "The function to call when @font_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_funcs_data",
                    "@c:identifier": "hb_font_set_funcs_data",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2118",
                        "#text": "Replaces the user data attached to a font, updating the font's\n@destroy callback."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1034"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2120",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "@destroy": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2121",
                                    "#text": "Data to attach to @font"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2122",
                                    "#text": "The function to call when @font_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_parent",
                    "@c:identifier": "hb_font_set_parent",
                    "@version": "1.0.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1981",
                        "#text": "Sets the parent font of @font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1012"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1983",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "parent",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1984",
                                    "#text": "The parent font object to assign"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_ppem",
                    "@c:identifier": "hb_font_set_ppem",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2199",
                        "#text": "Sets the horizontal and vertical pixels-per-em (ppem) of a font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1053"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2201",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "x_ppem",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2202",
                                    "#text": "Horizontal ppem value to assign"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "y_ppem",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2203",
                                    "#text": "Vertical ppem value to assign"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_ptem",
                    "@c:identifier": "hb_font_set_ptem",
                    "@version": "1.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2245",
                        "#text": "Sets the \"point size\" of a font. Set to zero to unset.\nUsed in CoreText to implement optical sizing.\n\n<note>Note: There are 72 points in an inch.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1067"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2247",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "ptem",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2248",
                                    "#text": "font size in points."
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_scale",
                    "@c:identifier": "hb_font_set_scale",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2152",
                        "#text": "Sets the horizontal and vertical scale of a font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1040"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2154",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "x_scale",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2155",
                                    "#text": "Horizontal scale value to assign"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "y_scale",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2156",
                                    "#text": "Vertical scale value to assign"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_synthetic_slant",
                    "@c:identifier": "hb_font_set_synthetic_slant",
                    "@version": "3.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2289",
                        "#text": "Sets the \"synthetic slant\" of a font.  By default is zero.\nSynthetic slant is the graphical skew applied to the font\nat rendering time.\n\nHarfBuzz needs to know this value to adjust shaping results,\nmetrics, and style values to match the slanted rendering.\n\n<note>Note: The glyph shape fetched via the\nhb_font_get_glyph_shape() is slanted to reflect this value\nas well.</note>\n\n<note>Note: The slant value is a ratio.  For example, a\n20% slant would be represented as a 0.2 value.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1073"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2291",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "slant",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2292",
                                    "#text": "synthetic slant value."
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_user_data",
                    "@c:identifier": "hb_font_set_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1860",
                        "#text": "Attaches a user-data key/data pair to the specified font object."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "988"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.cc",
                            "@line": "1870",
                            "#text": "`true` if success, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1862",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1863",
                                    "#text": "The user-data key"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1864",
                                    "#text": "A pointer to the user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1865",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1866",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_var_coords_design",
                    "@c:identifier": "hb_font_set_var_coords_design",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2410",
                        "#text": "Applies a list of variation coordinates (in design-space units)\nto a font.\n\nNote that this overrides all existing variations set on @font.\nAxes not included in @coords will be effectively set to their\ndefault values."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1084"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2412",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2413",
                                    "#text": "Array of variation coordinates to apply"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const float*",
                                    "type": {
                                        "@name": "gfloat",
                                        "@c:type": "float"
                                    }
                                }
                            },
                            {
                                "@name": "coords_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2414",
                                    "#text": "Number of coordinates to apply"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_var_coords_normalized",
                    "@c:identifier": "hb_font_set_var_coords_normalized",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2481",
                        "#text": "Applies a list of variation coordinates (in normalized units)\nto a font.\n\nNote that this overrides all existing variations set on @font.\nAxes not included in @coords will be effectively set to their\ndefault values.\n\n<note>Note: Coordinates should be normalized to 2.14.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1093"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2483",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2484",
                                    "#text": "Array of variation coordinates to apply"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const int*",
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            },
                            {
                                "@name": "coords_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2485",
                                    "#text": "Number of coordinates to apply"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_var_named_instance",
                    "@c:identifier": "hb_font_set_var_named_instance",
                    "@version": "2.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2452",
                        "#text": "Sets design coords of a font from a named instance index."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1102"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2454",
                                    "#text": "a font."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "instance_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2455",
                                    "#text": "named instance index."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_set_variations",
                    "@c:identifier": "hb_font_set_variations",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "2346",
                        "#text": "Applies a list of font-variation settings to a font.\n\nNote that this overrides all existing variations set on @font.\nAxes not included in @variations will be effectively set to their\ndefault values."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "1079"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2348",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "variations",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2349",
                                    "#text": "Array of variation settings to apply"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_variation_t*",
                                    "type": {
                                        "@name": "variation_t",
                                        "@c:type": "hb_variation_t"
                                    }
                                }
                            },
                            {
                                "@name": "variations_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "2350",
                                    "#text": "Number of variations to apply"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_subtract_glyph_origin_for_direction",
                    "@c:identifier": "hb_font_subtract_glyph_origin_for_direction",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "1471",
                        "#text": "Subtracts the origin coordinates from an (X,Y) point coordinate,\nin the specified glyph ID in the specified font.\n\nCalls the appropriate direction-specific variant (horizontal\nor vertical) depending on the value of @direction."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "931"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1473",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1474",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1475",
                                    "#text": "The direction of the text segment"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1476",
                                    "#text": "Input = The original X coordinate\n    Output = The X coordinate minus the X-coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.cc",
                                    "@line": "1478",
                                    "#text": "Input = The original Y coordinate\n    Output = The Y coordinate minus the Y-coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ft_face_create",
                    "@c:identifier": "hb_ft_face_create",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "907",
                        "#text": "Creates an #hb_face_t face object from the specified FT_Face.\n\nThis variant of the function does not provide any life-cycle management.\n\nMost client programs should use hb_ft_face_create_referenced()\n(or, perhaps, hb_ft_face_create_cached()) instead.\n\nIf you know you have valid reasons not to use hb_ft_face_create_referenced(),\nthen it is the client program's responsibility to destroy @ft_face\nafter the #hb_face_t face object has been destroyed."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "923",
                            "#text": "the new #hb_face_t face object"
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ft_face",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@destroy": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ft.cc",
                                    "@line": "909",
                                    "#text": "FT_Face to work upon"
                                },
                                "type": {
                                    "@name": "freetype2.Face",
                                    "@c:type": "FT_Face"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ft.cc",
                                    "@line": "910",
                                    "#text": "A callback to call when the face object is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ft_face_create_cached",
                    "@c:identifier": "hb_ft_face_create_cached",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "983",
                        "#text": "Creates an #hb_face_t face object from the specified FT_Face.\n\nThis variant of the function caches the newly created #hb_face_t\nface object, using the @generic pointer of @ft_face. Subsequent function\ncalls that are passed the same @ft_face parameter will have the same\n#hb_face_t returned to them, and that #hb_face_t will be correctly\nreference counted.\n\nHowever, client programs are still responsible for destroying\n@ft_face after the last #hb_face_t face object has been destroyed."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "75"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "998",
                            "#text": "the new #hb_face_t face object"
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ft_face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "985",
                                "#text": "FT_Face to work upon"
                            },
                            "type": {
                                "@name": "freetype2.Face",
                                "@c:type": "FT_Face"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_face_create_referenced",
                    "@c:identifier": "hb_ft_face_create_referenced",
                    "@version": "0.9.38",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "952",
                        "#text": "Creates an #hb_face_t face object from the specified FT_Face.\n\nThis is the preferred variant of the hb_ft_face_create*\nfunction family, because it calls FT_Reference_Face() on @ft_face,\nensuring that @ft_face remains alive as long as the resulting\n#hb_face_t face object remains alive. Also calls FT_Done_Face()\nwhen the #hb_face_t face object is destroyed.\n\nUse this version unless you know you have good reasons not to."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "85"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "966",
                            "#text": "the new #hb_face_t face object"
                        },
                        "type": {
                            "@name": "face_t",
                            "@c:type": "hb_face_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ft_face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "954",
                                "#text": "FT_Face to work upon"
                            },
                            "type": {
                                "@name": "freetype2.Face",
                                "@c:type": "FT_Face"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_font_changed",
                    "@c:identifier": "hb_ft_font_changed",
                    "@version": "1.0.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "1062",
                        "#text": "Refreshes the state of @font when the underlying FT_Face has changed.\nThis function should be called after changing the size or\nvariation-axis settings on the FT_Face."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "128"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "1064",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_font_create",
                    "@c:identifier": "hb_ft_font_create",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "1017",
                        "#text": "Creates an #hb_font_t font object from the specified FT_Face.\n\n<note>Note: You must set the face size on @ft_face before calling\nhb_ft_font_create() on it. HarfBuzz assumes size is always set and will\naccess `size` member of FT_Face unconditionally.</note>\n\nThis variant of the function does not provide any life-cycle management.\n\nMost client programs should use hb_ft_font_create_referenced()\ninstead.\n\nIf you know you have valid reasons not to use hb_ft_font_create_referenced(),\nthen it is the client program's responsibility to destroy @ft_face\nafter the #hb_font_t font object has been destroyed.\n\nHarfBuzz will use the @destroy callback on the #hb_font_t font object\nif it is supplied when you use this function. However, even if @destroy\nis provided, it is the client program's responsibility to destroy @ft_face,\nand it is the client program's responsibility to ensure that @ft_face is\ndestroyed only after the #hb_font_t font object has been destroyed."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "102"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "1043",
                            "#text": "the new #hb_font_t font object"
                        },
                        "type": {
                            "@name": "font_t",
                            "@c:type": "hb_font_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ft_face",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@destroy": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ft.cc",
                                    "@line": "1019",
                                    "#text": "FT_Face to work upon"
                                },
                                "type": {
                                    "@name": "freetype2.Face",
                                    "@c:type": "FT_Face"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ft.cc",
                                    "@line": "1020",
                                    "#text": "A callback to call when the font object is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ft_font_create_referenced",
                    "@c:identifier": "hb_ft_font_create_referenced",
                    "@version": "0.9.38",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "1154",
                        "#text": "Creates an #hb_font_t font object from the specified FT_Face.\n\n<note>Note: You must set the face size on @ft_face before calling\nhb_ft_font_create_referenced() on it. HarfBuzz assumes size is always set\nand will access `size` member of FT_Face unconditionally.</note>\n\nThis is the preferred variant of the hb_ft_font_create*\nfunction family, because it calls FT_Reference_Face() on @ft_face,\nensuring that @ft_face remains alive as long as the resulting\n#hb_font_t font object remains alive.\n\nUse this version unless you know you have good reasons not to."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "108"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "1171",
                            "#text": "the new #hb_font_t font object"
                        },
                        "type": {
                            "@name": "font_t",
                            "@c:type": "hb_font_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ft_face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "1156",
                                "#text": "FT_Face to work upon"
                            },
                            "type": {
                                "@name": "freetype2.Face",
                                "@c:type": "FT_Face"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_font_get_face",
                    "@c:identifier": "hb_ft_font_get_face",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "267",
                        "#text": "Fetches the FT_Face associated with the specified #hb_font_t\nfont object."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "111"
                    },
                    "return-value": {
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "274",
                            "#text": "the FT_Face found or `NULL`"
                        },
                        "type": {
                            "@name": "freetype2.Face",
                            "@c:type": "FT_Face"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "269",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_font_get_load_flags",
                    "@c:identifier": "hb_ft_font_get_load_flags",
                    "@version": "1.0.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "243",
                        "#text": "Fetches the FT_Load_Glyph load flags of the specified #hb_font_t.\n\nFor more information, see\nhttps://www.freetype.org/freetype2/docs/reference/ft2-base_interface.html#ft_load_xxx"
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "123"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "252",
                            "#text": "FT_Load_Glyph flags found"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "245",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_font_lock_face",
                    "@c:identifier": "hb_ft_font_lock_face",
                    "@version": "2.6.5",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "289",
                        "#text": "Gets the FT_Face associated with @font, This face will be kept around until\nyou call hb_ft_font_unlock_face()."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "114"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "296",
                            "#text": "the FT_Face associated with @font or `NULL`"
                        },
                        "type": {
                            "@name": "freetype2.Face",
                            "@c:type": "FT_Face"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "291",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_font_set_funcs",
                    "@c:identifier": "hb_ft_font_set_funcs",
                    "@version": "1.0.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "1225",
                        "#text": "Configures the font-functions structure of the specified\n#hb_font_t font object to use FreeType font functions.\n\nIn particular, you can use this function to configure an\nexisting #hb_face_t face object for use with FreeType font\nfunctions even if that #hb_face_t face object was initially\ncreated with hb_face_create(), and therefore was not\ninitially configured to use FreeType font functions.\n\nAn #hb_face_t face object created with hb_ft_face_create()\nis preconfigured for FreeType font functions and does not\nrequire this function to be used.\n\n<note>Note: Internally, this function creates an FT_Face.\n</note>"
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "140"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "1227",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_font_set_load_flags",
                    "@c:identifier": "hb_ft_font_set_load_flags",
                    "@version": "1.0.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "217",
                        "#text": "Sets the FT_Load_Glyph load flags for the specified #hb_font_t.\n\nFor more information, see\nhttps://www.freetype.org/freetype2/docs/reference/ft2-base_interface.html#ft_load_xxx"
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "120"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ft.cc",
                                    "@line": "219",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "load_flags",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ft.cc",
                                    "@line": "220",
                                    "#text": "The FreeType load flags to set"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ft_font_unlock_face",
                    "@c:identifier": "hb_ft_font_unlock_face",
                    "@version": "2.6.5",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "312",
                        "#text": "Releases an FT_Face previously obtained with hb_ft_font_lock_face()."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "117"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "314",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ft_hb_font_changed",
                    "@c:identifier": "hb_ft_hb_font_changed",
                    "@version": "4.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "1129",
                        "#text": "Refreshes the state of the underlying FT_Face of @font when the hb_font_t\n@font has changed.\nThis function should be called after changing the size or\nvariation-axis settings on the @font.\nThis call is fast if nothing has changed on @font."
                    },
                    "source-position": {
                        "@filename": "hb-ft.h",
                        "@line": "134"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ft.cc",
                            "@line": "1139",
                            "#text": "true if changed, false otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ft.cc",
                                "@line": "1131",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "glib_blob_create",
                    "@c:identifier": "hb_glib_blob_create",
                    "@version": "0.9.38",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-glib.cc",
                        "@line": "276",
                        "#text": "Creates an #hb_blob_t blob from the specified\nGBytes data structure."
                    },
                    "source-position": {
                        "@filename": "hb-glib.h",
                        "@line": "51"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-glib.cc",
                            "@line": "283",
                            "#text": "the new #hb_blob_t blob object"
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "gbytes",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-glib.cc",
                                "@line": "278",
                                "#text": "the GBytes structure to work upon"
                            },
                            "type": {
                                "@name": "GLib.Bytes",
                                "@c:type": "GBytes*"
                            }
                        }
                    }
                },
                {
                    "@name": "glib_get_unicode_funcs",
                    "@c:identifier": "hb_glib_get_unicode_funcs",
                    "@version": "0.9.38",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-glib.cc",
                        "@line": "250",
                        "#text": "Fetches a Unicode-functions structure that is populated\nwith the appropriate GLib function for each method."
                    },
                    "source-position": {
                        "@filename": "hb-glib.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-glib.cc",
                            "@line": "256",
                            "#text": "a pointer to the #hb_unicode_funcs_t Unicode-functions structure"
                        },
                        "type": {
                            "@name": "unicode_funcs_t",
                            "@c:type": "hb_unicode_funcs_t*"
                        }
                    }
                },
                {
                    "@name": "glib_script_from_script",
                    "@c:identifier": "hb_glib_script_from_script",
                    "@version": "0.9.38",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-glib.cc",
                        "@line": "69",
                        "#text": "Fetches the GUnicodeScript identifier that corresponds to the\nspecified #hb_script_t script."
                    },
                    "source-position": {
                        "@filename": "hb-glib.h",
                        "@line": "43"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-glib.cc",
                            "@line": "76",
                            "#text": "the GUnicodeScript identifier found"
                        },
                        "type": {
                            "@name": "GLib.UnicodeScript",
                            "@c:type": "GUnicodeScript"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "script",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-glib.cc",
                                "@line": "71",
                                "#text": "The #hb_script_t to query"
                            },
                            "type": {
                                "@name": "script_t",
                                "@c:type": "hb_script_t"
                            }
                        }
                    }
                },
                {
                    "@name": "glib_script_to_script",
                    "@c:identifier": "hb_glib_script_to_script",
                    "@version": "0.9.38",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-glib.cc",
                        "@line": "52",
                        "#text": "Fetches the #hb_script_t script that corresponds to the\nspecified GUnicodeScript identifier."
                    },
                    "source-position": {
                        "@filename": "hb-glib.h",
                        "@line": "40"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-glib.cc",
                            "@line": "59",
                            "#text": "the #hb_script_t script found"
                        },
                        "type": {
                            "@name": "script_t",
                            "@c:type": "hb_script_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "script",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-glib.cc",
                                "@line": "54",
                                "#text": "The GUnicodeScript identifier to query"
                            },
                            "type": {
                                "@name": "GLib.UnicodeScript",
                                "@c:type": "GUnicodeScript"
                            }
                        }
                    }
                },
                {
                    "@name": "glyph_info_get_glyph_flags",
                    "@c:identifier": "hb_glyph_info_get_glyph_flags",
                    "@version": "1.5.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "1503",
                        "#text": "Returns glyph flags encoded within a #hb_glyph_info_t."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "169"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "1509",
                            "#text": "The #hb_glyph_flags_t encoded within @info"
                        },
                        "type": {
                            "@name": "glyph_flags_t",
                            "@c:type": "hb_glyph_flags_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "1505",
                                "#text": "a #hb_glyph_info_t"
                            },
                            "type": {
                                "@name": "glyph_info_t",
                                "@c:type": "const hb_glyph_info_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "graphite2_face_get_gr_face",
                    "@c:identifier": "hb_graphite2_face_get_gr_face",
                    "@version": "0.9.10",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-graphite2.cc",
                        "@line": "160",
                        "#text": "Fetches the Graphite2 gr_face corresponding to the specified\n#hb_face_t face object."
                    },
                    "source-position": {
                        "@filename": "hb-graphite2.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-graphite2.cc",
                            "@line": "167",
                            "#text": "the gr_face found"
                        },
                        "type": {
                            "@c:type": "gr_face*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-graphite2.cc",
                                "@line": "162",
                                "#text": "@hb_face_t to query"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "graphite2_font_get_gr_font",
                    "@c:identifier": "hb_graphite2_font_get_gr_font",
                    "@version": "0.9.10",
                    "@introspectable": "0",
                    "@deprecated": "1",
                    "@deprecated-version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-graphite2.cc",
                        "@line": "197",
                        "#text": "Always returns `NULL`. Use hb_graphite2_face_get_gr_face() instead."
                    },
                    "source-position": {
                        "@filename": "hb-graphite2.h",
                        "@line": "53"
                    },
                    "return-value": {
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-graphite2.cc",
                            "@line": "203",
                            "#text": "Graphite2 font associated with @font."
                        },
                        "type": {
                            "@c:type": "gr_font*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-graphite2.cc",
                                "@line": "199",
                                "#text": "An #hb_font_t"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "language_from_string",
                    "@c:identifier": "hb_language_from_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "356",
                        "#text": "Converts @str representing a BCP 47 language tag to the corresponding\n#hb_language_t."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "312"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "365",
                            "#text": "The #hb_language_t corresponding to the BCP 47 language tag."
                        },
                        "type": {
                            "@name": "language_t",
                            "@c:type": "hb_language_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "358",
                                    "#text": "a string representing\n      a BCP 47 language tag"
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "360",
                                    "#text": "length of the @str, or -1 if it is `NULL`-terminated."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "language_get_default",
                    "@c:identifier": "hb_language_get_default",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "412",
                        "#text": "Fetch the default language from current locale.\n\n<note>Note that the first time this function is called, it calls\n\"setlocale (LC_CTYPE, nullptr)\" to fetch current locale.  The underlying\nsetlocale function is, in many implementations, NOT threadsafe.  To avoid\nproblems, call this function once before multiple threads can call it.\nThis function is only used from hb_buffer_guess_segment_properties() by\nHarfBuzz itself.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "327"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "424",
                            "#text": "The default language of the locale as\nan #hb_language_t"
                        },
                        "type": {
                            "@name": "language_t",
                            "@c:type": "hb_language_t"
                        }
                    }
                },
                {
                    "@name": "language_matches",
                    "@c:identifier": "hb_language_matches",
                    "@version": "5.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "444",
                        "#text": "Check whether a second language tag is the same or a more\nspecific version of the provided language tag.  For example,\n\"fa_IR.utf8\" is a more specific tag for \"fa\" or for \"fa_IR\"."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "330"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "453",
                            "#text": "`true` if languages match, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "language",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "446",
                                    "#text": "The #hb_language_t to work on"
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t"
                                }
                            },
                            {
                                "@name": "specific",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "447",
                                    "#text": "Another #hb_language_t"
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "language_to_string",
                    "@c:identifier": "hb_language_to_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "392",
                        "#text": "Converts an #hb_language_t to a string."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "315"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "398",
                            "#text": "A `NULL`-terminated string representing the @language. Must not be freed by\nthe caller."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "language",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "394",
                                "#text": "The #hb_language_t to convert"
                            },
                            "type": {
                                "@name": "language_t",
                                "@c:type": "hb_language_t"
                            }
                        }
                    }
                },
                {
                    "@name": "map_allocation_successful",
                    "@c:identifier": "hb_map_allocation_successful",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "155",
                        "#text": "Tests whether memory allocation for a set was successful."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "83"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "161",
                            "#text": "`true` if allocation succeeded, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "map",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-map.cc",
                                "@line": "157",
                                "#text": "A map"
                            },
                            "type": {
                                "@name": "map_t",
                                "@c:type": "const hb_map_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "map_clear",
                    "@c:identifier": "hb_map_clear",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "262",
                        "#text": "Clears out the contents of @map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "89"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "map",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-map.cc",
                                "@line": "264",
                                "#text": "A map"
                            },
                            "type": {
                                "@name": "map_t",
                                "@c:type": "hb_map_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "map_copy",
                    "@c:identifier": "hb_map_copy",
                    "@version": "4.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "171",
                        "#text": "Allocate a copy of @map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "86"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "177",
                            "#text": "Newly-allocated map."
                        },
                        "type": {
                            "@name": "map_t",
                            "@c:type": "hb_map_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "map",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-map.cc",
                                "@line": "173",
                                "#text": "A map"
                            },
                            "type": {
                                "@name": "map_t",
                                "@c:type": "const hb_map_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "map_create",
                    "@c:identifier": "hb_map_create",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "42",
                        "#text": "Creates a new, initially empty map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "58"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "47",
                            "#text": "The new #hb_map_t"
                        },
                        "type": {
                            "@name": "map_t",
                            "@c:type": "hb_map_t*"
                        }
                    }
                },
                {
                    "@name": "map_del",
                    "@c:identifier": "hb_map_del",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "226",
                        "#text": "Removes @key and its stored value from @map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "114"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "map",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "228",
                                    "#text": "A map"
                                },
                                "type": {
                                    "@name": "map_t",
                                    "@c:type": "hb_map_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "229",
                                    "#text": "The key to delete"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "map_destroy",
                    "@c:identifier": "hb_map_destroy",
                    "@version": "1.7.7",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "93",
                        "#text": "Decreases the reference count on a map. When\nthe reference count reaches zero, the map is\ndestroyed, freeing all memory."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "67"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "map",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-map.cc",
                                "@line": "95",
                                "#text": "A map"
                            },
                            "type": {
                                "@name": "map_t",
                                "@c:type": "hb_map_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "map_get",
                    "@c:identifier": "hb_map_get",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "210",
                        "#text": "Fetches the value stored for @key in @map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "110"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "codepoint_t",
                            "@c:type": "hb_codepoint_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "map",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "212",
                                    "#text": "A map"
                                },
                                "type": {
                                    "@name": "map_t",
                                    "@c:type": "const hb_map_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "213",
                                    "#text": "The key to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "map_get_empty",
                    "@c:identifier": "hb_map_get_empty",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "62",
                        "#text": "Fetches the singleton empty #hb_map_t."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "61"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "67",
                            "#text": "The empty #hb_map_t"
                        },
                        "type": {
                            "@name": "map_t",
                            "@c:type": "hb_map_t*"
                        }
                    }
                },
                {
                    "@name": "map_get_population",
                    "@c:identifier": "hb_map_get_population",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "292",
                        "#text": "Returns the number of key-value pairs in the map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "95"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "298",
                            "#text": "The population of @map"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "map",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-map.cc",
                                "@line": "294",
                                "#text": "A map"
                            },
                            "type": {
                                "@name": "map_t",
                                "@c:type": "const hb_map_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "map_get_user_data",
                    "@c:identifier": "hb_map_get_user_data",
                    "@version": "1.7.7",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "135",
                        "#text": "Fetches the user data associated with the specified key,\nattached to the specified map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "77"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "143",
                            "#text": "A pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "map",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "137",
                                    "#text": "A map"
                                },
                                "type": {
                                    "@name": "map_t",
                                    "@c:type": "const hb_map_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "138",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "map_has",
                    "@c:identifier": "hb_map_has",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "243",
                        "#text": "Tests whether @key is an element of @map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "118"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "250",
                            "#text": "`true` if @key is found in @map, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "map",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "245",
                                    "#text": "A map"
                                },
                                "type": {
                                    "@name": "map_t",
                                    "@c:type": "const hb_map_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "246",
                                    "#text": "The key to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "map_hash",
                    "@c:identifier": "hb_map_hash",
                    "@version": "4.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "327",
                        "#text": "Creates a hash representing @map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "102"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "333",
                            "#text": "A hash of @map."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "map",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-map.cc",
                                "@line": "329",
                                "#text": "A map"
                            },
                            "type": {
                                "@name": "map_t",
                                "@c:type": "const hb_map_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "map_is_empty",
                    "@c:identifier": "hb_map_is_empty",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "276",
                        "#text": "Tests whether @map is empty (contains no elements)."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "92"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "282",
                            "#text": "`true` if @map is empty"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "map",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-map.cc",
                                "@line": "278",
                                "#text": "A map"
                            },
                            "type": {
                                "@name": "map_t",
                                "@c:type": "const hb_map_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "map_is_equal",
                    "@c:identifier": "hb_map_is_equal",
                    "@version": "4.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "308",
                        "#text": "Tests whether @map and @other are equal (contain the same\nelements)."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "98"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "316",
                            "#text": "`true` if the two maps are equal, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "map",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "310",
                                    "#text": "A map"
                                },
                                "type": {
                                    "@name": "map_t",
                                    "@c:type": "const hb_map_t*"
                                }
                            },
                            {
                                "@name": "other",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "311",
                                    "#text": "Another map"
                                },
                                "type": {
                                    "@name": "map_t",
                                    "@c:type": "const hb_map_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "map_reference",
                    "@c:identifier": "hb_map_reference",
                    "@version": "1.7.7",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "77",
                        "#text": "Increases the reference count on a map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "64"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "83",
                            "#text": "The map"
                        },
                        "type": {
                            "@name": "map_t",
                            "@c:type": "hb_map_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "map",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-map.cc",
                                "@line": "79",
                                "#text": "A map"
                            },
                            "type": {
                                "@name": "map_t",
                                "@c:type": "hb_map_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "map_set",
                    "@c:identifier": "hb_map_set",
                    "@version": "1.7.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "191",
                        "#text": "Stores @key:@value in the map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "105"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "map",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "193",
                                    "#text": "A map"
                                },
                                "type": {
                                    "@name": "map_t",
                                    "@c:type": "hb_map_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "194",
                                    "#text": "The key to store in the map"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "195",
                                    "#text": "The value to store for @key"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "map_set_user_data",
                    "@c:identifier": "hb_map_set_user_data",
                    "@version": "1.7.7",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "111",
                        "#text": "Attaches a user-data key/data pair to the specified map."
                    },
                    "source-position": {
                        "@filename": "hb-map.h",
                        "@line": "70"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-map.cc",
                            "@line": "121",
                            "#text": "`true` if success, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "map",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "113",
                                    "#text": "A map"
                                },
                                "type": {
                                    "@name": "map_t",
                                    "@c:type": "hb_map_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "114",
                                    "#text": "The user-data key to set"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "115",
                                    "#text": "A pointer to the user data to set"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "116",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-map.cc",
                                    "@line": "117",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_color_glyph_get_layers",
                    "@c:identifier": "hb_ot_color_glyph_get_layers",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "205",
                        "#text": "Fetches a list of all color layers for the specified glyph index in the specified\nface. The list returned will begin at the offset provided."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "117"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "217",
                            "#text": "Total number of layers available for the glyph index queried"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "207",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "208",
                                    "#text": "The glyph index to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "209",
                                    "#text": "offset of the first layer to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "layer_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "210",
                                    "#text": "Input = the maximum number of layers to return;\n        Output = the actual number of layers returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "layers",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "212",
                                    "#text": "The array of layers found"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_ot_color_layer_t*",
                                    "type": {
                                        "@name": "ot_color_layer_t",
                                        "@c:type": "hb_ot_color_layer_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_color_glyph_reference_png",
                    "@c:identifier": "hb_ot_color_glyph_reference_png",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "292",
                        "#text": "Fetches the PNG image for a glyph. This function takes a font object, not a face object,\nas input. To get an optimally sized PNG blob, the UPEM value must be set on the @font\nobject. If UPEM is unset, the blob returned will be the largest PNG available.\n\nIf the glyph has no PNG image, the singleton empty blob is returned."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "141"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "303",
                            "#text": "An #hb_blob_t containing the PNG image for the glyph, if available"
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "294",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "295",
                                    "#text": "a glyph index"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_color_glyph_reference_svg",
                    "@c:identifier": "hb_ot_color_glyph_reference_svg",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "252",
                        "#text": "Fetches the SVG document for a glyph. The blob may be either plain text or gzip-encoded.\n\nIf the glyph has no SVG document, the singleton empty blob is returned."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "131"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "261",
                            "#text": "An #hb_blob_t containing the SVG document of the glyph, if available"
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "254",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "255",
                                    "#text": "a svg glyph index"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_color_has_layers",
                    "@c:identifier": "hb_ot_color_has_layers",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "189",
                        "#text": "Tests whether a face includes any `COLR` color layers."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "96"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "195",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.cc",
                                "@line": "191",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_color_has_palettes",
                    "@c:identifier": "hb_ot_color_has_palettes",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "58",
                        "#text": "Tests whether a face includes a `CPAL` color-palette table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "64",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.cc",
                                "@line": "60",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_color_has_png",
                    "@c:identifier": "hb_ot_color_has_png",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "276",
                        "#text": "Tests whether a face has PNG glyph images (either in `CBDT` or `sbix` tables)."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "138"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "282",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.cc",
                                "@line": "278",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_color_has_svg",
                    "@c:identifier": "hb_ot_color_has_svg",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "236",
                        "#text": "Tests whether a face includes any `SVG` glyph images."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "128"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "242",
                            "#text": "`true` if data found, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.cc",
                                "@line": "238",
                                "#text": "#hb_face_t to work upon."
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_color_palette_color_get_name_id",
                    "@c:identifier": "hb_ot_color_palette_color_get_name_id",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "113",
                        "#text": "Fetches the `name` table Name ID that provides display names for\nthe specified color in a face's `CPAL` color palette.\n\nDisplay names can be generic (e.g., \"Background\") or specific\n(e.g., \"Eye color\")."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "57"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "124",
                            "#text": "the Name ID found for the color."
                        },
                        "type": {
                            "@name": "ot_name_id_t",
                            "@c:type": "hb_ot_name_id_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "115",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "color_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "116",
                                    "#text": "The index of the color"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_color_palette_get_colors",
                    "@c:identifier": "hb_ot_color_palette_get_colors",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "153",
                        "#text": "Fetches a list of the colors in a color palette.\n\nAfter calling this function, @colors will be filled with the palette\ncolors. If @colors is NULL, the function will just return the number\nof total colors without storing any actual colors; this can be used\nfor allocating a buffer of suitable size before calling\nhb_ot_color_palette_get_colors() a second time."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "84"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "170",
                            "#text": "the total number of colors in the palette"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "155",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "palette_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "156",
                                    "#text": "the index of the color palette to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "157",
                                    "#text": "offset of the first color to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "color_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "158",
                                    "#text": "Input = the maximum number of colors to return;\n              Output = the actual number of colors returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "colors",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "160",
                                    "#text": "The array of #hb_color_t records found"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_color_t*",
                                    "type": {
                                        "@name": "color_t",
                                        "@c:type": "hb_color_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_color_palette_get_count",
                    "@c:identifier": "hb_ot_color_palette_get_count",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "74",
                        "#text": "Fetches the number of color palettes in a face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "80",
                            "#text": "the number of palettes found"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.cc",
                                "@line": "76",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_color_palette_get_flags",
                    "@c:identifier": "hb_ot_color_palette_get_flags",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "135",
                        "#text": "Fetches the flags defined for a color palette."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "80"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "142",
                            "#text": "the #hb_ot_color_palette_flags_t of the requested color palette"
                        },
                        "type": {
                            "@name": "ot_color_palette_flags_t",
                            "@c:type": "hb_ot_color_palette_flags_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "137",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "palette_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "138",
                                    "#text": "The index of the color palette"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_color_palette_get_name_id",
                    "@c:identifier": "hb_ot_color_palette_get_name_id",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "90",
                        "#text": "Fetches the `name` table Name ID that provides display names for\na `CPAL` color palette.\n\nPalette display names can be generic (e.g., \"Default\") or provide\nspecific, themed names (e.g., \"Spring\", \"Summer\", \"Fall\", and \"Winter\")."
                    },
                    "source-position": {
                        "@filename": "hb-ot-color.h",
                        "@line": "53"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-color.cc",
                            "@line": "101",
                            "#text": "the Named ID found for the palette.\nIf the requested palette has no name the result is #HB_OT_NAME_ID_INVALID."
                        },
                        "type": {
                            "@name": "ot_name_id_t",
                            "@c:type": "hb_ot_name_id_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "92",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "palette_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-color.cc",
                                    "@line": "93",
                                    "#text": "The index of the color palette"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_font_set_funcs",
                    "@c:identifier": "hb_ot_font_set_funcs",
                    "@version": "0.9.28",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-font.cc",
                        "@line": "497",
                        "#text": "Sets the font functions to use when working with @font."
                    },
                    "source-position": {
                        "@filename": "hb-ot-font.h",
                        "@line": "40"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "font",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-font.cc",
                                "@line": "499",
                                "#text": "#hb_font_t to work upon"
                            },
                            "type": {
                                "@name": "font_t",
                                "@c:type": "hb_font_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_layout_collect_features",
                    "@c:identifier": "hb_ot_layout_collect_features",
                    "@version": "1.8.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1185",
                        "#text": "Fetches a list of all feature indexes in the specified face's GSUB table\nor GPOS table, underneath the specified scripts, languages, and features.\nIf no list of scripts is provided, all scripts will be queried. If no list\nof languages is provided, all languages will be queried. If no list of\nfeatures is provided, all features will be queried."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "311"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1187",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1188",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "scripts",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1189",
                                    "#text": "The array of scripts to collect features for,\n  terminated by %HB_TAG_NONE"
                                },
                                "array": {
                                    "@c:type": "const hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            },
                            {
                                "@name": "languages",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1191",
                                    "#text": "The array of languages to collect features for,\n  terminated by %HB_TAG_NONE"
                                },
                                "array": {
                                    "@c:type": "const hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            },
                            {
                                "@name": "features",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1193",
                                    "#text": "The array of features to collect,\n  terminated by %HB_TAG_NONE"
                                },
                                "array": {
                                    "@c:type": "const hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            },
                            {
                                "@name": "feature_indexes",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1195",
                                    "#text": "The array of feature indexes found for the query"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_collect_lookups",
                    "@c:identifier": "hb_ot_layout_collect_lookups",
                    "@version": "0.9.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1237",
                        "#text": "Fetches a list of all feature-lookup indexes in the specified face's GSUB\ntable or GPOS table, underneath the specified scripts, languages, and\nfeatures. If no list of scripts is provided, all scripts will be queried.\nIf no list of languages is provided, all languages will be queried. If no\nlist of features is provided, all features will be queried."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "319"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1239",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1240",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "scripts",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1241",
                                    "#text": "The array of scripts to collect lookups for,\n  terminated by %HB_TAG_NONE"
                                },
                                "array": {
                                    "@c:type": "const hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            },
                            {
                                "@name": "languages",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1243",
                                    "#text": "The array of languages to collect lookups for,\n  terminated by %HB_TAG_NONE"
                                },
                                "array": {
                                    "@c:type": "const hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            },
                            {
                                "@name": "features",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1245",
                                    "#text": "The array of features to collect lookups for,\n  terminated by %HB_TAG_NONE"
                                },
                                "array": {
                                    "@c:type": "const hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            },
                            {
                                "@name": "lookup_indexes",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1247",
                                    "#text": "The array of lookup indexes found for the query"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_feature_get_characters",
                    "@c:identifier": "hb_ot_layout_feature_get_characters",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1786",
                        "#text": "Fetches a list of the characters defined as having a variant under the specified\n\"Character Variant\" (\"cvXX\") feature tag."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "419"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1801",
                            "#text": "Number of total sample characters in the cvXX feature."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1788",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1789",
                                    "#text": "table tag to query, \"GSUB\" or \"GPOS\"."
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "feature_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1790",
                                    "#text": "index of feature to query."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1791",
                                    "#text": "offset of the first character to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "char_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1792",
                                    "#text": "Input = the maximum number of characters to return;\n             Output = the actual number of characters returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "characters",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1794",
                                    "#text": "A buffer pointer.\n             The Unicode codepoints of the characters for which this feature provides\n              glyph variants."
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_codepoint_t*",
                                    "type": {
                                        "@name": "codepoint_t",
                                        "@c:type": "hb_codepoint_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_feature_get_lookups",
                    "@c:identifier": "hb_ot_layout_feature_get_lookups",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "969",
                        "#text": "Fetches a list of all lookups enumerated for the specified feature, in\nthe specified face's GSUB table or GPOS table. The list returned will\nbegin at the offset provided."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "299"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "983",
                            "#text": "Total number of lookups."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "971",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "972",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "feature_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "973",
                                    "#text": "The index of the requested feature"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "974",
                                    "#text": "offset of the first lookup to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "lookup_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "975",
                                    "#text": "Input = the maximum number of lookups to return;\n               Output = the actual number of lookups returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "lookup_indexes",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "977",
                                    "#text": "The array of lookup indexes found for the query"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "unsigned int*",
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "unsigned int"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_feature_get_name_ids",
                    "@c:identifier": "hb_ot_layout_feature_get_name_ids",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1712",
                        "#text": "Fetches name indices from feature parameters for \"Stylistic Set\" ('ssXX') or\n\"Character Variant\" ('cvXX') features."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "408"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1732",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1714",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1715",
                                    "#text": "table tag to query, \"GSUB\" or \"GPOS\"."
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "feature_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1716",
                                    "#text": "index of feature to query."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "label_id",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1717",
                                    "#text": "The \u2018name\u2019 table name ID that specifies a string\n           for a user-interface label for this feature. (May be NULL.)"
                                },
                                "type": {
                                    "@name": "ot_name_id_t",
                                    "@c:type": "hb_ot_name_id_t*"
                                }
                            },
                            {
                                "@name": "tooltip_id",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1719",
                                    "#text": "The \u2018name\u2019 table name ID that specifies a string\n             that an application can use for tooltip text for this\n             feature. (May be NULL.)"
                                },
                                "type": {
                                    "@name": "ot_name_id_t",
                                    "@c:type": "hb_ot_name_id_t*"
                                }
                            },
                            {
                                "@name": "sample_id",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1722",
                                    "#text": "The \u2018name\u2019 table name ID that specifies sample text\n            that illustrates the effect of this feature. (May be NULL.)"
                                },
                                "type": {
                                    "@name": "ot_name_id_t",
                                    "@c:type": "hb_ot_name_id_t*"
                                }
                            },
                            {
                                "@name": "num_named_parameters",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1724",
                                    "#text": "Number of named parameters. (May be zero.)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "first_param_id",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1725",
                                    "#text": "The first \u2018name\u2019 table name ID used to specify\n                 strings for user-interface labels for the feature\n                 parameters. (Must be zero if numParameters is zero.)"
                                },
                                "type": {
                                    "@name": "ot_name_id_t",
                                    "@c:type": "hb_ot_name_id_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_feature_with_variations_get_lookups",
                    "@c:identifier": "hb_ot_layout_feature_with_variations_get_lookups",
                    "@version": "1.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1360",
                        "#text": "Fetches a list of all lookups enumerated for the specified feature, in\nthe specified face's GSUB table or GPOS table, enabled at the specified\nvariations index. The list returned will begin at the offset provided."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "346"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1375",
                            "#text": "Total number of lookups."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1362",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1363",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "feature_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1364",
                                    "#text": "The index of the feature to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "variations_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1365",
                                    "#text": "The index of the feature variation to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1366",
                                    "#text": "offset of the first lookup to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "lookup_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1367",
                                    "#text": "Input = the maximum number of lookups to return;\n               Output = the actual number of lookups returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "lookup_indexes",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1369",
                                    "#text": "The array of lookups found for the query"
                                },
                                "array": {
                                    "@length": "5",
                                    "@zero-terminated": "0",
                                    "@c:type": "unsigned int*",
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "unsigned int"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_get_attach_points",
                    "@c:identifier": "hb_ot_layout_get_attach_points",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "324",
                        "#text": "Fetches a list of all attachment points for the specified glyph in the GDEF\ntable of the face. The list returned will begin at the offset provided.\n\nUseful if the client program wishes to cache the list."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "168"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "338",
                            "#text": "Total number of attachment points for @glyph."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "326",
                                    "#text": "The #hb_face_t to work on"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "327",
                                    "#text": "The #hb_codepoint_t code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "328",
                                    "#text": "offset of the first attachment point to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "point_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "329",
                                    "#text": "Input = the maximum number of attachment points to return;\n              Output = the actual number of attachment points returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "point_array",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "331",
                                    "#text": "The array of attachment points found for the query"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "unsigned int*",
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "unsigned int"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_get_baseline",
                    "@c:identifier": "hb_ot_layout_get_baseline",
                    "@version": "2.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "2074",
                        "#text": "Fetches a baseline value from the face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "475"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "2085",
                            "#text": "`true` if found baseline value in the font."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2076",
                                    "#text": "a font"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "baseline_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2077",
                                    "#text": "a baseline tag"
                                },
                                "type": {
                                    "@name": "ot_layout_baseline_tag_t",
                                    "@c:type": "hb_ot_layout_baseline_tag_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2078",
                                    "#text": "text direction."
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "script_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2079",
                                    "#text": "script tag."
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "language_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2080",
                                    "#text": "language tag, currently unused."
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "coord",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2081",
                                    "#text": "baseline value if found."
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_get_baseline_with_fallback",
                    "@c:identifier": "hb_ot_layout_get_baseline_with_fallback",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "2100",
                        "#text": "Fetches a baseline value from the face, and synthesizes\nit if the font does not have it."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "483"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2102",
                                    "#text": "a font"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "baseline_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2103",
                                    "#text": "a baseline tag"
                                },
                                "type": {
                                    "@name": "ot_layout_baseline_tag_t",
                                    "@c:type": "hb_ot_layout_baseline_tag_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2104",
                                    "#text": "text direction."
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "script_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2105",
                                    "#text": "script tag."
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "language_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2106",
                                    "#text": "language tag, currently unused."
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "coord",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2107",
                                    "#text": "baseline value if found."
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_get_glyph_class",
                    "@c:identifier": "hb_ot_layout_get_glyph_class",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "284",
                        "#text": "Fetches the GDEF class of the requested glyph in the specified face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "157"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "291",
                            "#text": "The #hb_ot_layout_glyph_class_t glyph class of the given code\npoint in the GDEF table of the face."
                        },
                        "type": {
                            "@name": "ot_layout_glyph_class_t",
                            "@c:type": "hb_ot_layout_glyph_class_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "286",
                                    "#text": "The #hb_face_t to work on"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "287",
                                    "#text": "The #hb_codepoint_t code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_get_glyphs_in_class",
                    "@c:identifier": "hb_ot_layout_get_glyphs_in_class",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "303",
                        "#text": "Retrieves the set of all glyphs from the face that belong to the requested\nglyph class in the face's GDEF table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "161"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "305",
                                    "#text": "The #hb_face_t to work on"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "klass",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "306",
                                    "#text": "The #hb_ot_layout_glyph_class_t GDEF class to retrieve"
                                },
                                "type": {
                                    "@name": "ot_layout_glyph_class_t",
                                    "@c:type": "hb_ot_layout_glyph_class_t"
                                }
                            },
                            {
                                "@name": "glyphs",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "307",
                                    "#text": "The #hb_set_t set of all glyphs belonging to the requested\n         class."
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_get_horizontal_baseline_tag_for_script",
                    "@c:identifier": "hb_ot_layout_get_horizontal_baseline_tag_for_script",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "2003",
                        "#text": "Fetches the dominant horizontal baseline tag used by @script."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "472"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "2009",
                            "#text": "dominant baseline tag for the @script."
                        },
                        "type": {
                            "@name": "ot_layout_baseline_tag_t",
                            "@c:type": "hb_ot_layout_baseline_tag_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "script",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.cc",
                                "@line": "2005",
                                "#text": "a script tag."
                            },
                            "type": {
                                "@name": "script_t",
                                "@c:type": "hb_script_t"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_layout_get_ligature_carets",
                    "@c:identifier": "hb_ot_layout_get_ligature_carets",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "353",
                        "#text": "Fetches a list of the caret positions defined for a ligature glyph in the GDEF\ntable of the font. The list returned will begin at the offset provided.\n\nNote that a ligature that is formed from n characters will have n-1\ncaret positions. The first character is not represented in the array,\nsince its caret position is the glyph position.\n\nThe positions returned by this function are 'unshaped', and will have to\nbe fixed up for kerning that may be applied to the ligature glyph."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "176"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "373",
                            "#text": "Total number of ligature caret positions for @glyph."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "355",
                                    "#text": "The #hb_font_t to work on"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "356",
                                    "#text": "The #hb_direction_t text direction to use"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "357",
                                    "#text": "The #hb_codepoint_t code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "358",
                                    "#text": "offset of the first caret position to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "caret_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "359",
                                    "#text": "Input = the maximum number of caret positions to return;\n              Output = the actual number of caret positions returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "caret_array",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "361",
                                    "#text": "The array of caret positions found for the query"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_position_t*",
                                    "type": {
                                        "@name": "position_t",
                                        "@c:type": "hb_position_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_get_size_params",
                    "@c:identifier": "hb_ot_layout_get_size_params",
                    "@version": "0.9.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1650",
                        "#text": "Fetches optical-size feature data (i.e., the `size` feature from GPOS). Note that\nthe subfamily_id and the subfamily name string (accessible via the subfamily_name_id)\nas used here are defined as pertaining only to fonts within a font family that differ\nspecifically in their respective size ranges; other ways to differentiate fonts within\na subfamily are not covered by the `size` feature.\n\nFor more information on this distinction, see the [`size` feature documentation](\nhttps://docs.microsoft.com/en-us/typography/opentype/spec/features_pt#tag-size)."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "399"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1668",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1652",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "design_size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1653",
                                    "#text": "The design size of the face"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "subfamily_id",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1654",
                                    "#text": "The identifier of the face within the font subfamily"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "subfamily_name_id",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1655",
                                    "#text": "The \u2018name\u2019 table name ID of the face within the font subfamily"
                                },
                                "type": {
                                    "@name": "ot_name_id_t",
                                    "@c:type": "hb_ot_name_id_t*"
                                }
                            },
                            {
                                "@name": "range_start",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1656",
                                    "#text": "The minimum size of the recommended size range for the face"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "range_end",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1657",
                                    "#text": "The maximum size of the recommended size range for the face"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_has_glyph_classes",
                    "@c:identifier": "hb_ot_layout_has_glyph_classes",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "269",
                        "#text": "Tests whether a face has any glyph classes defined in its GDEF table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "135"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "275",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.cc",
                                "@line": "271",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_layout_has_positioning",
                    "@c:identifier": "hb_ot_layout_has_positioning",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1589",
                        "#text": "Tests whether the specified face includes any GPOS positioning."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "394"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1595",
                            "#text": "`true` if the face has GPOS data, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.cc",
                                "@line": "1591",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_layout_has_substitution",
                    "@c:identifier": "hb_ot_layout_has_substitution",
                    "@version": "0.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1403",
                        "#text": "Tests whether the specified face includes any GSUB substitutions."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "360"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1409",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-layout.cc",
                                "@line": "1405",
                                "#text": "#hb_face_t to work upon"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_layout_language_find_feature",
                    "@c:identifier": "hb_ot_layout_language_find_feature",
                    "@version": "0.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "925",
                        "#text": "Fetches the index of a given feature tag in the specified face's GSUB table\nor GPOS table, underneath the specified script and language."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "291"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "937",
                            "#text": "`true` if the feature is found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "927",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "928",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "929",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "930",
                                    "#text": "The index of the requested language tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "feature_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "931",
                                    "#text": "#hb_tag_t of the feature tag requested"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "feature_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "932",
                                    "#text": "The index of the requested feature"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_language_get_feature_indexes",
                    "@c:identifier": "hb_ot_layout_language_get_feature_indexes",
                    "@version": "0.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "844",
                        "#text": "Fetches a list of all features in the specified face's GSUB table\nor GPOS table, underneath the specified script and language. The list\nreturned will begin at the offset provided."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "273"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "859",
                            "#text": "Total number of features."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "846",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "847",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "848",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "849",
                                    "#text": "The index of the requested language tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "850",
                                    "#text": "offset of the first feature tag to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "feature_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "851",
                                    "#text": "Input = the maximum number of feature tags to return;\n                Output: the actual number of feature tags returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "feature_indexes",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "853",
                                    "#text": "The array of feature indexes found for the query"
                                },
                                "array": {
                                    "@length": "5",
                                    "@zero-terminated": "0",
                                    "@c:type": "unsigned int*",
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "unsigned int"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_language_get_feature_tags",
                    "@c:identifier": "hb_ot_layout_language_get_feature_tags",
                    "@version": "0.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "880",
                        "#text": "Fetches a list of all features in the specified face's GSUB table\nor GPOS table, underneath the specified script and language. The list\nreturned will begin at the offset provided."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "282"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "895",
                            "#text": "Total number of feature tags."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "882",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "883",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "884",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "885",
                                    "#text": "The index of the requested language tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "886",
                                    "#text": "offset of the first feature tag to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "feature_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "887",
                                    "#text": "Input = the maximum number of feature tags to return;\n                Output = the actual number of feature tags returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "feature_tags",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "889",
                                    "#text": "The array of #hb_tag_t feature tags found for the query"
                                },
                                "array": {
                                    "@length": "5",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_language_get_required_feature",
                    "@c:identifier": "hb_ot_layout_language_get_required_feature",
                    "@version": "0.9.30",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "809",
                        "#text": "Fetches the tag of a requested feature index in the given face's GSUB or GPOS table,\nunderneath the specified script and language."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "265"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "821",
                            "#text": "`true` if the feature is found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "811",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "812",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "813",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "814",
                                    "#text": "The index of the requested language tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "feature_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "815",
                                    "#text": "The index of the requested feature"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "feature_tag",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "816",
                                    "#text": "The #hb_tag_t of the requested feature"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_language_get_required_feature_index",
                    "@c:identifier": "hb_ot_layout_language_get_required_feature_index",
                    "@version": "0.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "777",
                        "#text": "Fetches the index of a requested feature in the given face's GSUB or GPOS table,\nunderneath the specified script and language."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "258"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "788",
                            "#text": "`true` if the feature is found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "779",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "780",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "781",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "782",
                                    "#text": "The index of the requested language tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "feature_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "783",
                                    "#text": "The index of the requested feature"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_lookup_collect_glyphs",
                    "@c:identifier": "hb_ot_layout_lookup_collect_glyphs",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1279",
                        "#text": "Fetches a list of all glyphs affected by the specified lookup in the\nspecified face's GSUB table or GPOS table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "327"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1281",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1282",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "lookup_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1283",
                                    "#text": "The index of the feature lookup to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "glyphs_before",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1284",
                                    "#text": "Array of glyphs preceding the substitution range"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "glyphs_input",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1285",
                                    "#text": "Array of input glyphs that would be substituted by the lookup"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "glyphs_after",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1286",
                                    "#text": "Array of glyphs following the substitution range"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "glyphs_output",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1287",
                                    "#text": "Array of glyphs that would be the substituted output of the lookup"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_lookup_get_glyph_alternates",
                    "@c:identifier": "hb_ot_layout_lookup_get_glyph_alternates",
                    "@version": "2.6.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "2344",
                        "#text": "Fetches alternates of a glyph from a given GSUB lookup index."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "363"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "2357",
                            "#text": "Total number of alternates found in the specific lookup index for the given glyph id."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2346",
                                    "#text": "a face."
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "lookup_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2347",
                                    "#text": "index of the feature lookup to query."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2348",
                                    "#text": "a glyph id."
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2349",
                                    "#text": "starting offset."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            },
                            {
                                "@name": "alternate_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2350",
                                    "#text": "Input = the maximum number of alternate glyphs to return;\n                  Output = the actual number of alternate glyphs returned (may be zero)."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned*"
                                }
                            },
                            {
                                "@name": "alternate_glyphs",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "2352",
                                    "#text": "A glyphs buffer.\n                   Alternate glyphs associated with the glyph id."
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_codepoint_t*",
                                    "type": {
                                        "@name": "codepoint_t",
                                        "@c:type": "hb_codepoint_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_lookup_substitute_closure",
                    "@c:identifier": "hb_ot_layout_lookup_substitute_closure",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1518",
                        "#text": "Compute the transitive closure of glyphs needed for a\nspecified lookup."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "378"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1520",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "lookup_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1521",
                                    "#text": "index of the feature lookup to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "glyphs",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1522",
                                    "#text": "Array of glyphs comprising the transitive closure of the lookup"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_lookup_would_substitute",
                    "@c:identifier": "hb_ot_layout_lookup_would_substitute",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1421",
                        "#text": "Tests whether a specified lookup in the specified face would\ntrigger a substitution on the given glyph sequence."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "371"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1433",
                            "#text": "`true` if a substitution would be triggered, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1423",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "lookup_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1424",
                                    "#text": "The index of the lookup to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "glyphs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1425",
                                    "#text": "The sequence of glyphs to query for substitution"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "const hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "glyphs_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1426",
                                    "#text": "The length of the glyph sequence"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "zero_context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1427",
                                    "#text": "#hb_bool_t indicating whether pre-/post-context are disallowed\nin substitutions"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_lookups_substitute_closure",
                    "@c:identifier": "hb_ot_layout_lookups_substitute_closure",
                    "@version": "1.8.1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1543",
                        "#text": "Compute the transitive closure of glyphs needed for all of the\nprovided lookups."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "384"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1545",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "lookups",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1546",
                                    "#text": "The set of lookups to query"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "glyphs",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1547",
                                    "#text": "Array of glyphs comprising the transitive closure of the lookups"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_script_find_language",
                    "@c:identifier": "hb_ot_layout_script_find_language",
                    "@version": "0.6.0",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "696",
                        "#text": "Fetches the index of a given language tag in the specified face's GSUB table\nor GPOS table, underneath the specified script tag."
                    },
                    "source-position": {
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "78"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "707",
                            "#text": "`true` if the language tag is found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "698",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "699",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "700",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "701",
                                    "#text": "The #hb_tag_t of the requested language"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "language_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "702",
                                    "#text": "The index of the requested language"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_script_get_language_tags",
                    "@c:identifier": "hb_ot_layout_script_get_language_tags",
                    "@version": "0.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "663",
                        "#text": "Fetches a list of language tags in the given face's GSUB or GPOS table, underneath\nthe specified script index. The list returned will begin at the offset provided."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "242"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "676",
                            "#text": "Total number of language tags."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "665",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "666",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "667",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "668",
                                    "#text": "offset of the first language tag to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "669",
                                    "#text": "Input = the maximum number of language tags to return;\n                 Output = the actual number of language tags returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "language_tags",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "671",
                                    "#text": "Array of language tags found in the table"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_script_select_language",
                    "@c:identifier": "hb_ot_layout_script_select_language",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "729",
                        "#text": "Fetches the index of the first language tag fom @language_tags that is present\nin the specified face's GSUB or GPOS table, underneath the specified script\nindex.\n\nIf none of the given language tags is found, `false` is returned and\n@language_index is set to the default language index."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "250"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "745",
                            "#text": "`true` if one of the given language tags is found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "731",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "732",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "733",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "734",
                                    "#text": "The number of languages in the specified script"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "language_tags",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "735",
                                    "#text": "The array of language tags"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "const hb_tag_t*"
                                }
                            },
                            {
                                "@name": "language_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "736",
                                    "#text": "The index of the requested language"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_table_choose_script",
                    "@c:identifier": "hb_ot_layout_table_choose_script",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "498",
                        "#text": "Deprecated since 2.0.0"
                    },
                    "source-position": {
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "71"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "500",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "501",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_tags",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "502",
                                    "#text": "Array of #hb_tag_t script tags"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "const hb_tag_t*"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "503",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "chosen_script",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "504",
                                    "#text": "#hb_tag_t of the script tag requested"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_table_find_feature_variations",
                    "@c:identifier": "hb_ot_layout_table_find_feature_variations",
                    "@version": "1.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1331",
                        "#text": "Fetches a list of feature variations in the specified face's GSUB table\nor GPOS table, at the specified variation coordinates."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "339"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1342",
                            "#text": "`true` if feature variations were found, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1333",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1334",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1335",
                                    "#text": "The variation coordinates to query"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "const int*"
                                }
                            },
                            {
                                "@name": "num_coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1336",
                                    "#text": "The number of variation coordinates"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "variations_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1337",
                                    "#text": "The array of feature variations found for the query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_table_find_script",
                    "@c:identifier": "hb_ot_layout_table_find_script",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "454",
                        "#text": "Fetches the index if a given script tag in the specified face's GSUB table\nor GPOS table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "221"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "464",
                            "#text": "`true` if the script is found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "456",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "457",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "458",
                                    "#text": "#hb_tag_t of the script tag requested"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "459",
                                    "#text": "The index of the requested script tag"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_table_get_feature_tags",
                    "@c:identifier": "hb_ot_layout_table_get_feature_tags",
                    "@version": "0.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "594",
                        "#text": "Fetches a list of all feature tags in the given face's GSUB or GPOS table.\nNote that there might be duplicate feature tags, belonging to different\nscript/language-system pairs of the table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "235"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "607",
                            "#text": "Total number of feature tags."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "596",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "597",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "598",
                                    "#text": "offset of the first feature tag to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "feature_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "599",
                                    "#text": "Input = the maximum number of feature tags to return;\n                Output = the actual number of feature tags returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "feature_tags",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "601",
                                    "#text": "Array of feature tags found in the table"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_table_get_lookup_count",
                    "@c:identifier": "hb_ot_layout_table_get_lookup_count",
                    "@version": "0.9.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "1005",
                        "#text": "Fetches the total number of lookups enumerated in the specified\nface's GSUB table or GPOS table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "307"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "1013",
                            "#text": "Total number of lookups."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1007",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "1008",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_table_get_script_tags",
                    "@c:identifier": "hb_ot_layout_table_get_script_tags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "425",
                        "#text": "Fetches a list of all scripts enumerated in the specified face's GSUB table\nor GPOS table. The list returned will begin at the offset provided."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "214"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "437",
                            "#text": "Total number of script tags."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "427",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "428",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "429",
                                    "#text": "offset of the first script tag to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "script_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "430",
                                    "#text": "Input = the maximum number of script tags to return;\n               Output = the actual number of script tags returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "script_tags",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "432",
                                    "#text": "The array of #hb_tag_t script tags found for the query"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_tag_t*",
                                    "type": {
                                        "@name": "tag_t",
                                        "@c:type": "hb_tag_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_layout_table_select_script",
                    "@c:identifier": "hb_ot_layout_table_select_script",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "521",
                        "#text": "Selects an OpenType script for @table_tag from the @script_tags array.\n\nIf the table does not have any of the requested scripts, then `DFLT`,\n`dflt`, and `latn` tags are tried in that order. If the table still does not\nhave any of these scripts, @script_index and @chosen_script are set to\n#HB_OT_LAYOUT_NO_SCRIPT_INDEX."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "227"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-layout.cc",
                            "@line": "537",
                            "#text": "`true` if one of the requested scripts is selected, `false` if a fallback\nscript is selected or if no scripts are selected."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "523",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "524",
                                    "#text": "#HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script_count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "525",
                                    "#text": "Number of script tags in the array"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "script_tags",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "526",
                                    "#text": "Array of #hb_tag_t script tags"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "const hb_tag_t*"
                                }
                            },
                            {
                                "@name": "script_index",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "527",
                                    "#text": "The index of the requested script"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "chosen_script",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-layout.cc",
                                    "@line": "528",
                                    "#text": "#hb_tag_t of the requested script"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_get_constant",
                    "@c:identifier": "hb_ot_math_get_constant",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "69",
                        "#text": "Fetches the specified math constant. For most constants, the value returned\nis an #hb_position_t.\n\nHowever, if the requested constant is #HB_OT_MATH_CONSTANT_SCRIPT_PERCENT_SCALE_DOWN,\n#HB_OT_MATH_CONSTANT_SCRIPT_SCRIPT_PERCENT_SCALE_DOWN or\n#HB_OT_MATH_CONSTANT_SCRIPT_PERCENT_SCALE_DOWN, then the return value is\nan integer between 0 and 100 representing that percentage."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "280"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "82",
                            "#text": "the requested constant or zero"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "71",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "constant",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "72",
                                    "#text": "#hb_ot_math_constant_t the constant to retrieve"
                                },
                                "type": {
                                    "@name": "ot_math_constant_t",
                                    "@c:type": "hb_ot_math_constant_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_get_glyph_assembly",
                    "@c:identifier": "hb_ot_math_get_glyph_assembly",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "294",
                        "#text": "Fetches the GlyphAssembly for the specified font, glyph index, and direction.\nReturned are a list of #hb_ot_math_glyph_part_t glyph parts that can be\nused to draw the glyph and an italics-correction value (if one is defined\nin the font).\n\n<note>The @direction parameter is only used to select between horizontal\nor vertical directions for the construction. Even though all #hb_direction_t\nvalues are accepted, only the result of #HB_DIRECTION_IS_HORIZONTAL is\nconsidered.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "322"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "315",
                            "#text": "the total number of parts in the glyph assembly"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "296",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "297",
                                    "#text": "The index of the glyph to stretch"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "298",
                                    "#text": "direction of the stretching (horizontal or vertical)"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "299",
                                    "#text": "offset of the first glyph part to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "parts_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "300",
                                    "#text": "Input = maximum number of glyph parts to return;\n              Output = actual number of parts returned"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "parts",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "302",
                                    "#text": "the glyph parts returned"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_ot_math_glyph_part_t*",
                                    "type": {
                                        "@name": "ot_math_glyph_part_t",
                                        "@c:type": "hb_ot_math_glyph_part_t"
                                    }
                                }
                            },
                            {
                                "@name": "italics_correction",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "303",
                                    "#text": "italics correction of the glyph assembly"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_get_glyph_italics_correction",
                    "@c:identifier": "hb_ot_math_get_glyph_italics_correction",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "93",
                        "#text": "Fetches an italics-correction value (if one exists) for the specified\nglyph index."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "284"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "101",
                            "#text": "the italics correction of the glyph or zero"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "95",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "96",
                                    "#text": "The glyph index from which to retrieve the value"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_get_glyph_kerning",
                    "@c:identifier": "hb_ot_math_get_glyph_kerning",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "156",
                        "#text": "Fetches the math kerning (cut-ins) value for the specified font, glyph index, and\n@kern.\n\nIf the MathKern table is found, the function examines it to find a height\nvalue that is greater or equal to @correction_height. If such a height\nvalue is found, corresponding kerning value from the table is returned. If\nno such height value is found, the last kerning value is returned."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "296"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "171",
                            "#text": "requested kerning value or zero"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "158",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "159",
                                    "#text": "The glyph index from which to retrieve the value"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "kern",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "160",
                                    "#text": "The #hb_ot_math_kern_t from which to retrieve the value"
                                },
                                "type": {
                                    "@name": "ot_math_kern_t",
                                    "@c:type": "hb_ot_math_kern_t"
                                }
                            },
                            {
                                "@name": "correction_height",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "161",
                                    "#text": "the correction height to use to determine the kerning."
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_get_glyph_kernings",
                    "@c:identifier": "hb_ot_math_get_glyph_kernings",
                    "@version": "3.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "187",
                        "#text": "Fetches the raw MathKern (cut-in) data for the specified font, glyph index,\nand @kern. The corresponding list of kern values and correction heights is\nreturned as a list of #hb_ot_math_kern_entry_t structs.\n\nSee also #hb_ot_math_get_glyph_kerning, which handles selecting the\nappropriate kern value for a given correction height.\n\n<note>For a glyph with @n defined kern values (where @n > 0), there are only\n@n\u22121 defined correction heights, as each correction height defines a boundary\npast which the next kern value should be selected. Therefore, only the\n#hb_ot_math_kern_entry_t.kern_value of the uppermost #hb_ot_math_kern_entry_t\nactually comes from the font; its corresponding\n#hb_ot_math_kern_entry_t.max_correction_height is always set to\n<code>INT32_MAX</code>.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "302"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "212",
                            "#text": "the total number of kern values available or zero"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "189",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "190",
                                    "#text": "The glyph index from which to retrieve the kernings"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "kern",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "191",
                                    "#text": "The #hb_ot_math_kern_t from which to retrieve the kernings"
                                },
                                "type": {
                                    "@name": "ot_math_kern_t",
                                    "@c:type": "hb_ot_math_kern_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "192",
                                    "#text": "offset of the first kern entry to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "entries_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "193",
                                    "#text": "Input = the maximum number of kern entries to return;\n                                    Output = the actual number of kern entries returned"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "kern_entries",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "195",
                                    "#text": "array of kern entries returned"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_ot_math_kern_entry_t*",
                                    "type": {
                                        "@name": "ot_math_kern_entry_t",
                                        "@c:type": "hb_ot_math_kern_entry_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_get_glyph_top_accent_attachment",
                    "@c:identifier": "hb_ot_math_get_glyph_top_accent_attachment",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "112",
                        "#text": "Fetches a top-accent-attachment value (if one exists) for the specified\nglyph index.\n\nFor any glyph that does not have a top-accent-attachment value - that is,\na glyph not covered by the `MathTopAccentAttachment` table (or, when\n@font has no `MathTopAccentAttachment` table or no `MATH` table, any\nglyph) - the function synthesizes a value, returning the position at\none-half the glyph's advance width."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "288"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "126",
                            "#text": "the top accent attachment of the glyph or 0.5 * the advance\n              width of @glyph"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "114",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "115",
                                    "#text": "The glyph index from which to retrieve the value"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_get_glyph_variants",
                    "@c:identifier": "hb_ot_math_get_glyph_variants",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "232",
                        "#text": "Fetches the MathGlyphConstruction for the specified font, glyph index, and\ndirection. The corresponding list of size variants is returned as a list of\n#hb_ot_math_glyph_variant_t structs.\n\n<note>The @direction parameter is only used to select between horizontal\nor vertical directions for the construction. Even though all #hb_direction_t\nvalues are accepted, only the result of #HB_DIRECTION_IS_HORIZONTAL is\nconsidered.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "310"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "251",
                            "#text": "the total number of size variants available or zero"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "234",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "235",
                                    "#text": "The index of the glyph to stretch"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "236",
                                    "#text": "The direction of the stretching (horizontal or vertical)"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "237",
                                    "#text": "offset of the first variant to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "variants_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "238",
                                    "#text": "Input = the maximum number of variants to return;\n                          Output = the actual number of variants returned"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "variants",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "240",
                                    "#text": "array of variants returned"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_ot_math_glyph_variant_t*",
                                    "type": {
                                        "@name": "ot_math_glyph_variant_t",
                                        "@c:type": "hb_ot_math_glyph_variant_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_get_min_connector_overlap",
                    "@c:identifier": "hb_ot_math_get_min_connector_overlap",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "269",
                        "#text": "Fetches the MathVariants table for the specified font and returns the\nminimum overlap of connecting glyphs that are required to draw a glyph\nassembly in the specified direction.\n\n<note>The @direction parameter is only used to select between horizontal\nor vertical directions for the construction. Even though all #hb_direction_t\nvalues are accepted, only the result of #HB_DIRECTION_IS_HORIZONTAL is\nconsidered.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "318"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "283",
                            "#text": "requested minimum connector overlap or zero"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "271",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "272",
                                    "#text": "direction of the stretching (horizontal or vertical)"
                                },
                                "type": {
                                    "@name": "direction_t",
                                    "@c:type": "hb_direction_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_math_has_data",
                    "@c:identifier": "hb_ot_math_has_data",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "53",
                        "#text": "Tests whether a face has a `MATH` table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "277"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "59",
                            "#text": "`true` if the table is found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-math.cc",
                                "@line": "55",
                                "#text": "#hb_face_t to test"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_math_is_glyph_extended_shape",
                    "@c:identifier": "hb_ot_math_is_glyph_extended_shape",
                    "@version": "1.3.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "138",
                        "#text": "Tests whether the given glyph index is an extended shape in the face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-math.h",
                        "@line": "292"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.cc",
                            "@line": "145",
                            "#text": "`true` if the glyph is an extended shape, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "140",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-math.cc",
                                    "@line": "141",
                                    "#text": "The glyph index to test"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_meta_get_entry_tags",
                    "@c:identifier": "hb_ot_meta_get_entry_tags",
                    "@version": "2.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-meta.cc",
                        "@line": "40",
                        "#text": "Fetches all available feature types."
                    },
                    "source-position": {
                        "@filename": "hb-ot-meta.h",
                        "@line": "62"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-meta.cc",
                            "@line": "49",
                            "#text": "Number of all available feature types."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-meta.cc",
                                    "@line": "42",
                                    "#text": "a face object"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-meta.cc",
                                    "@line": "43",
                                    "#text": "iteration's start offset"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "entries_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-meta.cc",
                                    "@line": "44",
                                    "#text": "buffer size as input, filled size as output"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "entries",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-meta.cc",
                                    "@line": "45",
                                    "#text": "entries tags buffer"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_ot_meta_tag_t*",
                                    "type": {
                                        "@name": "ot_meta_tag_t",
                                        "@c:type": "hb_ot_meta_tag_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_meta_reference_entry",
                    "@c:identifier": "hb_ot_meta_reference_entry",
                    "@version": "2.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-meta.cc",
                        "@line": "62",
                        "#text": "It fetches metadata entry of a given tag from a font."
                    },
                    "source-position": {
                        "@filename": "hb-ot-meta.h",
                        "@line": "68"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-meta.cc",
                            "@line": "69",
                            "#text": "A blob containing the blob."
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-meta.cc",
                                    "@line": "64",
                                    "#text": "a #hb_face_t object."
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "meta_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-meta.cc",
                                    "@line": "65",
                                    "#text": "tag of metadata you like to have."
                                },
                                "type": {
                                    "@name": "ot_meta_tag_t",
                                    "@c:type": "hb_ot_meta_tag_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_metrics_get_position",
                    "@c:identifier": "hb_ot_metrics_get_position",
                    "@version": "2.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-metrics.cc",
                        "@line": "125",
                        "#text": "Fetches metrics value corresponding to @metrics_tag from @font."
                    },
                    "source-position": {
                        "@filename": "hb-ot-metrics.h",
                        "@line": "109"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-metrics.cc",
                            "@line": "133",
                            "#text": "Whether found the requested metrics in the font."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "127",
                                    "#text": "an #hb_font_t object."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "metrics_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "128",
                                    "#text": "tag of metrics value you like to fetch."
                                },
                                "type": {
                                    "@name": "ot_metrics_tag_t",
                                    "@c:type": "hb_ot_metrics_tag_t"
                                }
                            },
                            {
                                "@name": "position",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "129",
                                    "#text": "result of metrics value from the font."
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_metrics_get_position_with_fallback",
                    "@c:identifier": "hb_ot_metrics_get_position_with_fallback",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-metrics.cc",
                        "@line": "241",
                        "#text": "Fetches metrics value corresponding to @metrics_tag from @font,\nand synthesizes a value if it the value is missing in the font."
                    },
                    "source-position": {
                        "@filename": "hb-ot-metrics.h",
                        "@line": "114"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "243",
                                    "#text": "an #hb_font_t object."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "metrics_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "244",
                                    "#text": "tag of metrics value you like to fetch."
                                },
                                "type": {
                                    "@name": "ot_metrics_tag_t",
                                    "@c:type": "hb_ot_metrics_tag_t"
                                }
                            },
                            {
                                "@name": "position",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "245",
                                    "#text": "result of metrics value from the font."
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_metrics_get_variation",
                    "@c:identifier": "hb_ot_metrics_get_variation",
                    "@version": "2.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-metrics.cc",
                        "@line": "381",
                        "#text": "Fetches metrics value corresponding to @metrics_tag from @font with the\ncurrent font variation settings applied."
                    },
                    "source-position": {
                        "@filename": "hb-ot-metrics.h",
                        "@line": "119"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-metrics.cc",
                            "@line": "389",
                            "#text": "The requested metric value."
                        },
                        "type": {
                            "@name": "gfloat",
                            "@c:type": "float"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "383",
                                    "#text": "an #hb_font_t object."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "metrics_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "384",
                                    "#text": "tag of metrics value you like to fetch."
                                },
                                "type": {
                                    "@name": "ot_metrics_tag_t",
                                    "@c:type": "hb_ot_metrics_tag_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_metrics_get_x_variation",
                    "@c:identifier": "hb_ot_metrics_get_x_variation",
                    "@version": "2.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-metrics.cc",
                        "@line": "399",
                        "#text": "Fetches horizontal metrics value corresponding to @metrics_tag from @font\nwith the current font variation settings applied."
                    },
                    "source-position": {
                        "@filename": "hb-ot-metrics.h",
                        "@line": "122"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-metrics.cc",
                            "@line": "407",
                            "#text": "The requested metric value."
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "401",
                                    "#text": "an #hb_font_t object."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "metrics_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "402",
                                    "#text": "tag of metrics value you like to fetch."
                                },
                                "type": {
                                    "@name": "ot_metrics_tag_t",
                                    "@c:type": "hb_ot_metrics_tag_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_metrics_get_y_variation",
                    "@c:identifier": "hb_ot_metrics_get_y_variation",
                    "@version": "2.6.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-metrics.cc",
                        "@line": "417",
                        "#text": "Fetches vertical metrics value corresponding to @metrics_tag from @font with\nthe current font variation settings applied."
                    },
                    "source-position": {
                        "@filename": "hb-ot-metrics.h",
                        "@line": "125"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-metrics.cc",
                            "@line": "425",
                            "#text": "The requested metric value."
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "419",
                                    "#text": "an #hb_font_t object."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "metrics_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-metrics.cc",
                                    "@line": "420",
                                    "#text": "tag of metrics value you like to fetch."
                                },
                                "type": {
                                    "@name": "ot_metrics_tag_t",
                                    "@c:type": "hb_ot_metrics_tag_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_name_get_utf16",
                    "@c:identifier": "hb_ot_name_get_utf16",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-name.cc",
                        "@line": "176",
                        "#text": "Fetches a font name from the OpenType 'name' table.\nIf @language is #HB_LANGUAGE_INVALID, English (\"en\") is assumed.\nReturns string in UTF-16 encoding. A NUL terminator is always written\nfor convenience, and isn't included in the output @text_size."
                    },
                    "source-position": {
                        "@filename": "hb-ot-name.h",
                        "@line": "142"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-name.cc",
                            "@line": "190",
                            "#text": "full length of the requested string, or 0 if not found."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "178",
                                    "#text": "font face."
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "name_id",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "179",
                                    "#text": "OpenType name identifier to fetch."
                                },
                                "type": {
                                    "@name": "ot_name_id_t",
                                    "@c:type": "hb_ot_name_id_t"
                                }
                            },
                            {
                                "@name": "language",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "180",
                                    "#text": "language to fetch the name for."
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t"
                                }
                            },
                            {
                                "@name": "text_size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "181",
                                    "#text": "input size of @text buffer, and output size of\n                                  text written to buffer."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "text",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "183",
                                    "#text": "buffer to write fetched name into."
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "uint16_t*",
                                    "type": {
                                        "@name": "guint16",
                                        "@c:type": "uint16_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_name_get_utf32",
                    "@c:identifier": "hb_ot_name_get_utf32",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-name.cc",
                        "@line": "203",
                        "#text": "Fetches a font name from the OpenType 'name' table.\nIf @language is #HB_LANGUAGE_INVALID, English (\"en\") is assumed.\nReturns string in UTF-32 encoding. A NUL terminator is always written\nfor convenience, and isn't included in the output @text_size."
                    },
                    "source-position": {
                        "@filename": "hb-ot-name.h",
                        "@line": "149"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-name.cc",
                            "@line": "217",
                            "#text": "full length of the requested string, or 0 if not found."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "205",
                                    "#text": "font face."
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "name_id",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "206",
                                    "#text": "OpenType name identifier to fetch."
                                },
                                "type": {
                                    "@name": "ot_name_id_t",
                                    "@c:type": "hb_ot_name_id_t"
                                }
                            },
                            {
                                "@name": "language",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "207",
                                    "#text": "language to fetch the name for."
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t"
                                }
                            },
                            {
                                "@name": "text_size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "208",
                                    "#text": "input size of @text buffer, and output size of\n                                  text written to buffer."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "text",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "210",
                                    "#text": "buffer to write fetched name into."
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "uint32_t*",
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "uint32_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_name_get_utf8",
                    "@c:identifier": "hb_ot_name_get_utf8",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-name.cc",
                        "@line": "148",
                        "#text": "Fetches a font name from the OpenType 'name' table.\nIf @language is #HB_LANGUAGE_INVALID, English (\"en\") is assumed.\nReturns string in UTF-8 encoding. A NUL terminator is always written\nfor convenience, and isn't included in the output @text_size."
                    },
                    "source-position": {
                        "@filename": "hb-ot-name.h",
                        "@line": "135"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-name.cc",
                            "@line": "162",
                            "#text": "full length of the requested string, or 0 if not found."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "150",
                                    "#text": "font face."
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "name_id",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "151",
                                    "#text": "OpenType name identifier to fetch."
                                },
                                "type": {
                                    "@name": "ot_name_id_t",
                                    "@c:type": "hb_ot_name_id_t"
                                }
                            },
                            {
                                "@name": "language",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "152",
                                    "#text": "language to fetch the name for."
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t"
                                }
                            },
                            {
                                "@name": "text_size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "153",
                                    "#text": "input size of @text buffer, and output size of\n                                  text written to buffer."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "text",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "155",
                                    "#text": "buffer to write fetched name into."
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_name_list_names",
                    "@c:identifier": "hb_ot_name_list_names",
                    "@version": "2.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-name.cc",
                        "@line": "46",
                        "#text": "Enumerates all available name IDs and language combinations. Returned\narray is owned by the @face and should not be modified.  It can be\nused as long as @face is alive."
                    },
                    "source-position": {
                        "@filename": "hb-ot-name.h",
                        "@line": "130"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-name.cc",
                            "@line": "55",
                            "#text": "Array of available name entries."
                        },
                        "array": {
                            "@length": "1",
                            "@zero-terminated": "0",
                            "@c:type": "const hb_ot_name_entry_t*",
                            "type": {
                                "@name": "ot_name_entry_t",
                                "@c:type": "hb_ot_name_entry_t"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "48",
                                    "#text": "font face."
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "num_entries",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-name.cc",
                                    "@line": "49",
                                    "#text": "number of returned entries."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_shape_glyphs_closure",
                    "@c:identifier": "hb_ot_shape_glyphs_closure",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-shape.cc",
                        "@line": "1273",
                        "#text": "Computes the transitive closure of glyphs needed for a specified\ninput buffer under the given font and feature list. The closure is\ncomputed as a set, not as a list."
                    },
                    "source-position": {
                        "@filename": "hb-ot-shape.h",
                        "@line": "40"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-shape.cc",
                                    "@line": "1275",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-shape.cc",
                                    "@line": "1276",
                                    "#text": "The input buffer to compute from"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-shape.cc",
                                    "@line": "1277",
                                    "#text": "The features enabled on the buffer"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_feature_t*",
                                    "type": {
                                        "@name": "feature_t",
                                        "@c:type": "hb_feature_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-shape.cc",
                                    "@line": "1278",
                                    "#text": "The number of features enabled on the buffer"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "glyphs",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-shape.cc",
                                    "@line": "1279",
                                    "#text": "The #hb_set_t set of glyphs comprising the transitive closure of the query"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_shape_plan_collect_lookups",
                    "@c:identifier": "hb_ot_shape_plan_collect_lookups",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-shape.cc",
                        "@line": "1233",
                        "#text": "Computes the complete set of GSUB or GPOS lookups that are applicable\nunder a given @shape_plan."
                    },
                    "source-position": {
                        "@filename": "hb-ot-shape.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "shape_plan",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-shape.cc",
                                    "@line": "1235",
                                    "#text": "#hb_shape_plan_t to query"
                                },
                                "type": {
                                    "@name": "shape_plan_t",
                                    "@c:type": "hb_shape_plan_t*"
                                }
                            },
                            {
                                "@name": "table_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-shape.cc",
                                    "@line": "1236",
                                    "#text": "GSUB or GPOS"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "lookup_indexes",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-shape.cc",
                                    "@line": "1237",
                                    "#text": "The #hb_set_t set of lookups returned"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_tag_from_language",
                    "@c:identifier": "hb_ot_tag_from_language",
                    "source-position": {
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "90"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "tag_t",
                            "@c:type": "hb_tag_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "language",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "language_t",
                                "@c:type": "hb_language_t"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_tag_to_language",
                    "@c:identifier": "hb_ot_tag_to_language",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-tag.cc",
                        "@line": "467",
                        "#text": "Converts a language tag to an #hb_language_t."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "121"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-tag.cc",
                            "@line": "473",
                            "#text": "The #hb_language_t corresponding to @tag."
                        },
                        "type": {
                            "@name": "language_t",
                            "@c:type": "hb_language_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "tag",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-tag.cc",
                                "@line": "469",
                                "#text": "an language tag"
                            },
                            "type": {
                                "@name": "tag_t",
                                "@c:type": "hb_tag_t"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_tag_to_script",
                    "@c:identifier": "hb_ot_tag_to_script",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-tag.cc",
                        "@line": "170",
                        "#text": "Converts a script tag to an #hb_script_t."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "118"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-tag.cc",
                            "@line": "176",
                            "#text": "The #hb_script_t corresponding to @tag."
                        },
                        "type": {
                            "@name": "script_t",
                            "@c:type": "hb_script_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "tag",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-tag.cc",
                                "@line": "172",
                                "#text": "a script tag"
                            },
                            "type": {
                                "@name": "tag_t",
                                "@c:type": "hb_tag_t"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_tags_from_script",
                    "@c:identifier": "hb_ot_tags_from_script",
                    "source-position": {
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "85"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "script",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "script_t",
                                    "@c:type": "hb_script_t"
                                }
                            },
                            {
                                "@name": "script_tag_1",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t*"
                                }
                            },
                            {
                                "@name": "script_tag_2",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_tags_from_script_and_language",
                    "@c:identifier": "hb_ot_tags_from_script_and_language",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-tag.cc",
                        "@line": "392",
                        "#text": "Converts an #hb_script_t and an #hb_language_t to script and language tags."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "110"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "script",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "394",
                                    "#text": "an #hb_script_t to convert."
                                },
                                "type": {
                                    "@name": "script_t",
                                    "@c:type": "hb_script_t"
                                }
                            },
                            {
                                "@name": "language",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "395",
                                    "#text": "an #hb_language_t to convert."
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t"
                                }
                            },
                            {
                                "@name": "script_count",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "396",
                                    "#text": "maximum number of script tags to retrieve (IN)\nand actual number of script tags retrieved (OUT)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "script_tags",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "398",
                                    "#text": "array of size at least @script_count to store the\nscript tag results"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t*"
                                }
                            },
                            {
                                "@name": "language_count",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "400",
                                    "#text": "maximum number of language tags to retrieve\n(IN) and actual number of language tags retrieved (OUT)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "language_tags",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "402",
                                    "#text": "array of size at least @language_count to store\nthe language tag results"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_tags_to_script_and_language",
                    "@c:identifier": "hb_ot_tags_to_script_and_language",
                    "@version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-tag.cc",
                        "@line": "535",
                        "#text": "Converts a script tag and a language tag to an #hb_script_t and an\n#hb_language_t."
                    },
                    "source-position": {
                        "@filename": "hb-ot-layout.h",
                        "@line": "124"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "script_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "537",
                                    "#text": "a script tag"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "language_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "538",
                                    "#text": "a language tag"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "script",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "539",
                                    "#text": "the #hb_script_t corresponding to @script_tag."
                                },
                                "type": {
                                    "@name": "script_t",
                                    "@c:type": "hb_script_t*"
                                }
                            },
                            {
                                "@name": "language",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-tag.cc",
                                    "@line": "540",
                                    "#text": "the #hb_language_t corresponding to @script_tag and\n@language_tag."
                                },
                                "type": {
                                    "@name": "language_t",
                                    "@c:type": "hb_language_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_find_axis",
                    "@c:identifier": "hb_ot_var_find_axis",
                    "@version": "1.4.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "109",
                        "#text": "Fetches the variation-axis information corresponding to the specified axis tag\nin the specified face."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "- use hb_ot_var_find_axis_info() instead"
                    },
                    "source-position": {
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "131"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "111",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "axis_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "112",
                                    "#text": "The #hb_tag_t of the variation axis to query"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "axis_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "113",
                                    "#text": "The index of the variation axis"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "axis_info",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "114",
                                    "#text": "The #hb_ot_var_axis_info_t of the axis tag queried"
                                },
                                "type": {
                                    "@name": "ot_var_axis_t",
                                    "@c:type": "hb_ot_var_axis_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_find_axis_info",
                    "@c:identifier": "hb_ot_var_find_axis_info",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "156",
                        "#text": "Fetches the variation-axis information corresponding to the specified axis tag\nin the specified face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "144"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.cc",
                            "@line": "165",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "158",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "axis_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "159",
                                    "#text": "The #hb_tag_t of the variation axis to query"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "axis_info",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "160",
                                    "#text": "The #hb_ot_var_axis_info_t of the axis tag queried"
                                },
                                "type": {
                                    "@name": "ot_var_axis_info_t",
                                    "@c:type": "hb_ot_var_axis_info_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_get_axes",
                    "@c:identifier": "hb_ot_var_get_axes",
                    "@version": "1.4.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "86",
                        "#text": "Fetches a list of all variation axes in the specified face. The list returned will begin\nat the offset provided."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "use hb_ot_var_get_axis_infos() instead"
                    },
                    "source-position": {
                        "@filename": "hb-ot-deprecated.h",
                        "@line": "125"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "88",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "89",
                                    "#text": "offset of the first lookup to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "axes_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "90",
                                    "#text": "Input = the maximum number of variation axes to return;\n               Output = the actual number of variation axes returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "axes_array",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "92",
                                    "#text": "The array of variation axes found"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_ot_var_axis_t*",
                                    "type": {
                                        "@name": "ot_var_axis_t",
                                        "@c:type": "hb_ot_var_axis_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_get_axis_count",
                    "@c:identifier": "hb_ot_var_get_axis_count",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "69",
                        "#text": "Fetches the number of OpenType variation axes included in the face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "89"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.cc",
                            "@line": "75",
                            "#text": "the number of variation axes defined"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.cc",
                                "@line": "71",
                                "#text": "The #hb_face_t to work on"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_var_get_axis_infos",
                    "@c:identifier": "hb_ot_var_get_axis_infos",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "132",
                        "#text": "Fetches a list of all variation axes in the specified face. The list returned will begin\nat the offset provided."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "138"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.cc",
                            "@line": "143",
                            "#text": "the number of variation axes in the face"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "134",
                                    "#text": "#hb_face_t to work upon"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "start_offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "135",
                                    "#text": "offset of the first lookup to retrieve"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "axes_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "136",
                                    "#text": "Input = the maximum number of variation axes to return;\n               Output = the actual number of variation axes returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "axes_array",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "138",
                                    "#text": "The array of variation axes found"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_ot_var_axis_info_t*",
                                    "type": {
                                        "@name": "ot_var_axis_info_t",
                                        "@c:type": "hb_ot_var_axis_info_t"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_get_named_instance_count",
                    "@c:identifier": "hb_ot_var_get_named_instance_count",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "182",
                        "#text": "Fetches the number of named instances included in the face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "154"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.cc",
                            "@line": "188",
                            "#text": "the number of named instances defined"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.cc",
                                "@line": "184",
                                "#text": "The #hb_face_t to work on"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_var_has_data",
                    "@c:identifier": "hb_ot_var_has_data",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "53",
                        "#text": "Tests whether a face includes any OpenType variation data in the `fvar` table."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "80"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.cc",
                            "@line": "59",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "face",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-var.cc",
                                "@line": "55",
                                "#text": "The #hb_face_t to work on"
                            },
                            "type": {
                                "@name": "face_t",
                                "@c:type": "hb_face_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "ot_var_named_instance_get_design_coords",
                    "@c:identifier": "hb_ot_var_named_instance_get_design_coords",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "236",
                        "#text": "Fetches the design-space coordinates corresponding to the given\nnamed instance in the face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "165"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.cc",
                            "@line": "247",
                            "#text": "the number of variation axes in the face"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "238",
                                    "#text": "The #hb_face_t to work on"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "instance_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "239",
                                    "#text": "The index of the named instance to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "coords_length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "240",
                                    "#text": "Input = the maximum number of coordinates to return;\n                Output = the actual number of coordinates returned (may be zero)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "coords",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "242",
                                    "#text": "The array of coordinates found for the query"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "float*",
                                    "type": {
                                        "@name": "gfloat",
                                        "@c:type": "float"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_named_instance_get_postscript_name_id",
                    "@c:identifier": "hb_ot_var_named_instance_get_postscript_name_id",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "217",
                        "#text": "Fetches the `name` table Name ID that provides display names for\nthe \"PostScript name\" defined for the given named instance in the face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "161"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.cc",
                            "@line": "225",
                            "#text": "the Name ID found for the PostScript name"
                        },
                        "type": {
                            "@name": "ot_name_id_t",
                            "@c:type": "hb_ot_name_id_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "219",
                                    "#text": "The #hb_face_t to work on"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "instance_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "220",
                                    "#text": "The index of the named instance to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_named_instance_get_subfamily_name_id",
                    "@c:identifier": "hb_ot_var_named_instance_get_subfamily_name_id",
                    "@version": "2.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "198",
                        "#text": "Fetches the `name` table Name ID that provides display names for\nthe \"Subfamily name\" defined for the given named instance in the face."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "157"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.cc",
                            "@line": "206",
                            "#text": "the Name ID found for the Subfamily name"
                        },
                        "type": {
                            "@name": "ot_name_id_t",
                            "@c:type": "hb_ot_name_id_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "200",
                                    "#text": "The #hb_face_t to work on"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "instance_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "201",
                                    "#text": "The index of the named instance to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_normalize_coords",
                    "@c:identifier": "hb_ot_var_normalize_coords",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "295",
                        "#text": "Normalizes the given design-space coordinates. The minimum and maximum\nvalues for the axis are mapped to the interval [-1,1], with the default\naxis value mapped to 0.\n\nThe normalized values have 14 bits of fixed-point sub-integer precision as per\nOpenType specification.\n\nAny additional scaling defined in the face's `avar` table is also\napplied, as described at https://docs.microsoft.com/en-us/typography/opentype/spec/avar"
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "183"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "297",
                                    "#text": "The #hb_face_t to work on"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "coords_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "298",
                                    "#text": "The length of the coordinate array"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "design_coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "299",
                                    "#text": "The design-space coordinates to normalize"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "const float*"
                                }
                            },
                            {
                                "@name": "normalized_coords",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "300",
                                    "#text": "The normalized coordinates"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ot_var_normalize_variations",
                    "@c:identifier": "hb_ot_var_normalize_variations",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "261",
                        "#text": "Normalizes all of the coordinates in the given list of variation axes."
                    },
                    "source-position": {
                        "@filename": "hb-ot-var.h",
                        "@line": "176"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "263",
                                    "#text": "The #hb_face_t to work on"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "variations",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "264",
                                    "#text": "The array of variations to normalize"
                                },
                                "type": {
                                    "@name": "variation_t",
                                    "@c:type": "const hb_variation_t*"
                                }
                            },
                            {
                                "@name": "variations_length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "265",
                                    "#text": "The number of variations to normalize"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "coords",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "266",
                                    "#text": "The array of normalized coordinates"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "int*",
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            },
                            {
                                "@name": "coords_length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-ot-var.cc",
                                    "@line": "267",
                                    "#text": "The length of the coordinate array"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "script_from_iso15924_tag",
                    "@c:identifier": "hb_script_from_iso15924_tag",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "479",
                        "#text": "Converts an ISO 15924 script tag to a corresponding #hb_script_t."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "750"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "485",
                            "#text": "An #hb_script_t corresponding to the ISO 15924 tag."
                        },
                        "type": {
                            "@name": "script_t",
                            "@c:type": "hb_script_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "tag",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "481",
                                "#text": "an #hb_tag_t representing an ISO 15924 tag."
                            },
                            "type": {
                                "@name": "tag_t",
                                "@c:type": "hb_tag_t"
                            }
                        }
                    }
                },
                {
                    "@name": "script_from_string",
                    "@c:identifier": "hb_script_from_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "529",
                        "#text": "Converts a string @str representing an ISO 15924 script tag to a\ncorresponding #hb_script_t. Shorthand for hb_tag_from_string() then\nhb_script_from_iso15924_tag()."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "753"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "539",
                            "#text": "An #hb_script_t corresponding to the ISO 15924 tag."
                        },
                        "type": {
                            "@name": "script_t",
                            "@c:type": "hb_script_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "531",
                                    "#text": "a string representing an\n      ISO 15924 tag."
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "533",
                                    "#text": "length of the @str, or -1 if it is `NULL`-terminated."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "script_get_horizontal_direction",
                    "@c:identifier": "hb_script_get_horizontal_direction",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "567",
                        "#text": "Fetches the #hb_direction_t of a script when it is\nset horizontally. All right-to-left scripts will return\n#HB_DIRECTION_RTL. All left-to-right scripts will return\n#HB_DIRECTION_LTR.  Scripts that can be written either\nhorizontally or vertically will return #HB_DIRECTION_INVALID.\nUnknown scripts will return #HB_DIRECTION_LTR."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "759"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "578",
                            "#text": "The horizontal #hb_direction_t of @script"
                        },
                        "type": {
                            "@name": "direction_t",
                            "@c:type": "hb_direction_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "script",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "569",
                                "#text": "The #hb_script_t to query"
                            },
                            "type": {
                                "@name": "script_t",
                                "@c:type": "hb_script_t"
                            }
                        }
                    }
                },
                {
                    "@name": "script_to_iso15924_tag",
                    "@c:identifier": "hb_script_to_iso15924_tag",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "550",
                        "#text": "Converts an #hb_script_t to a corresponding ISO\u00a015924 script tag."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "756"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "556",
                            "#text": "An #hb_tag_t representing an ISO 15924 script tag."
                        },
                        "type": {
                            "@name": "tag_t",
                            "@c:type": "hb_tag_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "script",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.cc",
                                "@line": "552",
                                "#text": "an #hb_script_t to convert."
                            },
                            "type": {
                                "@name": "script_t",
                                "@c:type": "hb_script_t"
                            }
                        }
                    }
                },
                {
                    "@name": "segment_properties_equal",
                    "@c:identifier": "hb_segment_properties_equal",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "46",
                        "#text": "Checks the equality of two #hb_segment_properties_t's."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "232"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "53",
                            "#text": "`true` if all properties of @a equal those of @b, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "a",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "48",
                                    "#text": "first #hb_segment_properties_t to compare."
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "const hb_segment_properties_t*"
                                }
                            },
                            {
                                "@name": "b",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "49",
                                    "#text": "second #hb_segment_properties_t to compare."
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "const hb_segment_properties_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "segment_properties_hash",
                    "@c:identifier": "hb_segment_properties_hash",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "70",
                        "#text": "Creates a hash representing @p."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "236"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.cc",
                            "@line": "76",
                            "#text": "A hash of @p."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "p",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.cc",
                                "@line": "72",
                                "#text": "#hb_segment_properties_t to hash."
                            },
                            "type": {
                                "@name": "segment_properties_t",
                                "@c:type": "const hb_segment_properties_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "segment_properties_overlay",
                    "@c:identifier": "hb_segment_properties_overlay",
                    "@version": "3.3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "89",
                        "#text": "Fills in missing fields of @p from @src in a considered manner.\n\nFirst, if @p does not have direction set, direction is copied from @src.\n\nNext, if @p and @src have the same direction (which can be unset), if @p\ndoes not have script set, script is copied from @src.\n\nFinally, if @p and @src have the same direction and script (which either\ncan be unset), if @p does not have language set, language is copied from\n@src."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "239"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "p",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "91",
                                    "#text": "#hb_segment_properties_t to fill in."
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "hb_segment_properties_t*"
                                }
                            },
                            {
                                "@name": "src",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.cc",
                                    "@line": "92",
                                    "#text": "#hb_segment_properties_t to fill in from."
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "const hb_segment_properties_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_add",
                    "@c:identifier": "hb_set_add",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "239",
                        "#text": "Adds @codepoint to @set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "105"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "241",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "codepoint",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "242",
                                    "#text": "The element to add to @set"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_add_range",
                    "@c:identifier": "hb_set_add_range",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "279",
                        "#text": "Adds all of the elements from @first to @last\n(inclusive) to @set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "109"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "281",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "first",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "282",
                                    "#text": "The first element to add to @set"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "last",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "283",
                                    "#text": "The final element to add to @set"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_add_sorted_array",
                    "@c:identifier": "hb_set_add_sorted_array",
                    "@version": "4.1.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "256",
                        "#text": "Adds @num_codepoints codepoints to a set at once.\nThe codepoints array must be in increasing order,\nwith size at least @num_codepoints."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "114"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "258",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "sorted_codepoints",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "259",
                                    "#text": "Array of codepoints to add"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_codepoint_t*",
                                    "type": {
                                        "@name": "codepoint_t",
                                        "@c:type": "hb_codepoint_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_codepoints",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "260",
                                    "#text": "Length of @sorted_codepoints"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_allocation_successful",
                    "@c:identifier": "hb_set_allocation_successful",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "155",
                        "#text": "Tests whether memory allocation for a set was successful."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "86"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "161",
                            "#text": "`true` if allocation succeeded, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "157",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "const hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_clear",
                    "@c:identifier": "hb_set_clear",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "190",
                        "#text": "Clears out the contents of a set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "92"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "192",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_copy",
                    "@c:identifier": "hb_set_copy",
                    "@version": "2.8.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "171",
                        "#text": "Allocate a copy of @set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "89"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "177",
                            "#text": "Newly-allocated set."
                        },
                        "type": {
                            "@name": "set_t",
                            "@c:type": "hb_set_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "173",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "const hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_create",
                    "@c:identifier": "hb_set_create",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "42",
                        "#text": "Creates a new, initially empty set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "61"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "47",
                            "#text": "The new #hb_set_t"
                        },
                        "type": {
                            "@name": "set_t",
                            "@c:type": "hb_set_t*"
                        }
                    }
                },
                {
                    "@name": "set_del",
                    "@c:identifier": "hb_set_del",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "299",
                        "#text": "Removes @codepoint from @set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "119"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "301",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "codepoint",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "302",
                                    "#text": "Removes @codepoint from @set"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_del_range",
                    "@c:identifier": "hb_set_del_range",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "316",
                        "#text": "Removes all of the elements from @first to @last\n(inclusive) from @set.\n\nIf @last is #HB_SET_VALUE_INVALID, then all values\ngreater than or equal to @first are removed."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "123"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "318",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "first",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "319",
                                    "#text": "The first element to remove from @set"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "last",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "320",
                                    "#text": "The final element to remove from @set"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_destroy",
                    "@c:identifier": "hb_set_destroy",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "93",
                        "#text": "Decreases the reference count on a set. When\nthe reference count reaches zero, the set is\ndestroyed, freeing all memory."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "70"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "95",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_get_empty",
                    "@c:identifier": "hb_set_get_empty",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "62",
                        "#text": "Fetches the singleton empty #hb_set_t."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "64"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "67",
                            "#text": "The empty #hb_set_t"
                        },
                        "type": {
                            "@name": "set_t",
                            "@c:type": "hb_set_t*"
                        }
                    }
                },
                {
                    "@name": "set_get_max",
                    "@c:identifier": "hb_set_get_max",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "526",
                        "#text": "Finds the largest element in the set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "167"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "532",
                            "#text": "maximum of @set, or #HB_SET_VALUE_INVALID if @set is empty."
                        },
                        "type": {
                            "@name": "codepoint_t",
                            "@c:type": "hb_codepoint_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "528",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "const hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_get_min",
                    "@c:identifier": "hb_set_get_min",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "510",
                        "#text": "Finds the smallest element in the set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "163"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "516",
                            "#text": "minimum of @set, or #HB_SET_VALUE_INVALID if @set is empty."
                        },
                        "type": {
                            "@name": "codepoint_t",
                            "@c:type": "hb_codepoint_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "512",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "const hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_get_population",
                    "@c:identifier": "hb_set_get_population",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "494",
                        "#text": "Returns the number of elements in the set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "159"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "500",
                            "#text": "The population of @set"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "496",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "const hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_get_user_data",
                    "@c:identifier": "hb_set_get_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "135",
                        "#text": "Fetches the user data associated with the specified key,\nattached to the specified set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "80"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "143",
                            "#text": "A pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "137",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "138",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_has",
                    "@c:identifier": "hb_set_has",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "221",
                        "#text": "Tests whether @codepoint belongs to @set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "101"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "228",
                            "#text": "`true` if @codepoint is in @set, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "223",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "codepoint",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "224",
                                    "#text": "The element to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_hash",
                    "@c:identifier": "hb_set_hash",
                    "@version": "4.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "358",
                        "#text": "Creates a hash representing @set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "132"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "364",
                            "#text": "A hash of @set."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "360",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "const hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_intersect",
                    "@c:identifier": "hb_set_intersect",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "427",
                        "#text": "Makes @set the intersection of @set and @other."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "147"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "429",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "other",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "430",
                                    "#text": "Another set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_invert",
                    "@c:identifier": "hb_set_invert",
                    "@version": "3.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "479",
                        "#text": "Inverts the contents of @set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "98"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "481",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_is_empty",
                    "@c:identifier": "hb_set_is_empty",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "205",
                        "#text": "Tests whether a set is empty (contains no elements)."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "95"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "211",
                            "#text": "`true` if @set is empty"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "207",
                                "#text": "a set."
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "const hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_is_equal",
                    "@c:identifier": "hb_set_is_equal",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "339",
                        "#text": "Tests whether @set and @other are equal (contain the same\nelements)."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "128"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "347",
                            "#text": "`true` if the two sets are equal, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "341",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "other",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "342",
                                    "#text": "Another set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_is_subset",
                    "@c:identifier": "hb_set_is_subset",
                    "@version": "1.8.1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "375",
                        "#text": "Tests whether @set is a subset of @larger_set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "135"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "382",
                            "#text": "`true` if the @set is a subset of (or equal to) @larger_set, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "377",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "larger_set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "378",
                                    "#text": "Another set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_next",
                    "@c:identifier": "hb_set_next",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "542",
                        "#text": "Fetches the next element in @set that is greater than current value of @codepoint.\n\nSet @codepoint to #HB_SET_VALUE_INVALID to get started."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "171"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "552",
                            "#text": "`true` if there was a next value, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "544",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "codepoint",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "545",
                                    "#text": "Input = Code point to query\n            Output = Code point retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_next_many",
                    "@c:identifier": "hb_set_next_many",
                    "@version": "4.2.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "632",
                        "#text": "Finds the next element in @set that is greater than @codepoint. Writes out\ncodepoints to @out, until either the set runs out of elements, or @size\ncodepoints are written, whichever comes first."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "193"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "644",
                            "#text": "the number of values written."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "634",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "codepoint",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "635",
                                    "#text": "Outputting codepoints starting after this one.\n            Use #HB_SET_VALUE_INVALID to get started."
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "out",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "637",
                                    "#text": "An array of codepoints to write to."
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "hb_codepoint_t*",
                                    "type": {
                                        "@name": "codepoint_t",
                                        "@c:type": "hb_codepoint_t"
                                    }
                                }
                            },
                            {
                                "@name": "size",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "638",
                                    "#text": "The maximum number of codepoints to write out."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_next_range",
                    "@c:identifier": "hb_set_next_range",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "584",
                        "#text": "Fetches the next consecutive range of elements in @set that\nare greater than current value of @last.\n\nSet @last to #HB_SET_VALUE_INVALID to get started."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "181"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "596",
                            "#text": "`true` if there was a next range, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "586",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "first",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "587",
                                    "#text": "The first code point in the range"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "last",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "588",
                                    "#text": "Input = The current last code point in the range\n        Output = The last code point in the range"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_previous",
                    "@c:identifier": "hb_set_previous",
                    "@version": "1.8.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "563",
                        "#text": "Fetches the previous element in @set that is lower than current value of @codepoint.\n\nSet @codepoint to #HB_SET_VALUE_INVALID to get started."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "176"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "573",
                            "#text": "`true` if there was a previous value, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "565",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "codepoint",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "566",
                                    "#text": "Input = Code point to query\n            Output = Code point retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_previous_range",
                    "@c:identifier": "hb_set_previous_range",
                    "@version": "1.8.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "608",
                        "#text": "Fetches the previous consecutive range of elements in @set that\nare greater than current value of @last.\n\nSet @first to #HB_SET_VALUE_INVALID to get started."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "187"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "620",
                            "#text": "`true` if there was a previous range, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "610",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            },
                            {
                                "@name": "first",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "611",
                                    "#text": "Input = The current first code point in the range\n        Output = The first code point in the range"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "last",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "613",
                                    "#text": "The last code point in the range"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_reference",
                    "@c:identifier": "hb_set_reference",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "77",
                        "#text": "Increases the reference count on a set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "67"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "83",
                            "#text": "The set"
                        },
                        "type": {
                            "@name": "set_t",
                            "@c:type": "hb_set_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-set.cc",
                                "@line": "79",
                                "#text": "A set"
                            },
                            "type": {
                                "@name": "set_t",
                                "@c:type": "hb_set_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_set",
                    "@c:identifier": "hb_set_set",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "393",
                        "#text": "Makes the contents of @set equal to the contents of @other."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "139"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "395",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "other",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "396",
                                    "#text": "Another set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_set_user_data",
                    "@c:identifier": "hb_set_set_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "111",
                        "#text": "Attaches a user-data key/data pair to the specified set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "73"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-set.cc",
                            "@line": "121",
                            "#text": "`true` if success, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "113",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "114",
                                    "#text": "The user-data key to set"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "115",
                                    "#text": "A pointer to the user data to set"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "116",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "117",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_subtract",
                    "@c:identifier": "hb_set_subtract",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "444",
                        "#text": "Subtracts the contents of @other from @set."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "151"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "446",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "other",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "447",
                                    "#text": "Another set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_symmetric_difference",
                    "@c:identifier": "hb_set_symmetric_difference",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "461",
                        "#text": "Makes @set the symmetric difference of @set\nand @other."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "155"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "463",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "other",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "464",
                                    "#text": "Another set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_union",
                    "@c:identifier": "hb_set_union",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "410",
                        "#text": "Makes @set the union of @set and @other."
                    },
                    "source-position": {
                        "@filename": "hb-set.h",
                        "@line": "143"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "set",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "412",
                                    "#text": "A set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "hb_set_t*"
                                }
                            },
                            {
                                "@name": "other",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-set.cc",
                                    "@line": "413",
                                    "#text": "Another set"
                                },
                                "type": {
                                    "@name": "set_t",
                                    "@c:type": "const hb_set_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape",
                    "@c:identifier": "hb_shape",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape.cc",
                        "@line": "171",
                        "#text": "Shapes @buffer using @font turning its Unicode characters content to\npositioned glyphs. If @features is not `NULL`, it will be used to control the\nfeatures applied during shaping. If two @features have the same tag but\noverlapping ranges the value of the feature with the higher index takes\nprecedence."
                    },
                    "source-position": {
                        "@filename": "hb-shape.h",
                        "@line": "44"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "173",
                                    "#text": "an #hb_font_t to use for shaping"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "174",
                                    "#text": "an #hb_buffer_t to shape"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "features",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "175",
                                    "#text": "an array of user\n   specified #hb_feature_t or `NULL`"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_feature_t*",
                                    "type": {
                                        "@name": "feature_t",
                                        "@c:type": "hb_feature_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "177",
                                    "#text": "the length of @features array"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape_full",
                    "@c:identifier": "hb_shape_full",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape.cc",
                        "@line": "104",
                        "#text": "See hb_shape() for details. If @shaper_list is not `NULL`, the specified\nshapers will be used in the given order, otherwise the default shapers list\nwill be used."
                    },
                    "source-position": {
                        "@filename": "hb-shape.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape.cc",
                            "@line": "118",
                            "#text": "false if all shapers failed, true otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "106",
                                    "#text": "an #hb_font_t to use for shaping"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "107",
                                    "#text": "an #hb_buffer_t to shape"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "features",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "108",
                                    "#text": "an array of user\n   specified #hb_feature_t or `NULL`"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_feature_t*",
                                    "type": {
                                        "@name": "feature_t",
                                        "@c:type": "hb_feature_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "110",
                                    "#text": "the length of @features array"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "shaper_list",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape.cc",
                                    "@line": "111",
                                    "#text": "a `NULL`-terminated\n   array of shapers to use or `NULL`"
                                },
                                "array": {
                                    "@c:type": "const char* const*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape_list_shapers",
                    "@c:identifier": "hb_shape_list_shapers",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape.cc",
                        "@line": "87",
                        "#text": "Retrieves the list of shapers supported by HarfBuzz."
                    },
                    "source-position": {
                        "@filename": "hb-shape.h",
                        "@line": "57"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape.cc",
                            "@line": "92",
                            "#text": "an array of\n   constant strings"
                        },
                        "array": {
                            "@c:type": "const char**",
                            "type": {
                                "@name": "utf8"
                            }
                        }
                    }
                },
                {
                    "@name": "shape_plan_create",
                    "@c:identifier": "hb_shape_plan_create",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "172",
                        "#text": "Constructs a shaping plan for a combination of @face, @user_features, @props,\nand @shaper_list."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "56"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "183",
                            "#text": "The shaping plan"
                        },
                        "type": {
                            "@name": "shape_plan_t",
                            "@c:type": "hb_shape_plan_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "174",
                                    "#text": "#hb_face_t to use"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "props",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "175",
                                    "#text": "The #hb_segment_properties_t of the segment"
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "const hb_segment_properties_t*"
                                }
                            },
                            {
                                "@name": "user_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "176",
                                    "#text": "The list of user-selected features"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_feature_t*",
                                    "type": {
                                        "@name": "feature_t",
                                        "@c:type": "hb_feature_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_user_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "177",
                                    "#text": "The number of user-selected features"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "shaper_list",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "178",
                                    "#text": "List of shapers to try"
                                },
                                "array": {
                                    "@c:type": "const char* const*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape_plan_create2",
                    "@c:identifier": "hb_shape_plan_create2",
                    "@version": "1.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "200",
                        "#text": "The variable-font version of #hb_shape_plan_create.\nConstructs a shaping plan for a combination of @face, @user_features, @props,\nand @shaper_list, plus the variation-space coordinates @coords."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "70"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "214",
                            "#text": "The shaping plan"
                        },
                        "type": {
                            "@name": "shape_plan_t",
                            "@c:type": "hb_shape_plan_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "202",
                                    "#text": "#hb_face_t to use"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "props",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "203",
                                    "#text": "The #hb_segment_properties_t of the segment"
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "const hb_segment_properties_t*"
                                }
                            },
                            {
                                "@name": "user_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "204",
                                    "#text": "The list of user-selected features"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_feature_t*",
                                    "type": {
                                        "@name": "feature_t",
                                        "@c:type": "hb_feature_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_user_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "205",
                                    "#text": "The number of user-selected features"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "206",
                                    "#text": "The list of variation-space coordinates"
                                },
                                "array": {
                                    "@length": "5",
                                    "@zero-terminated": "0",
                                    "@c:type": "const int*",
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            },
                            {
                                "@name": "num_coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "207",
                                    "#text": "The number of variation-space coordinates"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "shaper_list",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "208",
                                    "#text": "List of shapers to try"
                                },
                                "array": {
                                    "@c:type": "const char* const*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape_plan_create_cached",
                    "@c:identifier": "hb_shape_plan_create_cached",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "464",
                        "#text": "Creates a cached shaping plan suitable for reuse, for a combination\nof @face, @user_features, @props, and @shaper_list."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "475",
                            "#text": "The shaping plan"
                        },
                        "type": {
                            "@name": "shape_plan_t",
                            "@c:type": "hb_shape_plan_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "466",
                                    "#text": "#hb_face_t to use"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "props",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "467",
                                    "#text": "The #hb_segment_properties_t of the segment"
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "const hb_segment_properties_t*"
                                }
                            },
                            {
                                "@name": "user_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "468",
                                    "#text": "The list of user-selected features"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_feature_t*",
                                    "type": {
                                        "@name": "feature_t",
                                        "@c:type": "hb_feature_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_user_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "469",
                                    "#text": "The number of user-selected features"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "shaper_list",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "470",
                                    "#text": "List of shapers to try"
                                },
                                "array": {
                                    "@c:type": "const char* const*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape_plan_create_cached2",
                    "@c:identifier": "hb_shape_plan_create_cached2",
                    "@version": "1.4.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "492",
                        "#text": "The variable-font version of #hb_shape_plan_create_cached.\nCreates a cached shaping plan suitable for reuse, for a combination\nof @face, @user_features, @props, and @shaper_list, plus the\nvariation-space coordinates @coords."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "79"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "507",
                            "#text": "The shaping plan"
                        },
                        "type": {
                            "@name": "shape_plan_t",
                            "@c:type": "hb_shape_plan_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "494",
                                    "#text": "#hb_face_t to use"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "props",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "495",
                                    "#text": "The #hb_segment_properties_t of the segment"
                                },
                                "type": {
                                    "@name": "segment_properties_t",
                                    "@c:type": "const hb_segment_properties_t*"
                                }
                            },
                            {
                                "@name": "user_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "496",
                                    "#text": "The list of user-selected features"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_feature_t*",
                                    "type": {
                                        "@name": "feature_t",
                                        "@c:type": "hb_feature_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_user_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "497",
                                    "#text": "The number of user-selected features"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "498",
                                    "#text": "The list of variation-space coordinates"
                                },
                                "array": {
                                    "@length": "5",
                                    "@zero-terminated": "0",
                                    "@c:type": "const int*",
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            },
                            {
                                "@name": "num_coords",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "499",
                                    "#text": "The number of variation-space coordinates"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "shaper_list",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "500",
                                    "#text": "List of shapers to try"
                                },
                                "array": {
                                    "@c:type": "const char* const*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape_plan_destroy",
                    "@c:identifier": "hb_shape_plan_destroy",
                    "@version": "0.9.7",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "306",
                        "#text": "Decreases the reference count on the given shaping plan. When the\nreference count reaches zero, the shaping plan is destroyed,\nfreeing all memory."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "95"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "shape_plan",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-shape-plan.cc",
                                "@line": "308",
                                "#text": "A shaping plan"
                            },
                            "type": {
                                "@name": "shape_plan_t",
                                "@c:type": "hb_shape_plan_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "shape_plan_execute",
                    "@c:identifier": "hb_shape_plan_execute",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "428",
                        "#text": "Executes the given shaping plan on the specified buffer, using\nthe given @font and @features."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "110"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "439",
                            "#text": "`true` if success, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "shape_plan",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "430",
                                    "#text": "A shaping plan"
                                },
                                "type": {
                                    "@name": "shape_plan_t",
                                    "@c:type": "hb_shape_plan_t*"
                                }
                            },
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "431",
                                    "#text": "The #hb_font_t to use"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "432",
                                    "#text": "The #hb_buffer_t to work upon"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "433",
                                    "#text": "Features to enable"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "const hb_feature_t*",
                                    "type": {
                                        "@name": "feature_t",
                                        "@c:type": "hb_feature_t"
                                    }
                                }
                            },
                            {
                                "@name": "num_features",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "434",
                                    "#text": "The number of features to enable"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape_plan_get_empty",
                    "@c:identifier": "hb_shape_plan_get_empty",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "275",
                        "#text": "Fetches the singleton empty shaping plan."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "89"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "280",
                            "#text": "The empty shaping plan"
                        },
                        "type": {
                            "@name": "shape_plan_t",
                            "@c:type": "hb_shape_plan_t*"
                        }
                    }
                },
                {
                    "@name": "shape_plan_get_shaper",
                    "@c:identifier": "hb_shape_plan_get_shaper",
                    "@version": "0.9.7",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "367",
                        "#text": "Fetches the shaper from a given shaping plan."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "117"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "373",
                            "#text": "The shaper"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "shape_plan",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-shape-plan.cc",
                                "@line": "369",
                                "#text": "A shaping plan"
                            },
                            "type": {
                                "@name": "shape_plan_t",
                                "@c:type": "hb_shape_plan_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "shape_plan_get_user_data",
                    "@c:identifier": "hb_shape_plan_get_user_data",
                    "@version": "0.9.7",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "348",
                        "#text": "Fetches the user data associated with the specified key,\nattached to the specified shaping plan."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "105"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "356",
                            "#text": "A pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "shape_plan",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "350",
                                    "#text": "A shaping plan"
                                },
                                "type": {
                                    "@name": "shape_plan_t",
                                    "@c:type": "const hb_shape_plan_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "351",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "shape_plan_reference",
                    "@c:identifier": "hb_shape_plan_reference",
                    "@version": "0.9.7",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "290",
                        "#text": "Increases the reference count on the given shaping plan."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "92"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "296",
                            "#text": "@shape_plan"
                        },
                        "type": {
                            "@name": "shape_plan_t",
                            "@c:type": "hb_shape_plan_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "shape_plan",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-shape-plan.cc",
                                "@line": "292",
                                "#text": "A shaping plan"
                            },
                            "type": {
                                "@name": "shape_plan_t",
                                "@c:type": "hb_shape_plan_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "shape_plan_set_user_data",
                    "@c:identifier": "hb_shape_plan_set_user_data",
                    "@version": "0.9.7",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "324",
                        "#text": "Attaches a user-data key/data pair to the given shaping plan."
                    },
                    "source-position": {
                        "@filename": "hb-shape-plan.h",
                        "@line": "98"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-shape-plan.cc",
                            "@line": "334",
                            "#text": "`true` if success, `false` otherwise."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "shape_plan",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "326",
                                    "#text": "A shaping plan"
                                },
                                "type": {
                                    "@name": "shape_plan_t",
                                    "@c:type": "hb_shape_plan_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "327",
                                    "#text": "The user-data key to set"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "328",
                                    "#text": "A pointer to the user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "329",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-shape-plan.cc",
                                    "@line": "330",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "style_get_value",
                    "@c:identifier": "hb_style_get_value",
                    "@version": "3.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-style.cc",
                        "@line": "58",
                        "#text": "Searches variation axes of a #hb_font_t object for a specific axis first,\nif not set, then tries to get default style values from different\ntables of the font."
                    },
                    "source-position": {
                        "@filename": "hb-style.h",
                        "@line": "77"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-style.cc",
                            "@line": "67",
                            "#text": "Corresponding axis or default value to a style tag."
                        },
                        "type": {
                            "@name": "gfloat",
                            "@c:type": "float"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-style.cc",
                                    "@line": "60",
                                    "#text": "a #hb_font_t object."
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "style_tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-style.cc",
                                    "@line": "61",
                                    "#text": "a style tag."
                                },
                                "type": {
                                    "@name": "style_tag_t",
                                    "@c:type": "hb_style_tag_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "tag_from_string",
                    "@c:identifier": "hb_tag_from_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "108",
                        "#text": "Converts a string into an #hb_tag_t. Valid tags\nare four characters. Shorter input strings will be\npadded with spaces. Longer input strings will be\ntruncated."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "207"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "118",
                            "#text": "The #hb_tag_t corresponding to @str"
                        },
                        "type": {
                            "@name": "tag_t",
                            "@c:type": "hb_tag_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "110",
                                    "#text": "String to convert"
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "111",
                                    "#text": "Length of @str, or -1 if it is `NULL`-terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "tag_to_string",
                    "@c:identifier": "hb_tag_to_string",
                    "@version": "0.9.5",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "141",
                        "#text": "Converts an #hb_tag_t to a string and returns it in @buf.\nStrings will be four characters long."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "211"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "143",
                                    "#text": "#hb_tag_t to convert"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "buf",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "144",
                                    "#text": "Converted string"
                                },
                                "array": {
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "@fixed-size": "4",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_combining_class",
                    "@c:identifier": "hb_unicode_combining_class",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "565",
                        "#text": "Retrieves the Canonical Combining Class (ccc) property\nof code point @unicode."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "578"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "573",
                            "#text": "The #hb_unicode_combining_class_t of @unicode"
                        },
                        "type": {
                            "@name": "unicode_combining_class_t",
                            "@c:type": "hb_unicode_combining_class_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "567",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "568",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_compose",
                    "@c:identifier": "hb_unicode_compose",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "411",
                        "#text": "Fetches the composition of a sequence of two Unicode\ncode points.\n\nCalls the composition function of the specified\nUnicode-functions structure @ufuncs."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "630"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "424",
                            "#text": "`true` if @a and @b composed, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "413",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "a",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "414",
                                    "#text": "The first Unicode code point to compose"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "b",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "415",
                                    "#text": "The second Unicode code point to compose"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "ab",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "416",
                                    "#text": "The composition of @a, @b"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_decompose",
                    "@c:identifier": "hb_unicode_decompose",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "437",
                        "#text": "Fetches the decomposition of a Unicode code point.\n\nCalls the decomposition function of the specified\nUnicode-functions structure @ufuncs."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "636"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "449",
                            "#text": "`true` if @ab was decomposed, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "439",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "ab",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "440",
                                    "#text": "Unicode code point to decompose"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "a",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "441",
                                    "#text": "The first code point of the decomposition of @ab"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "b",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "442",
                                    "#text": "The second code point of the decomposition of @ab"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_decompose_compatibility",
                    "@c:identifier": "hb_unicode_decompose_compatibility",
                    "@version": "0.9.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "463",
                        "#text": "Fetches the compatibility decomposition of a Unicode\ncode point. Deprecated."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "210"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "472",
                            "#text": "length of @decomposed."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "465",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "u",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "466",
                                    "#text": "Code point to decompose"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "decomposed",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "467",
                                    "#text": "Compatibility decomposition of @u"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_eastasian_width",
                    "@c:identifier": "hb_unicode_eastasian_width",
                    "@version": "0.9.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "141",
                        "#text": "Don't use. Not used by HarfBuzz."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "152"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "143",
                                    "#text": "a Unicode-function structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "144",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_create",
                    "@c:identifier": "hb_unicode_funcs_create",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "171",
                        "#text": "Creates a new #hb_unicode_funcs_t structure of Unicode functions."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "300"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "177",
                            "#text": "The Unicode-functions structure"
                        },
                        "type": {
                            "@name": "unicode_funcs_t",
                            "@c:type": "hb_unicode_funcs_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "parent",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.cc",
                                "@line": "173",
                                "#text": "Parent Unicode-functions structure"
                            },
                            "type": {
                                "@name": "unicode_funcs_t",
                                "@c:type": "hb_unicode_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "unicode_funcs_destroy",
                    "@c:identifier": "hb_unicode_funcs_destroy",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "249",
                        "#text": "Decreases the reference count on a Unicode-functions structure. When\nthe reference count reaches zero, the Unicode-functions structure is\ndestroyed, freeing all memory."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "309"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ufuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.cc",
                                "@line": "251",
                                "#text": "The Unicode-functions structure"
                            },
                            "type": {
                                "@name": "unicode_funcs_t",
                                "@c:type": "hb_unicode_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "unicode_funcs_get_default",
                    "@c:identifier": "hb_unicode_funcs_get_default",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "141",
                        "#text": "Fetches a pointer to the default Unicode-functions structure that is used\nwhen no functions are explicitly set on #hb_buffer_t."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "296"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "147",
                            "#text": "a pointer to the #hb_unicode_funcs_t Unicode-functions structure"
                        },
                        "type": {
                            "@name": "unicode_funcs_t",
                            "@c:type": "hb_unicode_funcs_t*"
                        }
                    }
                },
                {
                    "@name": "unicode_funcs_get_empty",
                    "@c:identifier": "hb_unicode_funcs_get_empty",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "218",
                        "#text": "Fetches the singleton empty Unicode-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "303"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "223",
                            "#text": "The empty Unicode-functions structure"
                        },
                        "type": {
                            "@name": "unicode_funcs_t",
                            "@c:type": "hb_unicode_funcs_t*"
                        }
                    }
                },
                {
                    "@name": "unicode_funcs_get_parent",
                    "@c:identifier": "hb_unicode_funcs_get_parent",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "353",
                        "#text": "Fetches the parent of the Unicode-functions structure\n@ufuncs."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "331"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "360",
                            "#text": "The parent Unicode-functions structure"
                        },
                        "type": {
                            "@name": "unicode_funcs_t",
                            "@c:type": "hb_unicode_funcs_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ufuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.cc",
                                "@line": "355",
                                "#text": "The Unicode-functions structure"
                            },
                            "type": {
                                "@name": "unicode_funcs_t",
                                "@c:type": "hb_unicode_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "unicode_funcs_get_user_data",
                    "@c:identifier": "hb_unicode_funcs_get_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "298",
                        "#text": "Fetches the user-data associated with the specified key,\nattached to the specified Unicode-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "320"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "306",
                            "#text": "A pointer to the user data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "300",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "const hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "301",
                                    "#text": "The user-data key to query"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_is_immutable",
                    "@c:identifier": "hb_unicode_funcs_is_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "336",
                        "#text": "Tests whether the specified Unicode-functions structure\nis immutable."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "328"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "343",
                            "#text": "`true` if @ufuncs is immutable, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ufuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.cc",
                                "@line": "338",
                                "#text": "The Unicode-functions structure"
                            },
                            "type": {
                                "@name": "unicode_funcs_t",
                                "@c:type": "hb_unicode_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "unicode_funcs_make_immutable",
                    "@c:identifier": "hb_unicode_funcs_make_immutable",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "318",
                        "#text": "Makes the specified Unicode-functions structure\nimmutable."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "325"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ufuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.cc",
                                "@line": "320",
                                "#text": "The Unicode-functions structure"
                            },
                            "type": {
                                "@name": "unicode_funcs_t",
                                "@c:type": "hb_unicode_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "unicode_funcs_reference",
                    "@c:identifier": "hb_unicode_funcs_reference",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "233",
                        "#text": "Increases the reference count on a Unicode-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "306"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "239",
                            "#text": "The Unicode-functions structure"
                        },
                        "type": {
                            "@name": "unicode_funcs_t",
                            "@c:type": "hb_unicode_funcs_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ufuncs",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-unicode.cc",
                                "@line": "235",
                                "#text": "The Unicode-functions structure"
                            },
                            "type": {
                                "@name": "unicode_funcs_t",
                                "@c:type": "hb_unicode_funcs_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "unicode_funcs_set_combining_class_func",
                    "@c:identifier": "hb_unicode_funcs_set_combining_class_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "467",
                        "#text": "Sets the implementation function for #hb_unicode_combining_class_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "479"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "469",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "470",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "unicode_combining_class_func_t",
                                    "@c:type": "hb_unicode_combining_class_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "471",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "472",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_set_compose_func",
                    "@c:identifier": "hb_unicode_funcs_set_compose_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "531",
                        "#text": "Sets the implementation function for #hb_unicode_compose_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "543"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "533",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "534",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "unicode_compose_func_t",
                                    "@c:type": "hb_unicode_compose_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "535",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "536",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_set_decompose_compatibility_func",
                    "@c:identifier": "hb_unicode_funcs_set_decompose_compatibility_func",
                    "@version": "0.9.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "190",
                        "#text": "Sets the implementation function for #hb_unicode_decompose_compatibility_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "205"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "192",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "193",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "unicode_decompose_compatibility_func_t",
                                    "@c:type": "hb_unicode_decompose_compatibility_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "194",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "195",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_set_decompose_func",
                    "@c:identifier": "hb_unicode_funcs_set_decompose_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "547",
                        "#text": "Sets the implementation function for #hb_unicode_decompose_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "559"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "549",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "550",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "unicode_decompose_func_t",
                                    "@c:type": "hb_unicode_decompose_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "551",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "552",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_set_eastasian_width_func",
                    "@c:identifier": "hb_unicode_funcs_set_eastasian_width_func",
                    "@version": "0.9.2",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "124",
                        "#text": "Sets the implementation function for #hb_unicode_eastasian_width_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "137"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "126",
                                    "#text": "a Unicode-function structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "127",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "unicode_eastasian_width_func_t",
                                    "@c:type": "hb_unicode_eastasian_width_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "128",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "129",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_set_general_category_func",
                    "@c:identifier": "hb_unicode_funcs_set_general_category_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "483",
                        "#text": "Sets the implementation function for #hb_unicode_general_category_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "495"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "485",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "486",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "unicode_general_category_func_t",
                                    "@c:type": "hb_unicode_general_category_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "487",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "488",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_set_mirroring_func",
                    "@c:identifier": "hb_unicode_funcs_set_mirroring_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "499",
                        "#text": "Sets the implementation function for #hb_unicode_mirroring_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "511"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "501",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "502",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "unicode_mirroring_func_t",
                                    "@c:type": "hb_unicode_mirroring_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "503",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "504",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_set_script_func",
                    "@c:identifier": "hb_unicode_funcs_set_script_func",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "515",
                        "#text": "Sets the implementation function for #hb_unicode_script_func_t."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "527"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "517",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "518",
                                    "#text": "The callback function to assign"
                                },
                                "type": {
                                    "@name": "unicode_script_func_t",
                                    "@c:type": "hb_unicode_script_func_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "519",
                                    "#text": "Data to pass to @func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "notified",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "520",
                                    "#text": "The function to call when @user_data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_funcs_set_user_data",
                    "@c:identifier": "hb_unicode_funcs_set_user_data",
                    "@version": "0.9.2",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "274",
                        "#text": "Attaches a user-data key/data pair to the specified Unicode-functions structure."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "312"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.cc",
                            "@line": "284",
                            "#text": "`true` if success, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "276",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "key",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "277",
                                    "#text": "The user-data key"
                                },
                                "type": {
                                    "@name": "user_data_key_t",
                                    "@c:type": "hb_user_data_key_t*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "278",
                                    "#text": "A pointer to the user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "destroy",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "279",
                                    "#text": "A callback to call when @data is not needed anymore"
                                },
                                "type": {
                                    "@name": "destroy_func_t",
                                    "@c:type": "hb_destroy_func_t"
                                }
                            },
                            {
                                "@name": "replace",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.cc",
                                    "@line": "280",
                                    "#text": "Whether to replace an existing data with the same key"
                                },
                                "type": {
                                    "@name": "bool_t",
                                    "@c:type": "hb_bool_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_general_category",
                    "@c:identifier": "hb_unicode_general_category",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "581",
                        "#text": "Retrieves the General Category (gc) property\nof code point @unicode."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "594"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "589",
                            "#text": "The #hb_unicode_general_category_t of @unicode"
                        },
                        "type": {
                            "@name": "unicode_general_category_t",
                            "@c:type": "hb_unicode_general_category_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "583",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "584",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_mirroring",
                    "@c:identifier": "hb_unicode_mirroring",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "597",
                        "#text": "Retrieves the Bi-directional Mirroring Glyph code\npoint defined for code point @unicode."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "610"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "605",
                            "#text": "The #hb_codepoint_t of the Mirroring Glyph for @unicode"
                        },
                        "type": {
                            "@name": "codepoint_t",
                            "@c:type": "hb_codepoint_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "599",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "600",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_script",
                    "@c:identifier": "hb_unicode_script",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "613",
                        "#text": "Retrieves the #hb_script_t script to which code\npoint @unicode belongs."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "626"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "621",
                            "#text": "The #hb_script_t of @unicode"
                        },
                        "type": {
                            "@name": "script_t",
                            "@c:type": "hb_script_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "615",
                                    "#text": "The Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "616",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "variation_from_string",
                    "@c:identifier": "hb_variation_from_string",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "1054",
                        "#text": "Parses a string into a #hb_variation_t.\n\nThe format for specifying variation settings follows. All valid CSS\nfont-variation-settings values other than 'normal' and 'inherited' are also\naccepted, though, not documented below.\n\nThe format is a tag, optionally followed by an equals sign, followed by a\nnumber. For example `wght=500`, or `slnt=-7.5`."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "854"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "1069",
                            "#text": "`true` if @str is successfully parsed, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "1056",
                                    "#text": "a string to parse"
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "1057",
                                    "#text": "length of @str, or -1 if string is `NULL` terminated"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "variation",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "1058",
                                    "#text": "the #hb_variation_t to initialize with the parsed values"
                                },
                                "type": {
                                    "@name": "variation_t",
                                    "@c:type": "hb_variation_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "variation_to_string",
                    "@c:identifier": "hb_variation_to_string",
                    "@version": "1.4.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "1136",
                        "#text": "Converts an #hb_variation_t into a `NULL`-terminated string in the format\nunderstood by hb_variation_from_string(). The client in responsible for\nallocating big enough size for @buf, 128 bytes is more than enough."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "858"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "variation",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "1138",
                                    "#text": "an #hb_variation_t to convert"
                                },
                                "type": {
                                    "@name": "variation_t",
                                    "@c:type": "hb_variation_t*"
                                }
                            },
                            {
                                "@name": "buf",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "1139",
                                    "#text": "output string"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "1140",
                                    "#text": "the allocated size of @buf"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "version",
                    "@c:identifier": "hb_version",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "684",
                        "#text": "Returns library version as three integer components."
                    },
                    "source-position": {
                        "@filename": "hb-version.h",
                        "@line": "80"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "686",
                                    "#text": "Library major version component"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "minor",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "687",
                                    "#text": "Library minor version component"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            },
                            {
                                "@name": "micro",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "688",
                                    "#text": "Library micro version component"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "version_atleast",
                    "@c:identifier": "hb_version_atleast",
                    "@version": "0.9.30",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "719",
                        "#text": "Tests the library version against a minimum value,\nas three integer components."
                    },
                    "source-position": {
                        "@filename": "hb-version.h",
                        "@line": "88"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "728",
                            "#text": "`true` if the library is equal to or greater than\nthe test value, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "721",
                                    "#text": "Library major version component"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "minor",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "722",
                                    "#text": "Library minor version component"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "micro",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-common.cc",
                                    "@line": "723",
                                    "#text": "Library micro version component"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "version_string",
                    "@c:identifier": "hb_version_string",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "704",
                        "#text": "Returns library version as a string with three components."
                    },
                    "source-position": {
                        "@filename": "hb-version.h",
                        "@line": "85"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-common.cc",
                            "@line": "709",
                            "#text": "Library version string"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    }
                }
            ],
            "bitfield": [
                {
                    "@name": "buffer_diff_flags_t",
                    "@version": "1.5.0",
                    "@glib:type-name": "hb_buffer_diff_flags_t",
                    "@glib:get-type": "hb_gobject_buffer_diff_flags_get_type",
                    "@c:type": "hb_buffer_diff_flags_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "701",
                        "#text": "Flags from comparing two #hb_buffer_t's.\n\nBuffer with different #hb_buffer_content_type_t cannot be meaningfully\ncompared in any further detail.\n\nFor buffers with differing length, the per-glyph comparison is not\nattempted, though we do still scan reference buffer for dotted circle and\n`.notdef` glyphs.\n\nIf the buffers have the same length, we compare them glyph-by-glyph and\nreport which aspect(s) of the glyph info/position are different."
                    },
                    "member": [
                        {
                            "@name": "equal",
                            "@value": "0",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_EQUAL",
                            "@glib:nick": "equal",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_EQUAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "703",
                                "#text": "equal buffers."
                            }
                        },
                        {
                            "@name": "content_type_mismatch",
                            "@value": "1",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_CONTENT_TYPE_MISMATCH",
                            "@glib:nick": "content-type-mismatch",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_CONTENT_TYPE_MISMATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "704",
                                "#text": "buffers with different\n    #hb_buffer_content_type_t."
                            }
                        },
                        {
                            "@name": "length_mismatch",
                            "@value": "2",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_LENGTH_MISMATCH",
                            "@glib:nick": "length-mismatch",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_LENGTH_MISMATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "706",
                                "#text": "buffers with differing length."
                            }
                        },
                        {
                            "@name": "notdef_present",
                            "@value": "4",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT",
                            "@glib:nick": "notdef-present",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "707",
                                "#text": "`.notdef` glyph is present in the\n    reference buffer."
                            }
                        },
                        {
                            "@name": "dotted_circle_present",
                            "@value": "8",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT",
                            "@glib:nick": "dotted-circle-present",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "709",
                                "#text": "dotted circle glyph is present\n    in the reference buffer."
                            }
                        },
                        {
                            "@name": "codepoint_mismatch",
                            "@value": "16",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_CODEPOINT_MISMATCH",
                            "@glib:nick": "codepoint-mismatch",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_CODEPOINT_MISMATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "711",
                                "#text": "difference in #hb_glyph_info_t.codepoint"
                            }
                        },
                        {
                            "@name": "cluster_mismatch",
                            "@value": "32",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_CLUSTER_MISMATCH",
                            "@glib:nick": "cluster-mismatch",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_CLUSTER_MISMATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "712",
                                "#text": "difference in #hb_glyph_info_t.cluster"
                            }
                        },
                        {
                            "@name": "glyph_flags_mismatch",
                            "@value": "64",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_GLYPH_FLAGS_MISMATCH",
                            "@glib:nick": "glyph-flags-mismatch",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_GLYPH_FLAGS_MISMATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "713",
                                "#text": "difference in #hb_glyph_flags_t."
                            }
                        },
                        {
                            "@name": "position_mismatch",
                            "@value": "128",
                            "@c:identifier": "HB_BUFFER_DIFF_FLAG_POSITION_MISMATCH",
                            "@glib:nick": "position-mismatch",
                            "@glib:name": "HB_BUFFER_DIFF_FLAG_POSITION_MISMATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "714",
                                "#text": "difference in #hb_glyph_position_t."
                            }
                        }
                    ]
                },
                {
                    "@name": "buffer_flags_t",
                    "@version": "0.9.20",
                    "@glib:type-name": "hb_buffer_flags_t",
                    "@glib:get-type": "hb_gobject_buffer_flags_get_type",
                    "@c:type": "hb_buffer_flags_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "346",
                        "#text": "Flags for #hb_buffer_t."
                    },
                    "member": [
                        {
                            "@name": "default",
                            "@value": "0",
                            "@c:identifier": "HB_BUFFER_FLAG_DEFAULT",
                            "@glib:nick": "default",
                            "@glib:name": "HB_BUFFER_FLAG_DEFAULT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "348",
                                "#text": "the default buffer flag."
                            }
                        },
                        {
                            "@name": "bot",
                            "@value": "1",
                            "@c:identifier": "HB_BUFFER_FLAG_BOT",
                            "@glib:nick": "bot",
                            "@glib:name": "HB_BUFFER_FLAG_BOT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "349",
                                "#text": "flag indicating that special handling of the beginning\n                     of text paragraph can be applied to this buffer. Should usually\n                     be set, unless you are passing to the buffer only part\n                     of the text without the full context."
                            }
                        },
                        {
                            "@name": "eot",
                            "@value": "2",
                            "@c:identifier": "HB_BUFFER_FLAG_EOT",
                            "@glib:nick": "eot",
                            "@glib:name": "HB_BUFFER_FLAG_EOT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "353",
                                "#text": "flag indicating that special handling of the end of text\n                     paragraph can be applied to this buffer, similar to\n                     @HB_BUFFER_FLAG_BOT."
                            }
                        },
                        {
                            "@name": "preserve_default_ignorables",
                            "@value": "4",
                            "@c:identifier": "HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES",
                            "@glib:nick": "preserve-default-ignorables",
                            "@glib:name": "HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "356",
                                "#text": "flag indication that character with Default_Ignorable\n                     Unicode property should use the corresponding glyph\n                     from the font, instead of hiding them (done by\n                     replacing them with the space glyph and zeroing the\n                     advance width.)  This flag takes precedence over\n                     @HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES."
                            }
                        },
                        {
                            "@name": "remove_default_ignorables",
                            "@value": "8",
                            "@c:identifier": "HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES",
                            "@glib:nick": "remove-default-ignorables",
                            "@glib:name": "HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "363",
                                "#text": "flag indication that character with Default_Ignorable\n                     Unicode property should be removed from glyph string\n                     instead of hiding them (done by replacing them with the\n                     space glyph and zeroing the advance width.)\n                     @HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES takes\n                     precedence over this flag. Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "do_not_insert_dotted_circle",
                            "@value": "16",
                            "@c:identifier": "HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE",
                            "@glib:nick": "do-not-insert-dotted-circle",
                            "@glib:name": "HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "370",
                                "#text": "flag indicating that a dotted circle should\n                     not be inserted in the rendering of incorrect\n                     character sequences (such at <0905 093E>). Since: 2.4.0"
                            }
                        },
                        {
                            "@name": "verify",
                            "@value": "32",
                            "@c:identifier": "HB_BUFFER_FLAG_VERIFY",
                            "@glib:nick": "verify",
                            "@glib:name": "HB_BUFFER_FLAG_VERIFY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "374",
                                "#text": "flag indicating that the hb_shape() call and its variants\n                     should perform various verification processes on the results\n                     of the shaping operation on the buffer.  If the verification\n                     fails, then either a buffer message is sent, if a message\n                     handler is installed on the buffer, or a message is written\n                     to standard error.  In either case, the shaping result might\n                     be modified to show the failed output. Since: 3.4.0"
                            }
                        },
                        {
                            "@name": "produce_unsafe_to_concat",
                            "@value": "64",
                            "@c:identifier": "HB_BUFFER_FLAG_PRODUCE_UNSAFE_TO_CONCAT",
                            "@glib:nick": "produce-unsafe-to-concat",
                            "@glib:name": "HB_BUFFER_FLAG_PRODUCE_UNSAFE_TO_CONCAT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "382",
                                "#text": "flag indicating that the @HB_GLYPH_FLAG_UNSAFE_TO_CONCAT\n                     glyph-flag should be produced by the shaper. By default\n                     it will not be produced since it incurs a cost. Since: 4.0.0"
                            }
                        },
                        {
                            "@name": "produce_safe_to_insert_tatweel",
                            "@value": "128",
                            "@c:identifier": "HB_BUFFER_FLAG_PRODUCE_SAFE_TO_INSERT_TATWEEL",
                            "@glib:nick": "produce-safe-to-insert-tatweel",
                            "@glib:name": "HB_BUFFER_FLAG_PRODUCE_SAFE_TO_INSERT_TATWEEL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "386",
                                "#text": "flag indicating that the @HB_GLYPH_FLAG_SAFE_TO_INSERT_TATWEEL\n                     glyph-flag should be produced by the shaper. By default\n                     it will not be produced. Since: 5.1.0"
                            }
                        },
                        {
                            "@name": "defined",
                            "@value": "255",
                            "@c:identifier": "HB_BUFFER_FLAG_DEFINED",
                            "@glib:nick": "defined",
                            "@glib:name": "HB_BUFFER_FLAG_DEFINED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "390",
                                "#text": "All currently defined flags: Since: 4.4.0"
                            }
                        }
                    ]
                },
                {
                    "@name": "buffer_serialize_flags_t",
                    "@version": "0.9.20",
                    "@glib:type-name": "hb_buffer_serialize_flags_t",
                    "@glib:get-type": "hb_gobject_buffer_serialize_flags_get_type",
                    "@c:type": "hb_buffer_serialize_flags_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "594",
                        "#text": "Flags that control what glyph information are serialized in hb_buffer_serialize_glyphs()."
                    },
                    "member": [
                        {
                            "@name": "default",
                            "@value": "0",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FLAG_DEFAULT",
                            "@glib:nick": "default",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FLAG_DEFAULT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "596",
                                "#text": "serialize glyph names, clusters and positions."
                            }
                        },
                        {
                            "@name": "no_clusters",
                            "@value": "1",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS",
                            "@glib:nick": "no-clusters",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "597",
                                "#text": "do not serialize glyph cluster."
                            }
                        },
                        {
                            "@name": "no_positions",
                            "@value": "2",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS",
                            "@glib:nick": "no-positions",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "598",
                                "#text": "do not serialize glyph position information."
                            }
                        },
                        {
                            "@name": "no_glyph_names",
                            "@value": "4",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES",
                            "@glib:nick": "no-glyph-names",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "599",
                                "#text": "do no serialize glyph name."
                            }
                        },
                        {
                            "@name": "glyph_extents",
                            "@value": "8",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS",
                            "@glib:nick": "glyph-extents",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "600",
                                "#text": "serialize glyph extents."
                            }
                        },
                        {
                            "@name": "glyph_flags",
                            "@value": "16",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FLAG_GLYPH_FLAGS",
                            "@glib:nick": "glyph-flags",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FLAG_GLYPH_FLAGS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "601",
                                "#text": "serialize glyph flags. Since: 1.5.0"
                            }
                        },
                        {
                            "@name": "no_advances",
                            "@value": "32",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FLAG_NO_ADVANCES",
                            "@glib:nick": "no-advances",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FLAG_NO_ADVANCES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "602",
                                "#text": "do not serialize glyph advances,\n glyph offsets will reflect absolute glyph positions. Since: 1.8.0"
                            }
                        },
                        {
                            "@name": "defined",
                            "@value": "63",
                            "@c:identifier": "HB_BUFFER_SERIALIZE_FLAG_DEFINED",
                            "@glib:nick": "defined",
                            "@glib:name": "HB_BUFFER_SERIALIZE_FLAG_DEFINED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "604",
                                "#text": "All currently defined flags. Since: 4.4.0"
                            }
                        }
                    ]
                },
                {
                    "@name": "glyph_flags_t",
                    "@version": "1.5.0",
                    "@glib:type-name": "hb_glyph_flags_t",
                    "@glib:get-type": "hb_gobject_glyph_flags_get_type",
                    "@c:type": "hb_glyph_flags_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "74",
                        "#text": "Flags for #hb_glyph_info_t."
                    },
                    "member": [
                        {
                            "@name": "unsafe_to_break",
                            "@value": "1",
                            "@c:identifier": "HB_GLYPH_FLAG_UNSAFE_TO_BREAK",
                            "@glib:nick": "unsafe-to-break",
                            "@glib:name": "HB_GLYPH_FLAG_UNSAFE_TO_BREAK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "76",
                                "#text": "Indicates that if input text is broken at the\n\t\t\t\t   beginning of the cluster this glyph is part of,\n\t\t\t\t   then both sides need to be re-shaped, as the\n\t\t\t\t   result might be different.\n\t\t\t\t   On the flip side, it means that when this\n\t\t\t\t   flag is not present, then it is safe to break\n\t\t\t\t   the glyph-run at the beginning of this\n\t\t\t\t   cluster, and the two sides will represent the\n\t\t\t\t   exact same result one would get if breaking\n\t\t\t\t   input text at the beginning of this cluster\n\t\t\t\t   and shaping the two sides separately.\n\t\t\t\t   This can be used to optimize paragraph\n\t\t\t\t   layout, by avoiding re-shaping of each line\n\t\t\t\t   after line-breaking."
                            }
                        },
                        {
                            "@name": "unsafe_to_concat",
                            "@value": "2",
                            "@c:identifier": "HB_GLYPH_FLAG_UNSAFE_TO_CONCAT",
                            "@glib:nick": "unsafe-to-concat",
                            "@glib:name": "HB_GLYPH_FLAG_UNSAFE_TO_CONCAT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "90",
                                "#text": "Indicates that if input text is changed on one\n\t\t\t\t   side of the beginning of the cluster this glyph\n\t\t\t\t   is part of, then the shaping results for the\n\t\t\t\t   other side might change.\n\t\t\t\t   Note that the absence of this flag will NOT by\n\t\t\t\t   itself mean that it IS safe to concat text.\n\t\t\t\t   Only two pieces of text both of which clear of\n\t\t\t\t   this flag can be concatenated safely.\n\t\t\t\t   This can be used to optimize paragraph\n\t\t\t\t   layout, by avoiding re-shaping of each line\n\t\t\t\t   after line-breaking, by limiting the\n\t\t\t\t   reshaping to a small piece around the\n\t\t\t\t   breaking positin only, even if the breaking\n\t\t\t\t   position carries the\n\t\t\t\t   #HB_GLYPH_FLAG_UNSAFE_TO_BREAK or when\n\t\t\t\t   hyphenation or other text transformation\n\t\t\t\t   happens at line-break position, in the following\n\t\t\t\t   way:\n\t\t\t\t   1. Iterate back from the line-break position\n\t\t\t\t   until the first cluster start position that is\n\t\t\t\t   NOT unsafe-to-concat, 2. shape the segment from\n\t\t\t\t   there till the end of line, 3. check whether the\n\t\t\t\t   resulting glyph-run also is clear of the\n\t\t\t\t   unsafe-to-concat at its start-of-text position;\n\t\t\t\t   if it is, just splice it into place and the line\n\t\t\t\t   is shaped; If not, move on to a position further\n\t\t\t\t   back that is clear of unsafe-to-concat and retry\n\t\t\t\t   from there, and repeat.\n\t\t\t\t   At the start of next line a similar algorithm can\n\t\t\t\t   be implemented. That is: 1. Iterate forward from\n\t\t\t\t   the line-break position until the first cluster\n\t\t\t\t   start position that is NOT unsafe-to-concat, 2.\n\t\t\t\t   shape the segment from beginning of the line to\n\t\t\t\t   that position, 3. check whether the resulting\n\t\t\t\t   glyph-run also is clear of the unsafe-to-concat\n\t\t\t\t   at its end-of-text position; if it is, just splice\n\t\t\t\t   it into place and the beginning is shaped; If not,\n\t\t\t\t   move on to a position further forward that is clear\n\t\t\t\t   of unsafe-to-concat and retry up to there, and repeat.\n\t\t\t\t   A slight complication will arise in the\n\t\t\t\t   implementation of the algorithm above,\n\t\t\t\t   because while our buffer API has a way to\n\t\t\t\t   return flags for position corresponding to\n\t\t\t\t   start-of-text, there is currently no position\n\t\t\t\t   corresponding to end-of-text.  This limitation\n\t\t\t\t   can be alleviated by shaping more text than needed\n\t\t\t\t   and looking for unsafe-to-concat flag within text\n\t\t\t\t   clusters.\n\t\t\t\t   The #HB_GLYPH_FLAG_UNSAFE_TO_BREAK flag will\n\t\t\t\t   always imply this flag.\n\t\t\t   To use this flag, you must enable the buffer flag\n\t\t\t   @HB_BUFFER_FLAG_PRODUCE_UNSAFE_TO_CONCAT during\n\t\t\t   shaping, otherwise the buffer flag will not be\n\t\t\t   reliably produced.\n\t\t\t\t   Since: 4.0.0"
                            }
                        },
                        {
                            "@name": "safe_to_insert_tatweel",
                            "@value": "4",
                            "@c:identifier": "HB_GLYPH_FLAG_SAFE_TO_INSERT_TATWEEL",
                            "@glib:nick": "safe-to-insert-tatweel",
                            "@glib:name": "HB_GLYPH_FLAG_SAFE_TO_INSERT_TATWEEL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "145",
                                "#text": "In scripts that use elongation (Arabic,\n\t\t\t\t   Mongolian, Syriac, etc.), this flag signifies\n\t\t\t\t   that it is safe to insert a U+0640 TATWEEL\n\t\t\t\t   character before this cluster for elongation.\n\t\t\t\t   This flag does not determine the\n\t\t\t\t   script-specific elongation places, but only\n\t\t\t\t   when it is safe to do the elongation without\n\t\t\t\t   interrupting text shaping.\n\t\t\t\t   Since: 5.1.0"
                            }
                        },
                        {
                            "@name": "defined",
                            "@value": "7",
                            "@c:identifier": "HB_GLYPH_FLAG_DEFINED",
                            "@glib:nick": "defined",
                            "@glib:name": "HB_GLYPH_FLAG_DEFINED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-buffer.h",
                                "@line": "154",
                                "#text": "All the currently defined flags."
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_color_palette_flags_t",
                    "@version": "2.1.0",
                    "@glib:type-name": "hb_ot_color_palette_flags_t",
                    "@glib:get-type": "hb_gobject_ot_color_palette_flags_get_type",
                    "@c:type": "hb_ot_color_palette_flags_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.h",
                        "@line": "60",
                        "#text": "Flags that describe the properties of color palette."
                    },
                    "member": [
                        {
                            "@name": "default",
                            "@value": "0",
                            "@c:identifier": "HB_OT_COLOR_PALETTE_FLAG_DEFAULT",
                            "@glib:nick": "default",
                            "@glib:name": "HB_OT_COLOR_PALETTE_FLAG_DEFAULT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.h",
                                "@line": "62",
                                "#text": "Default indicating that there is nothing special\n  to note about a color palette."
                            }
                        },
                        {
                            "@name": "usable_with_light_background",
                            "@value": "1",
                            "@c:identifier": "HB_OT_COLOR_PALETTE_FLAG_USABLE_WITH_LIGHT_BACKGROUND",
                            "@glib:nick": "usable-with-light-background",
                            "@glib:name": "HB_OT_COLOR_PALETTE_FLAG_USABLE_WITH_LIGHT_BACKGROUND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.h",
                                "@line": "64",
                                "#text": "Flag indicating that the color\n  palette is appropriate to use when displaying the font on a light background such as white."
                            }
                        },
                        {
                            "@name": "usable_with_dark_background",
                            "@value": "2",
                            "@c:identifier": "HB_OT_COLOR_PALETTE_FLAG_USABLE_WITH_DARK_BACKGROUND",
                            "@glib:nick": "usable-with-dark-background",
                            "@glib:name": "HB_OT_COLOR_PALETTE_FLAG_USABLE_WITH_DARK_BACKGROUND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-ot-color.h",
                                "@line": "66",
                                "#text": "Flag indicating that the color\n  palette is appropriate to use when displaying the font on a dark background such as black."
                            }
                        }
                    ]
                },
                {
                    "@name": "ot_math_glyph_part_flags_t",
                    "@version": "1.3.3",
                    "@glib:type-name": "hb_ot_math_glyph_part_flags_t",
                    "@glib:get-type": "hb_gobject_ot_math_glyph_part_flags_get_type",
                    "@c:type": "hb_ot_math_glyph_part_flags_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.h",
                        "@line": "239",
                        "#text": "Flags for math glyph parts."
                    },
                    "member": {
                        "@name": "extender",
                        "@value": "1",
                        "@c:identifier": "HB_OT_MATH_GLYPH_PART_FLAG_EXTENDER",
                        "@glib:nick": "extender",
                        "@glib:name": "HB_OT_MATH_GLYPH_PART_FLAG_EXTENDER",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-math.h",
                            "@line": "241",
                            "#text": "This is an extender glyph part that\ncan be repeated to reach the desired length."
                        }
                    }
                },
                {
                    "@name": "ot_var_axis_flags_t",
                    "@version": "2.2.0",
                    "@glib:type-name": "hb_ot_var_axis_flags_t",
                    "@glib:get-type": "hb_gobject_ot_var_axis_flags_get_type",
                    "@c:type": "hb_ot_var_axis_flags_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.h",
                        "@line": "91",
                        "#text": "Flags for #hb_ot_var_axis_info_t."
                    },
                    "member": {
                        "@name": "hidden",
                        "@value": "1",
                        "@c:identifier": "HB_OT_VAR_AXIS_FLAG_HIDDEN",
                        "@glib:nick": "hidden",
                        "@glib:name": "HB_OT_VAR_AXIS_FLAG_HIDDEN",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-ot-var.h",
                            "@line": "93",
                            "#text": "The axis should not be exposed directly in user interfaces."
                        }
                    }
                }
            ],
            "callback": [
                {
                    "@name": "buffer_message_func_t",
                    "@c:type": "hb_buffer_message_func_t",
                    "@version": "1.1.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.h",
                        "@line": "769",
                        "#text": "A callback method for #hb_buffer_t. The method gets called with the\n#hb_buffer_t it was set on, the #hb_font_t the buffer is shaped with and a\nmessage describing what step of the shaping process will be performed.\nReturning `false` from this method will skip this shaping step and move to\nthe next one."
                    },
                    "source-position": {
                        "@filename": "hb-buffer.h",
                        "@line": "786"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-buffer.h",
                            "@line": "782",
                            "#text": "`true` to perform the shaping step, `false` to skip it."
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.h",
                                    "@line": "771",
                                    "#text": "An #hb_buffer_t to work upon"
                                },
                                "type": {
                                    "@name": "buffer_t",
                                    "@c:type": "hb_buffer_t*"
                                }
                            },
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.h",
                                    "@line": "772",
                                    "#text": "The #hb_font_t the @buffer is shaped with"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "message",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.h",
                                    "@line": "773",
                                    "#text": "`NULL`-terminated message passed to the function"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-buffer.h",
                                    "@line": "774",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "destroy_func_t",
                    "@c:type": "hb_destroy_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.h",
                        "@line": "775",
                        "#text": "A virtual method for destroy user-data callbacks."
                    },
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "782"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "user_data",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "@closure": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "hb-common.h",
                                "@line": "777",
                                "#text": "the data to be destroyed"
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "void*"
                            }
                        }
                    }
                },
                {
                    "@name": "draw_close_path_func_t",
                    "@c:type": "hb_draw_close_path_func_t",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "181",
                        "#text": "A virtual method for the #hb_draw_funcs_t to perform a \"close-path\" draw\noperation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "194"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "183",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "184",
                                    "#text": "The data accompanying the draw functions"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "185",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "186",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_cubic_to_func_t",
                    "@c:type": "hb_draw_cubic_to_func_t",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "155",
                        "#text": "A virtual method for the #hb_draw_funcs_t to perform a \"cubic-to\" draw\noperation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "174"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "157",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "158",
                                    "#text": "The data accompanying the draw functions"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "159",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "control1_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "160",
                                    "#text": "X component of first control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "control1_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "161",
                                    "#text": "Y component of first control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "control2_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "162",
                                    "#text": "X component of second control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "control2_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "163",
                                    "#text": "Y component of second control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "164",
                                    "#text": "X component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "165",
                                    "#text": "Y component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "9",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "166",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_line_to_func_t",
                    "@c:type": "hb_draw_line_to_func_t",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "112",
                        "#text": "A virtual method for the #hb_draw_funcs_t to perform a \"line-to\" draw\noperation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "127"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "114",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "115",
                                    "#text": "The data accompanying the draw functions"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "116",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "to_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "117",
                                    "#text": "X component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "118",
                                    "#text": "Y component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "119",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_move_to_func_t",
                    "@c:type": "hb_draw_move_to_func_t",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "92",
                        "#text": "A virtual method for the #hb_draw_funcs_t to perform a \"move-to\" draw\noperation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "107"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "94",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "95",
                                    "#text": "The data accompanying the draw functions"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "96",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "to_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "97",
                                    "#text": "X component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "98",
                                    "#text": "Y component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "99",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "draw_quadratic_to_func_t",
                    "@c:type": "hb_draw_quadratic_to_func_t",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.h",
                        "@line": "132",
                        "#text": "A virtual method for the #hb_draw_funcs_t to perform a \"quadratic-to\" draw\noperation."
                    },
                    "source-position": {
                        "@filename": "hb-draw.h",
                        "@line": "149"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "dfuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "134",
                                    "#text": "draw functions object"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "135",
                                    "#text": "The data accompanying the draw functions"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "st",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "136",
                                    "#text": "current draw state"
                                },
                                "type": {
                                    "@name": "draw_state_t",
                                    "@c:type": "hb_draw_state_t*"
                                }
                            },
                            {
                                "@name": "control_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "137",
                                    "#text": "X component of control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "control_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "138",
                                    "#text": "Y component of control point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "139",
                                    "#text": "X component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "to_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "140",
                                    "#text": "Y component of target point"
                                },
                                "type": {
                                    "@name": "gfloat",
                                    "@c:type": "float"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "7",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-draw.h",
                                    "@line": "141",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_font_extents_func_t",
                    "@c:type": "hb_font_get_font_extents_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "149",
                        "#text": "This method should retrieve the extents for a font."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "159"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "151",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "152",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "extents",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "153",
                                    "#text": "The font extents retrieved"
                                },
                                "type": {
                                    "@name": "font_extents_t",
                                    "@c:type": "hb_font_extents_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "154",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_advance_func_t",
                    "@c:type": "hb_font_get_glyph_advance_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "261",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the advance for a specified glyph. The\nmethod must return an #hb_position_t."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "276"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "273",
                            "#text": "The advance of @glyph within @font"
                        },
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "263",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "264",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "265",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "266",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_advances_func_t",
                    "@c:type": "hb_font_get_glyph_advances_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "304",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the advances for a sequence of glyphs."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "320"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "306",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "307",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "308",
                                    "#text": "The number of glyph IDs in the sequence queried"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "first_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "309",
                                    "#text": "The first glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "const hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "glyph_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "310",
                                    "#text": "The stride between successive glyph IDs"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            },
                            {
                                "@name": "first_advance",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "311",
                                    "#text": "The first advance retrieved"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "advance_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "312",
                                    "#text": "The stride between successive advances"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "7",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "313",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_contour_point_func_t",
                    "@c:type": "hb_font_get_glyph_contour_point_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "445",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the (X,Y) coordinates (in font units) for a\nspecified contour point in a glyph. Each coordinate must be returned as\nan #hb_position_t output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "464"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "461",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "447",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "448",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "449",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "point_index",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "450",
                                    "#text": "The contour-point index to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "451",
                                    "#text": "The X value retrieved for the contour point"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "452",
                                    "#text": "The Y value retrieved for the contour point"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "6",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "453",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_extents_func_t",
                    "@c:type": "hb_font_get_glyph_extents_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "424",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the extents for a specified glyph. Extents must be\nreturned in an #hb_glyph_extents output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "440"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "437",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "426",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "427",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "428",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "extents",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "429",
                                    "#text": "The #hb_glyph_extents_t retrieved"
                                },
                                "type": {
                                    "@name": "glyph_extents_t",
                                    "@c:type": "hb_glyph_extents_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "430",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_from_name_func_t",
                    "@c:type": "hb_font_get_glyph_from_name_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "492",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the glyph ID that corresponds to a glyph-name\nstring."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "509"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "506",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "494",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "495",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "496",
                                    "#text": "The name string to query"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "497",
                                    "#text": "The length of the name queried"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "498",
                                    "#text": "The glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "499",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_func_t",
                    "@c:type": "hb_font_get_glyph_func_t",
                    "@deprecated": "1",
                    "@deprecated-version": "1.2.3",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "82",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the glyph ID for a specified Unicode code point\nfont, with an optional variation selector."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "100"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-deprecated.h",
                            "@line": "96",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "84",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "85",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "86",
                                    "#text": "The Unicode code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "variation_selector",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "87",
                                    "#text": "The  variation-selector code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "88",
                                    "#text": "The glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "89",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_kerning_func_t",
                    "@c:type": "hb_font_get_glyph_kerning_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "397",
                        "#text": "This method should retrieve the kerning-adjustment value for a glyph-pair in\nthe specified font, for horizontal text segments."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "409"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "position_t",
                            "@c:type": "hb_position_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "399",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "400",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "first_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "401",
                                    "#text": "The glyph ID of the first glyph in the glyph pair"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "second_glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "402",
                                    "#text": "The glyph ID of the second glyph in the glyph pair"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "403",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_name_func_t",
                    "@c:type": "hb_font_get_glyph_name_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "470",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the glyph name that corresponds to a\nglyph ID. The name should be returned in a string output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "487"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "484",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "472",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "473",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "474",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "name",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "475",
                                    "#text": "Name string retrieved for the glyph ID"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "char*",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char"
                                    }
                                }
                            },
                            {
                                "@name": "size",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "476",
                                    "#text": "Length of the glyph-name string retrieved"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "477",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_origin_func_t",
                    "@c:type": "hb_font_get_glyph_origin_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "350",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the (X,Y) coordinates (in font units) of the\norigin for a glyph. Each coordinate must be returned in an #hb_position_t\noutput parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "368"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "365",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "352",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "353",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "354",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "355",
                                    "#text": "The X coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "356",
                                    "#text": "The Y coordinate of the origin"
                                },
                                "type": {
                                    "@name": "position_t",
                                    "@c:type": "hb_position_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "357",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_glyph_shape_func_t",
                    "@c:type": "hb_font_get_glyph_shape_func_t",
                    "@version": "4.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "514",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "528"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "516",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "517",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "518",
                                    "#text": "The glyph ID to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "draw_funcs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "519",
                                    "#text": "The draw functions to send the shape data to"
                                },
                                "type": {
                                    "@name": "draw_funcs_t",
                                    "@c:type": "hb_draw_funcs_t*"
                                }
                            },
                            {
                                "@name": "draw_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "520",
                                    "#text": "The data accompanying the draw functions"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "521",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_nominal_glyph_func_t",
                    "@c:type": "hb_font_get_nominal_glyph_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "188",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the nominal glyph ID for a specified Unicode code\npoint. Glyph IDs must be returned in a #hb_codepoint_t output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "204"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "201",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "190",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "191",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "192",
                                    "#text": "The Unicode code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "193",
                                    "#text": "The glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "194",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_nominal_glyphs_func_t",
                    "@c:type": "hb_font_get_nominal_glyphs_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "233",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the nominal glyph IDs for a sequence of\nUnicode code points. Glyph IDs must be returned in a #hb_codepoint_t\noutput parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "253"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "250",
                            "#text": "the number of code points processed"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "235",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "236",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "237",
                                    "#text": "number of code points to query"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "first_unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "238",
                                    "#text": "The first Unicode code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "const hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "unicode_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "239",
                                    "#text": "The stride between successive code points"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "first_glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "240",
                                    "#text": "The first glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "glyph_stride",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "241",
                                    "#text": "The stride between successive glyph IDs"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "unsigned int"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "7",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "242",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "font_get_variation_glyph_func_t",
                    "@c:type": "hb_font_get_variation_glyph_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.h",
                        "@line": "209",
                        "#text": "A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n\nThis method should retrieve the glyph ID for a specified Unicode code point\nfollowed by a specified Variation Selector code point. Glyph IDs must be\nreturned in a #hb_codepoint_t output parameter."
                    },
                    "source-position": {
                        "@filename": "hb-font.h",
                        "@line": "227"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-font.h",
                            "@line": "224",
                            "#text": "`true` if data found, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "font",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "211",
                                    "#text": "#hb_font_t to work upon"
                                },
                                "type": {
                                    "@name": "font_t",
                                    "@c:type": "hb_font_t*"
                                }
                            },
                            {
                                "@name": "font_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "212",
                                    "#text": "@font user data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "213",
                                    "#text": "The Unicode code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "variation_selector",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "214",
                                    "#text": "The  variation-selector code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "glyph",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "215",
                                    "#text": "The glyph ID retrieved"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-font.h",
                                    "@line": "216",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "reference_table_func_t",
                    "@c:type": "hb_reference_table_func_t",
                    "@version": "0.9.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.h",
                        "@line": "61",
                        "#text": "Callback function for hb_face_create_for_tables()."
                    },
                    "source-position": {
                        "@filename": "hb-face.h",
                        "@line": "74"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-face.h",
                            "@line": "69",
                            "#text": "A pointer to the @tag table within @face"
                        },
                        "type": {
                            "@name": "blob_t",
                            "@c:type": "hb_blob_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "face",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.h",
                                    "@line": "63",
                                    "#text": "an #hb_face_t to reference table for"
                                },
                                "type": {
                                    "@name": "face_t",
                                    "@c:type": "hb_face_t*"
                                }
                            },
                            {
                                "@name": "tag",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.h",
                                    "@line": "64",
                                    "#text": "the tag of the table to reference"
                                },
                                "type": {
                                    "@name": "tag_t",
                                    "@c:type": "hb_tag_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-face.h",
                                    "@line": "65",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_combining_class_func_t",
                    "@c:type": "hb_unicode_combining_class_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "340",
                        "#text": "A virtual method for the #hb_unicode_funcs_t structure.\n\nThis method should retrieve the Canonical Combining Class (ccc)\nproperty for a specified Unicode code point."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "354"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "351",
                            "#text": "The #hb_unicode_combining_class_t of @unicode"
                        },
                        "type": {
                            "@name": "unicode_combining_class_t",
                            "@c:type": "hb_unicode_combining_class_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "342",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "343",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "344",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_compose_func_t",
                    "@c:type": "hb_unicode_compose_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "416",
                        "#text": "A virtual method for the #hb_unicode_funcs_t structure.\n\nThis method should compose a sequence of two input Unicode code\npoints by canonical equivalence, returning the composed code\npoint in a #hb_codepoint_t output parameter (if successful).\nThe method must return an #hb_bool_t indicating the success\nof the composition."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "435"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "432",
                            "#text": "`true` is @a,@b composed, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "418",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "a",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "419",
                                    "#text": "The first code point to compose"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "b",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "420",
                                    "#text": "The second code point to compose"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "ab",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "421",
                                    "#text": "The composed code point"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "422",
                                    "#text": "user data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_decompose_compatibility_func_t",
                    "@c:type": "hb_unicode_decompose_compatibility_func_t",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "156",
                        "#text": "Fully decompose @u to its Unicode compatibility decomposition. The codepoints of the decomposition will be written to @decomposed.\nThe complete length of the decomposition will be returned.\n\nIf @u has no compatibility decomposition, zero should be returned.\n\nThe Unicode standard guarantees that a buffer of length #HB_UNICODE_MAX_DECOMPOSITION_LEN codepoints will always be sufficient for any\ncompatibility decomposition plus an terminating value of 0.  Consequently, @decompose must be allocated by the caller to be at least this length.  Implementations\nof this function type must ensure that they do not write past the provided array."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "176"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-deprecated.h",
                            "@line": "172",
                            "#text": "number of codepoints in the full compatibility decomposition of @u, or 0 if no decomposition available."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "158",
                                    "#text": "a Unicode function structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "u",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "159",
                                    "#text": "codepoint to decompose"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "decomposed",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "160",
                                    "#text": "address of codepoint array (of length #HB_UNICODE_MAX_DECOMPOSITION_LEN) to write decomposition into"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "161",
                                    "#text": "user data pointer as passed to hb_unicode_funcs_set_decompose_compatibility_func()"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_decompose_func_t",
                    "@c:type": "hb_unicode_decompose_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "441",
                        "#text": "A virtual method for the #hb_unicode_funcs_t structure.\n\nThis method should decompose an input Unicode code point,\nreturning the two decomposed code points in #hb_codepoint_t\noutput parameters (if successful). The method must return an\n#hb_bool_t indicating the success of the composition."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "459"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "456",
                            "#text": "`true` if @ab decomposed, `false` otherwise"
                        },
                        "type": {
                            "@name": "bool_t",
                            "@c:type": "hb_bool_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "443",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "ab",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "444",
                                    "#text": "The code point to decompose"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "a",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "445",
                                    "#text": "The first decomposed code point"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "b",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "446",
                                    "#text": "The second decomposed code point"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "447",
                                    "#text": "user data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_eastasian_width_func_t",
                    "@c:type": "hb_unicode_eastasian_width_func_t",
                    "@deprecated": "1",
                    "@deprecated-version": "2.0.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "110",
                        "#text": "A virtual method for the #hb_unicode_funcs_t structure."
                    },
                    "source-position": {
                        "@filename": "hb-deprecated.h",
                        "@line": "120"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "guint",
                            "@c:type": "unsigned int"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "112",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "113",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-deprecated.h",
                                    "@line": "114",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_general_category_func_t",
                    "@c:type": "hb_unicode_general_category_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "358",
                        "#text": "A virtual method for the #hb_unicode_funcs_t structure.\n\nThis method should retrieve the General Category property for\na specified Unicode code point."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "372"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "369",
                            "#text": "The #hb_unicode_general_category_t of @unicode"
                        },
                        "type": {
                            "@name": "unicode_general_category_t",
                            "@c:type": "hb_unicode_general_category_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "360",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "361",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "362",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_mirroring_func_t",
                    "@c:type": "hb_unicode_mirroring_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "376",
                        "#text": "A virtual method for the #hb_unicode_funcs_t structure.\n\nThis method should retrieve the Bi-Directional Mirroring Glyph\ncode point for a specified Unicode code point.\n\n<note>Note: If a code point does not have a specified\nBi-Directional Mirroring Glyph defined, the method should\nreturn the original code point.</note>"
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "394"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "391",
                            "#text": "The #hb_codepoint_t of the Mirroring Glyph for @unicode"
                        },
                        "type": {
                            "@name": "codepoint_t",
                            "@c:type": "hb_codepoint_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "378",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "379",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "380",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_script_func_t",
                    "@c:type": "hb_unicode_script_func_t",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.h",
                        "@line": "398",
                        "#text": "A virtual method for the #hb_unicode_funcs_t structure.\n\nThis method should retrieve the Script property for a\nspecified Unicode code point."
                    },
                    "source-position": {
                        "@filename": "hb-unicode.h",
                        "@line": "412"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "hb-unicode.h",
                            "@line": "409",
                            "#text": "The #hb_script_t of @unicode"
                        },
                        "type": {
                            "@name": "script_t",
                            "@c:type": "hb_script_t"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "ufuncs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "400",
                                    "#text": "A Unicode-functions structure"
                                },
                                "type": {
                                    "@name": "unicode_funcs_t",
                                    "@c:type": "hb_unicode_funcs_t*"
                                }
                            },
                            {
                                "@name": "unicode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "401",
                                    "#text": "The code point to query"
                                },
                                "type": {
                                    "@name": "codepoint_t",
                                    "@c:type": "hb_codepoint_t"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "hb-unicode.h",
                                    "@line": "402",
                                    "#text": "User data pointer passed by the caller"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                }
            ],
            "docsection": [
                {
                    "@name": "hb-aat-layout",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-aat-layout.cc",
                        "@line": "77",
                        "#text": "Functions for querying AAT Layout features in the font face.\n\nHarfBuzz supports all of the AAT tables used to implement shaping. Other\nAAT tables and their associated features are not supported."
                    }
                },
                {
                    "@name": "hb-blob",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-blob.cc",
                        "@line": "39",
                        "#text": "Blobs wrap a chunk of binary data to handle lifecycle management of data\nwhile it is passed between client and HarfBuzz.  Blobs are primarily used\nto create font faces, but also to access font face tables, as well as\npass around other binary data."
                    }
                },
                {
                    "@name": "hb-buffer",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-buffer.cc",
                        "@line": "34",
                        "#text": "Buffers serve a dual role in HarfBuzz; before shaping, they hold\nthe input characters that are passed to hb_shape(), and after\nshaping they hold the output glyphs."
                    }
                },
                {
                    "@name": "hb-common",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "59",
                        "#text": "Common data types used across HarfBuzz are defined here."
                    }
                },
                {
                    "@name": "hb-deprecated",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-deprecated.h",
                        "@line": "40",
                        "#text": "These API have been deprecated in favor of newer API, or because they\nwere deemed unnecessary."
                    }
                },
                {
                    "@name": "hb-draw",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-draw.cc",
                        "@line": "31",
                        "#text": "Functions for drawing (extracting) glyph shapes."
                    }
                },
                {
                    "@name": "hb-face",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-face.cc",
                        "@line": "39",
                        "#text": "A font face is an object that represents a single face from within a\nfont family.\n\nMore precisely, a font face represents a single face in a binary font file.\nFont faces are typically built from a binary blob and a face index.\nFont faces are used to create fonts."
                    }
                },
                {
                    "@name": "hb-font",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-font.cc",
                        "@line": "41",
                        "#text": "Functions for working with font objects.\n\nA font object represents a font face at a specific size and with\ncertain other parameters (pixels-per-em, points-per-em, variation\nsettings) specified. Font objects are created from font face\nobjects, and are used as input to hb_shape(), among other things.\n\nClient programs can optionally pass in their own functions that\nimplement the basic, lower-level queries of font objects. This set\nof font functions is defined by the virtual methods in\n#hb_font_funcs_t.\n\nHarfBuzz provides a built-in set of lightweight default\nfunctions for each method in #hb_font_funcs_t."
                    }
                },
                {
                    "@name": "hb-ft",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ft.cc",
                        "@line": "49",
                        "#text": "Functions for using HarfBuzz with the FreeType library.\n\nHarfBuzz supports using FreeType to provide face and\nfont data.\n\n<note>Note that FreeType is not thread-safe, therefore these\nfunctions are not thread-safe either.</note>"
                    }
                },
                {
                    "@name": "hb-glib",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-glib.cc",
                        "@line": "38",
                        "#text": "Functions for using HarfBuzz with the GLib library.\n\nHarfBuzz supports using GLib to provide Unicode data, by attaching\nGLib functions to the virtual methods in a #hb_unicode_funcs_t function\nstructure."
                    }
                },
                {
                    "@name": "hb-gobject",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-gobject-structs.cc",
                        "@line": "32",
                        "#text": "Support for using HarfBuzz with the GObject library to provide\ntype data.\n\nThe types and functions listed here are solely a linkage between\nHarfBuzz's public data types and the GTypes used by the GObject framework.\nHarfBuzz uses GObject introspection to generate its Python bindings\n(and potentially other language bindings); client programs should never need\nto access the GObject-integration mechanics.\n\nFor client programs using the GNOME and GTK software stack, please see the\nGLib and FreeType integration pages."
                    }
                },
                {
                    "@name": "hb-graphite2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-graphite2.cc",
                        "@line": "42",
                        "#text": "Functions for using HarfBuzz with fonts that include Graphite features.\n\nFor Graphite features to work, you must be sure that HarfBuzz was compiled\nwith the `graphite2` shaping engine enabled. Currently, the default is to\nnot enable `graphite2` shaping."
                    }
                },
                {
                    "@name": "hb-map",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-map.cc",
                        "@line": "30",
                        "#text": "Map objects are integer-to-integer hash-maps.  Currently they are\nnot used in the HarfBuzz public API, but are provided for client's\nuse if desired."
                    }
                },
                {
                    "@name": "hb-ot-color",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-color.cc",
                        "@line": "41",
                        "#text": "Functions for fetching color-font information from OpenType font faces.\n\nHarfBuzz supports `COLR`/`CPAL`, `sbix`, `CBDT`, and `SVG` color fonts."
                    }
                },
                {
                    "@name": "hb-ot-font",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-font.cc",
                        "@line": "51",
                        "#text": "Functions for using OpenType fonts with hb_shape().  Note that fonts returned\nby hb_font_create() default to using these functions, so most clients would\nnever need to call these functions directly."
                    }
                },
                {
                    "@name": "hb-ot-layout",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-layout.cc",
                        "@line": "60",
                        "#text": "Functions for querying OpenType Layout features in the font face."
                    }
                },
                {
                    "@name": "hb-ot-math",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-math.cc",
                        "@line": "34",
                        "#text": "Functions for fetching mathematics layout data from OpenType fonts.\n\nHarfBuzz itself does not implement a math layout solution. The\nfunctions and types provided can be used by client programs to access\nthe font data necessary for typesetting OpenType Math layout."
                    }
                },
                {
                    "@name": "hb-ot-meta",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-meta.cc",
                        "@line": "31",
                        "#text": "Functions for fetching metadata from fonts."
                    }
                },
                {
                    "@name": "hb-ot-metrics",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-metrics.cc",
                        "@line": "36",
                        "#text": "Functions for fetching metrics from fonts."
                    }
                },
                {
                    "@name": "hb-ot-name",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-name.cc",
                        "@line": "36",
                        "#text": "Functions for fetching name strings from OpenType fonts."
                    }
                },
                {
                    "@name": "hb-ot-shape",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-shape.cc",
                        "@line": "64",
                        "#text": "Support functions for OpenType shaping related queries."
                    }
                },
                {
                    "@name": "hb-ot-var",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-ot-var.cc",
                        "@line": "38",
                        "#text": "Functions for fetching information about OpenType Variable Fonts."
                    }
                },
                {
                    "@name": "hb-set",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-set.cc",
                        "@line": "30",
                        "#text": "Set objects represent a mathematical set of integer values.  They are\nused in non-shaping APIs to query certain sets of characters or glyphs,\nor other integer values."
                    }
                },
                {
                    "@name": "hb-shape",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape.cc",
                        "@line": "38",
                        "#text": "Shaping is the central operation of HarfBuzz. Shaping operates on buffers,\nwhich are sequences of Unicode characters that use the same font and have\nthe same text direction, script, and language. After shaping the buffer\ncontains the output glyphs and their positions."
                    }
                },
                {
                    "@name": "hb-shape-plan",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-shape-plan.cc",
                        "@line": "34",
                        "#text": "Shape plans are an internal mechanism. Each plan contains state\ndescribing how HarfBuzz will shape a particular text segment, based on\nthe combination of segment properties and the capabilities in the\nfont face in use.\n\nShape plans are not used for shaping directly, but can be queried to\naccess certain information about how shaping will perform, given a set\nof specific input parameters (script, language, direction, features,\netc.).\n\nMost client programs will not need to deal with shape plans directly."
                    }
                },
                {
                    "@name": "hb-style",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-style.cc",
                        "@line": "37",
                        "#text": "Functions for fetching style information from fonts."
                    }
                },
                {
                    "@name": "hb-unicode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-unicode.cc",
                        "@line": "36",
                        "#text": "Unicode functions are used to access Unicode character properties.\nWith these functions, client programs can query various properties from\nthe Unicode Character Database for any code point, such as General\nCategory (gc), Script (sc), Canonical Combining Class (ccc), etc.\n\nClient programs can optionally pass in their own Unicode functions\nthat implement the same queries. The set of functions available is\ndefined by the virtual methods in #hb_unicode_funcs_t.\n\nHarfBuzz provides built-in default functions for each method in\n#hb_unicode_funcs_t."
                    }
                },
                {
                    "@name": "hb-version",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "hb-common.cc",
                        "@line": "672",
                        "#text": "These functions and macros allow accessing version of the HarfBuzz\nlibrary used at compile- as well as run-time, and to direct code\nconditionally based on those versions, again, at compile- or run-time."
                    }
                }
            ],
            "union": [
                {
                    "@name": "var_int_t",
                    "@c:type": "hb_var_int_t",
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "131"
                    },
                    "field": [
                        {
                            "@name": "u32",
                            "@writable": "1",
                            "type": {
                                "@name": "guint32",
                                "@c:type": "uint32_t"
                            }
                        },
                        {
                            "@name": "i32",
                            "@writable": "1",
                            "type": {
                                "@name": "gint32",
                                "@c:type": "int32_t"
                            }
                        },
                        {
                            "@name": "u16",
                            "@writable": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "2",
                                "type": {
                                    "@name": "guint16",
                                    "@c:type": "uint16_t"
                                }
                            }
                        },
                        {
                            "@name": "i16",
                            "@writable": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "2",
                                "type": {
                                    "@name": "gint16",
                                    "@c:type": "int16_t"
                                }
                            }
                        },
                        {
                            "@name": "u8",
                            "@writable": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "4",
                                "type": {
                                    "@name": "guint8",
                                    "@c:type": "uint8_t"
                                }
                            }
                        },
                        {
                            "@name": "i8",
                            "@writable": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "4",
                                "type": {
                                    "@name": "gint8",
                                    "@c:type": "int8_t"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "var_num_t",
                    "@c:type": "hb_var_num_t",
                    "source-position": {
                        "@filename": "hb-common.h",
                        "@line": "141"
                    },
                    "field": [
                        {
                            "@name": "f",
                            "@writable": "1",
                            "type": {
                                "@name": "gfloat",
                                "@c:type": "float"
                            }
                        },
                        {
                            "@name": "u32",
                            "@writable": "1",
                            "type": {
                                "@name": "guint32",
                                "@c:type": "uint32_t"
                            }
                        },
                        {
                            "@name": "i32",
                            "@writable": "1",
                            "type": {
                                "@name": "gint32",
                                "@c:type": "int32_t"
                            }
                        },
                        {
                            "@name": "u16",
                            "@writable": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "2",
                                "type": {
                                    "@name": "guint16",
                                    "@c:type": "uint16_t"
                                }
                            }
                        },
                        {
                            "@name": "i16",
                            "@writable": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "2",
                                "type": {
                                    "@name": "gint16",
                                    "@c:type": "int16_t"
                                }
                            }
                        },
                        {
                            "@name": "u8",
                            "@writable": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "4",
                                "type": {
                                    "@name": "guint8",
                                    "@c:type": "uint8_t"
                                }
                            }
                        },
                        {
                            "@name": "i8",
                            "@writable": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "4",
                                "type": {
                                    "@name": "gint8",
                                    "@c:type": "int8_t"
                                }
                            }
                        }
                    ]
                }
            ]
        }
    }
}