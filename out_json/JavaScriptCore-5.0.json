{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": {
            "@name": "GObject",
            "@version": "2.0"
        },
        "package": {
            "@name": "javascriptcoregtk-5.0"
        },
        "c:include": {
            "@name": "jsc/jsc.h"
        },
        "namespace": {
            "@name": "JavaScriptCore",
            "@version": "5.0",
            "@shared-library": "libjavascriptcoregtk-5.0.so.0",
            "@c:identifier-prefixes": "JSC",
            "@c:symbol-prefixes": "jsc",
            "function-macro": [
                {
                    "@name": "CHECK_VERSION",
                    "@c:identifier": "JSC_CHECK_VERSION",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "58",
                        "#text": "Check the version of JSC header files at compile time."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "69"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                                    "@line": "60",
                                    "#text": "major version (e.g. 1 for version 1.2.5)"
                                }
                            },
                            {
                                "@name": "minor",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                                    "@line": "61",
                                    "#text": "minor version (e.g. 2 for version 1.2.5)"
                                }
                            },
                            {
                                "@name": "micro",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                                    "@line": "62",
                                    "#text": "micro version (e.g. 5 for version 1.2.5)"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "CLASS",
                    "@c:identifier": "JSC_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "CONTEXT",
                    "@c:identifier": "JSC_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "CONTEXT_CLASS",
                    "@c:identifier": "JSC_CONTEXT_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "CONTEXT_GET_CLASS",
                    "@c:identifier": "JSC_CONTEXT_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "EXCEPTION",
                    "@c:identifier": "JSC_EXCEPTION",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "EXCEPTION_CLASS",
                    "@c:identifier": "JSC_EXCEPTION_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "EXCEPTION_GET_CLASS",
                    "@c:identifier": "JSC_EXCEPTION_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_CLASS",
                    "@c:identifier": "JSC_IS_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_CONTEXT",
                    "@c:identifier": "JSC_IS_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_CONTEXT_CLASS",
                    "@c:identifier": "JSC_IS_CONTEXT_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_EXCEPTION",
                    "@c:identifier": "JSC_IS_EXCEPTION",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_EXCEPTION_CLASS",
                    "@c:identifier": "JSC_IS_EXCEPTION_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_VALUE",
                    "@c:identifier": "JSC_IS_VALUE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_VALUE_CLASS",
                    "@c:identifier": "JSC_IS_VALUE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_VIRTUAL_MACHINE",
                    "@c:identifier": "JSC_IS_VIRTUAL_MACHINE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_VIRTUAL_MACHINE_CLASS",
                    "@c:identifier": "JSC_IS_VIRTUAL_MACHINE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_WEAK_VALUE",
                    "@c:identifier": "JSC_IS_WEAK_VALUE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_WEAK_VALUE_CLASS",
                    "@c:identifier": "JSC_IS_WEAK_VALUE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "VALUE",
                    "@c:identifier": "JSC_VALUE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "VALUE_CLASS",
                    "@c:identifier": "JSC_VALUE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "VALUE_GET_CLASS",
                    "@c:identifier": "JSC_VALUE_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "VIRTUAL_MACHINE",
                    "@c:identifier": "JSC_VIRTUAL_MACHINE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "VIRTUAL_MACHINE_CLASS",
                    "@c:identifier": "JSC_VIRTUAL_MACHINE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "VIRTUAL_MACHINE_GET_CLASS",
                    "@c:identifier": "JSC_VIRTUAL_MACHINE_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "WEAK_VALUE",
                    "@c:identifier": "JSC_WEAK_VALUE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "WEAK_VALUE_CLASS",
                    "@c:identifier": "JSC_WEAK_VALUE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "WEAK_VALUE_GET_CLASS",
                    "@c:identifier": "JSC_WEAK_VALUE_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                }
            ],
            "enumeration": [
                {
                    "@name": "CheckSyntaxMode",
                    "@c:type": "JSCCheckSyntaxMode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                        "@line": "925",
                        "#text": "Enum values to specify a mode to check for syntax errors in jsc_context_check_syntax()."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "54"
                    },
                    "member": [
                        {
                            "@name": "script",
                            "@value": "0",
                            "@c:identifier": "JSC_CHECK_SYNTAX_MODE_SCRIPT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "927",
                                "#text": "mode to check syntax of a script"
                            }
                        },
                        {
                            "@name": "module",
                            "@value": "1",
                            "@c:identifier": "JSC_CHECK_SYNTAX_MODE_MODULE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "928",
                                "#text": "mode to check syntax of a module"
                            }
                        }
                    ]
                },
                {
                    "@name": "CheckSyntaxResult",
                    "@c:type": "JSCCheckSyntaxResult",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                        "@line": "933",
                        "#text": "Enum values to specify the result of jsc_context_check_syntax()."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "63"
                    },
                    "member": [
                        {
                            "@name": "success",
                            "@value": "0",
                            "@c:identifier": "JSC_CHECK_SYNTAX_RESULT_SUCCESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "935",
                                "#text": "no errors"
                            }
                        },
                        {
                            "@name": "recoverable_error",
                            "@value": "1",
                            "@c:identifier": "JSC_CHECK_SYNTAX_RESULT_RECOVERABLE_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "936",
                                "#text": "recoverable syntax error"
                            }
                        },
                        {
                            "@name": "irrecoverable_error",
                            "@value": "2",
                            "@c:identifier": "JSC_CHECK_SYNTAX_RESULT_IRRECOVERABLE_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "937",
                                "#text": "irrecoverable syntax error"
                            }
                        },
                        {
                            "@name": "unterminated_literal_error",
                            "@value": "3",
                            "@c:identifier": "JSC_CHECK_SYNTAX_RESULT_UNTERMINATED_LITERAL_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "938",
                                "#text": "unterminated literal error"
                            }
                        },
                        {
                            "@name": "out_of_memory_error",
                            "@value": "4",
                            "@c:identifier": "JSC_CHECK_SYNTAX_RESULT_OUT_OF_MEMORY_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "939",
                                "#text": "out of memory error"
                            }
                        },
                        {
                            "@name": "stack_overflow_error",
                            "@value": "5",
                            "@c:identifier": "JSC_CHECK_SYNTAX_RESULT_STACK_OVERFLOW_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "940",
                                "#text": "stack overflow error"
                            }
                        }
                    ]
                },
                {
                    "@name": "OptionType",
                    "@version": "2.24",
                    "@c:type": "JSCOptionType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "591",
                        "#text": "Enum values for options types."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "94"
                    },
                    "member": [
                        {
                            "@name": "boolean",
                            "@value": "0",
                            "@c:identifier": "JSC_OPTION_BOOLEAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                "@line": "593",
                                "#text": "A #gboolean option type."
                            }
                        },
                        {
                            "@name": "int",
                            "@value": "1",
                            "@c:identifier": "JSC_OPTION_INT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                "@line": "594",
                                "#text": "A #gint option type."
                            }
                        },
                        {
                            "@name": "uint",
                            "@value": "2",
                            "@c:identifier": "JSC_OPTION_UINT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                "@line": "595",
                                "#text": "A #guint option type."
                            }
                        },
                        {
                            "@name": "size",
                            "@value": "3",
                            "@c:identifier": "JSC_OPTION_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                "@line": "596",
                                "#text": "A #gsize options type."
                            }
                        },
                        {
                            "@name": "double",
                            "@value": "4",
                            "@c:identifier": "JSC_OPTION_DOUBLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                "@line": "597",
                                "#text": "A #gdouble options type."
                            }
                        },
                        {
                            "@name": "string",
                            "@value": "5",
                            "@c:identifier": "JSC_OPTION_STRING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                "@line": "598",
                                "#text": "A string option type."
                            }
                        },
                        {
                            "@name": "range_string",
                            "@value": "6",
                            "@c:identifier": "JSC_OPTION_RANGE_STRING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                "@line": "599",
                                "#text": "A range string option type."
                            }
                        }
                    ]
                },
                {
                    "@name": "TypedArrayType",
                    "@version": "2.38",
                    "@c:type": "JSCTypedArrayType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                        "@line": "1644",
                        "#text": "Possible types of the elements contained in a typed array."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "65"
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "JSC_TYPED_ARRAY_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1646",
                                "#text": "Not a typed array, or type unsupported."
                            }
                        },
                        {
                            "@name": "int8",
                            "@value": "1",
                            "@c:identifier": "JSC_TYPED_ARRAY_INT8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1647",
                                "#text": "Array elements are 8-bit signed integers (int8_t)."
                            }
                        },
                        {
                            "@name": "int16",
                            "@value": "2",
                            "@c:identifier": "JSC_TYPED_ARRAY_INT16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1648",
                                "#text": "Array elements are 16-bit signed integers (int16_t)."
                            }
                        },
                        {
                            "@name": "int32",
                            "@value": "3",
                            "@c:identifier": "JSC_TYPED_ARRAY_INT32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1649",
                                "#text": "Array elements are 32-bit signed integers (int32_t)."
                            }
                        },
                        {
                            "@name": "int64",
                            "@value": "4",
                            "@c:identifier": "JSC_TYPED_ARRAY_INT64",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1650",
                                "#text": "Array elements are 64-bit signed integers (int64_t)."
                            }
                        },
                        {
                            "@name": "uint8",
                            "@value": "5",
                            "@c:identifier": "JSC_TYPED_ARRAY_UINT8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1651",
                                "#text": "Array elements are 8-bit unsigned integers (uint8_t)."
                            }
                        },
                        {
                            "@name": "uint8_clamped",
                            "@value": "6",
                            "@c:identifier": "JSC_TYPED_ARRAY_UINT8_CLAMPED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1652",
                                "#text": "Array elements are 8-bit unsigned integers (uint8_t)."
                            }
                        },
                        {
                            "@name": "uint16",
                            "@value": "7",
                            "@c:identifier": "JSC_TYPED_ARRAY_UINT16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1653",
                                "#text": "Array elements are 16-bit unsigned integers (uint16_t)."
                            }
                        },
                        {
                            "@name": "uint32",
                            "@value": "8",
                            "@c:identifier": "JSC_TYPED_ARRAY_UINT32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1654",
                                "#text": "Array elements are 32-bit unsigned integers (uint32_t)."
                            }
                        },
                        {
                            "@name": "uint64",
                            "@value": "9",
                            "@c:identifier": "JSC_TYPED_ARRAY_UINT64",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1655",
                                "#text": "Array elements are 64-bit unsigned integers (uint64_t)."
                            }
                        },
                        {
                            "@name": "float32",
                            "@value": "10",
                            "@c:identifier": "JSC_TYPED_ARRAY_FLOAT32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1656",
                                "#text": "Array elements are 32-bit floating point numbers (float)."
                            }
                        },
                        {
                            "@name": "float64",
                            "@value": "11",
                            "@c:identifier": "JSC_TYPED_ARRAY_FLOAT64",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1657",
                                "#text": "Array elements are 64-bit floating point numbers (double)."
                            }
                        }
                    ]
                }
            ],
            "class": [
                {
                    "@name": "Class",
                    "@c:symbol-prefix": "class",
                    "@c:type": "JSCClass",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JSCClass",
                    "@glib:get-type": "jsc_class_get_type",
                    "@glib:type-struct": "ClassClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                        "@line": "37",
                        "#text": "A JSSClass represents a custom JavaScript class registered by the user in a #JSCContext.\nIt allows to create new JavaScripts objects whose instances are created by the user using\nthis API.\nIt's possible to add constructors, properties and methods for a JSSClass by providing\n#GCallback<!-- -->s to implement them."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "38"
                    },
                    "method": [
                        {
                            "@name": "add_constructor",
                            "@c:identifier": "jsc_class_add_constructor",
                            "@shadowed-by": "add_constructorv",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "572",
                                "#text": "Add a constructor to @jsc_class. If @name is %NULL, the class name will be used. When <function>new</function>\nis used with the constructor or jsc_value_constructor_call() is called, @callback is invoked receiving the\nparameters and @user_data as the last parameter. When the constructor object is cleared in the #JSCClass context,\n@destroy_notify is called with @user_data as parameter.\n\nThis function creates the constructor, which needs to be added to an object as a property to be able to use it. Use\njsc_context_set_value() to make the constructor available in the global object.\n\nNote that the value returned by @callback is adopted by @jsc_class, and the #GDestroyNotify passed to\njsc_context_register_class() is responsible for disposing of it."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "594",
                                    "#text": "a #JSCValue representing the class constructor."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "574",
                                        "#text": "a #JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "575",
                                            "#text": "the constructor name or %NULL"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "2",
                                        "@destroy": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "576",
                                            "#text": "a #GCallback to be called to create an instance of @jsc_class"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "577",
                                            "#text": "user data to pass to @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "578",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "579",
                                            "#text": "the #GType of the constructor return value"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "n_params",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "580",
                                            "#text": "the number of parameter types to follow or 0 if constructor doesn't receive parameters."
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "581",
                                            "#text": "a list of #GType<!-- -->s, one for each parameter."
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_constructor_variadic",
                            "@c:identifier": "jsc_class_add_constructor_variadic",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "667",
                                "#text": "Add a constructor to @jsc_class. If @name is %NULL, the class name will be used. When <function>new</function>\nis used with the constructor or jsc_value_constructor_call() is called, @callback is invoked receiving\na #GPtrArray of #JSCValue<!-- -->s as arguments and @user_data as the last parameter. When the constructor object\nis cleared in the #JSCClass context, @destroy_notify is called with @user_data as parameter.\n\nThis function creates the constructor, which needs to be added to an object as a property to be able to use it. Use\njsc_context_set_value() to make the constructor available in the global object.\n\nNote that the value returned by @callback is adopted by @jsc_class, and the #GDestroyNotify passed to\njsc_context_register_class() is responsible for disposing of it."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "108"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "687",
                                    "#text": "a #JSCValue representing the class constructor."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "669",
                                        "#text": "a #JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "670",
                                            "#text": "the constructor name or %NULL"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "2",
                                        "@destroy": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "671",
                                            "#text": "a #GCallback to be called to create an instance of @jsc_class"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "672",
                                            "#text": "user data to pass to @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "673",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "674",
                                            "#text": "the #GType of the constructor return value"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_constructorv",
                            "@c:identifier": "jsc_class_add_constructorv",
                            "@shadows": "add_constructor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "621",
                                "#text": "Add a constructor to @jsc_class. If @name is %NULL, the class name will be used. When <function>new</function>\nis used with the constructor or jsc_value_constructor_call() is called, @callback is invoked receiving the\nparameters and @user_data as the last parameter. When the constructor object is cleared in the #JSCClass context,\n@destroy_notify is called with @user_data as parameter.\n\nThis function creates the constructor, which needs to be added to an object as a property to be able to use it. Use\njsc_context_set_value() to make the constructor available in the global object.\n\nNote that the value returned by @callback is adopted by @jsc_class, and the #GDestroyNotify passed to\njsc_context_register_class() is responsible for disposing of it."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "98"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "643",
                                    "#text": "a #JSCValue representing the class constructor."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "623",
                                        "#text": "a #JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "624",
                                            "#text": "the constructor name or %NULL"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "2",
                                        "@destroy": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "625",
                                            "#text": "a #GCallback to be called to create an instance of @jsc_class"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "626",
                                            "#text": "user data to pass to @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "627",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "628",
                                            "#text": "the #GType of the constructor return value"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "n_parameters",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "629",
                                            "#text": "the number of parameters"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "parameter_types",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "630",
                                            "#text": "a list of #GType<!-- -->s, one for each parameter, or %NULL"
                                        },
                                        "array": {
                                            "@length": "5",
                                            "@zero-terminated": "0",
                                            "@c:type": "GType*",
                                            "type": {
                                                "@name": "GType"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_method",
                            "@c:identifier": "jsc_class_add_method",
                            "@shadowed-by": "add_methodv",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "719",
                                "#text": "Add method with @name to @jsc_class. When the method is called by JavaScript or jsc_value_object_invoke_method(),\n@callback is called receiving the class instance as first parameter, followed by the method parameters and then\n@user_data as last parameter. When the method is cleared in the #JSCClass context, @destroy_notify is called with\n@user_data as parameter.\n\nNote that the value returned by @callback must be transfer full. In case of non-refcounted boxed types, you should use\n%G_TYPE_POINTER instead of the actual boxed #GType to ensure that the instance owned by #JSCClass is used.\nIf you really want to return a new copy of the boxed type, use #JSC_TYPE_VALUE and return a #JSCValue created\nwith jsc_value_new_object() that receives the copy as the instance parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "116"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "721",
                                        "#text": "a #JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "722",
                                            "#text": "the method name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "2",
                                        "@destroy": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "723",
                                            "#text": "a #GCallback to be called to invoke method @name of @jsc_class"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "724",
                                            "#text": "user data to pass to @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "725",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "726",
                                            "#text": "the #GType of the method return value, or %G_TYPE_NONE if the method is void."
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "n_params",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "727",
                                            "#text": "the number of parameter types to follow or 0 if the method doesn't receive parameters."
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "728",
                                            "#text": "a list of #GType<!-- -->s, one for each parameter."
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_method_variadic",
                            "@c:identifier": "jsc_class_add_method_variadic",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "799",
                                "#text": "Add method with @name to @jsc_class. When the method is called by JavaScript or jsc_value_object_invoke_method(),\n@callback is called receiving the class instance as first parameter, followed by a #GPtrArray of #JSCValue<!-- -->s\nwith the method arguments and then @user_data as last parameter. When the method is cleared in the #JSCClass context,\n@destroy_notify is called with @user_data as parameter.\n\nNote that the value returned by @callback must be transfer full. In case of non-refcounted boxed types, you should use\n%G_TYPE_POINTER instead of the actual boxed #GType to ensure that the instance owned by #JSCClass is used.\nIf you really want to return a new copy of the boxed type, use #JSC_TYPE_VALUE and return a #JSCValue created\nwith jsc_value_new_object() that receives the copy as the instance parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "136"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "801",
                                        "#text": "a #JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "802",
                                            "#text": "the method name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "2",
                                        "@destroy": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "803",
                                            "#text": "a #GCallback to be called to invoke method @name of @jsc_class"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "804",
                                            "#text": "user data to pass to @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "805",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "806",
                                            "#text": "the #GType of the method return value, or %G_TYPE_NONE if the method is void."
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_methodv",
                            "@c:identifier": "jsc_class_add_methodv",
                            "@shadows": "add_method",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "760",
                                "#text": "Add method with @name to @jsc_class. When the method is called by JavaScript or jsc_value_object_invoke_method(),\n@callback is called receiving the class instance as first parameter, followed by the method parameters and then\n@user_data as last parameter. When the method is cleared in the #JSCClass context, @destroy_notify is called with\n@user_data as parameter.\n\nNote that the value returned by @callback must be transfer full. In case of non-refcounted boxed types, you should use\n%G_TYPE_POINTER instead of the actual boxed #GType to ensure that the instance owned by #JSCClass is used.\nIf you really want to return a new copy of the boxed type, use #JSC_TYPE_VALUE and return a #JSCValue created\nwith jsc_value_new_object() that receives the copy as the instance parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "126"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "762",
                                        "#text": "a #JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "763",
                                            "#text": "the method name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "2",
                                        "@destroy": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "764",
                                            "#text": "a #GCallback to be called to invoke method @name of @jsc_class"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "765",
                                            "#text": "user data to pass to @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "766",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "767",
                                            "#text": "the #GType of the method return value, or %G_TYPE_NONE if the method is void."
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "n_parameters",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "768",
                                            "#text": "the number of parameter types to follow or 0 if the method doesn't receive parameters."
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "parameter_types",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "769",
                                            "#text": "a list of #GType<!-- -->s, one for each parameter, or %NULL"
                                        },
                                        "array": {
                                            "@length": "5",
                                            "@zero-terminated": "0",
                                            "@c:type": "GType*",
                                            "type": {
                                                "@name": "GType"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_property",
                            "@c:identifier": "jsc_class_add_property",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "828",
                                "#text": "Add a property with @name to @jsc_class. When the property value needs to be getted, @getter is called\nreceiving the the class instance as first parameter and @user_data as last parameter. When the property\nvalue needs to be set, @setter is called receiving the the class instance as first parameter, followed\nby the value to be set and then @user_data as the last parameter. When the property is cleared in the\n#JSCClass context, @destroy_notify is called with @user_data as parameter.\n\nNote that the value returned by @getter must be transfer full. In case of non-refcounted boxed types, you should use\n%G_TYPE_POINTER instead of the actual boxed #GType to ensure that the instance owned by #JSCClass is used.\nIf you really want to return a new copy of the boxed type, use #JSC_TYPE_VALUE and return a #JSCValue created\nwith jsc_value_new_object() that receives the copy as the instance parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "144"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "830",
                                        "#text": "a #JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "831",
                                            "#text": "the property name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "property_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "832",
                                            "#text": "the #GType of the property value"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "getter",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "833",
                                            "#text": "a #GCallback to be called to get the property value"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "setter",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "notified",
                                        "@closure": "4",
                                        "@destroy": "5",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "834",
                                            "#text": "a #GCallback to be called to set the property value"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "835",
                                            "#text": "user data to pass to @getter and @setter"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                            "@line": "836",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_name",
                            "@c:identifier": "jsc_class_get_name",
                            "@glib:get-property": "name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "518",
                                "#text": "Get the class name of @jsc_class"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "82"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "524",
                                    "#text": "the name of @jsc_class"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "520",
                                        "#text": "a @JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_parent",
                            "@c:identifier": "jsc_class_get_parent",
                            "@glib:get-property": "parent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "533",
                                "#text": "Get the parent class of @jsc_class"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "539",
                                    "#text": "the parent class of @jsc_class"
                                },
                                "type": {
                                    "@name": "Class",
                                    "@c:type": "JSCClass*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jsc_class",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                        "@line": "535",
                                        "#text": "a @JSCClass"
                                    },
                                    "type": {
                                        "@name": "Class",
                                        "@c:type": "JSCClass*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "context",
                            "@readable": "0",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "331",
                                "#text": "The #JSCContext in which the class was registered."
                            },
                            "type": {
                                "@name": "Context"
                            }
                        },
                        {
                            "@name": "name",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "345",
                                "#text": "The name of the class."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "parent",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_parent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "359",
                                "#text": "The parent class or %NULL in case of final classes."
                            },
                            "type": {
                                "@name": "Class"
                            }
                        }
                    ]
                },
                {
                    "@name": "Context",
                    "@c:symbol-prefix": "context",
                    "@c:type": "JSCContext",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JSCContext",
                    "@glib:get-type": "jsc_context_get_type",
                    "@glib:type-struct": "ContextClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                        "@line": "40",
                        "#text": "JSCContext represents a JavaScript execution context, where all operations\ntake place and where the values will be associated.\n\nWhen a new context is created, a global object is allocated and the built-in JavaScript\nobjects (Object, Function, String, Array) are populated. You can execute JavaScript in\nthe context by using jsc_context_evaluate() or jsc_context_evaluate_with_source_uri().\nIt's also possible to register custom objects in the context with jsc_context_register_class()."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "79"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "jsc_context_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "601",
                                "#text": "Create a new #JSCContext. The context is created in a new #JSCVirtualMachine.\nUse jsc_context_new_with_virtual_machine() to create a new #JSCContext in an\nexisting #JSCVirtualMachine."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "608",
                                    "#text": "the newly created #JSCContext."
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            }
                        },
                        {
                            "@name": "new_with_virtual_machine",
                            "@c:identifier": "jsc_context_new_with_virtual_machine",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "615",
                                "#text": "Create a new #JSCContext in @virtual_machine."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "621",
                                    "#text": "the newly created #JSCContext."
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "vm",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "617",
                                        "#text": "a #JSCVirtualMachine"
                                    },
                                    "type": {
                                        "@name": "VirtualMachine",
                                        "@c:type": "JSCVirtualMachine*"
                                    }
                                }
                            }
                        }
                    ],
                    "function": {
                        "@name": "get_current",
                        "@c:identifier": "jsc_context_get_current",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                            "@line": "820",
                            "#text": "Get the #JSCContext that is currently executing a function. This should only be\ncalled within a function or method callback, otherwise %NULL will be returned."
                        },
                        "source-position": {
                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                            "@line": "133"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "826",
                                "#text": "the #JSCContext that is currently executing."
                            },
                            "type": {
                                "@name": "Context",
                                "@c:type": "JSCContext*"
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "check_syntax",
                            "@c:identifier": "jsc_context_check_syntax",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "945",
                                "#text": "Check the given @code in @context for syntax errors. The @line_number is the starting line number in @uri;\nthe value is one-based so the first line is 1. @uri and @line_number are only used to fill the @exception.\nIn case of errors @exception will be set to a new #JSCException with the details. You can pass %NULL to\n@exception to ignore the error details."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "158"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "960",
                                    "#text": "a #JSCCheckSyntaxResult"
                                },
                                "type": {
                                    "@name": "CheckSyntaxResult",
                                    "@c:type": "JSCCheckSyntaxResult"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "947",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "code",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "948",
                                            "#text": "a JavaScript script to check"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "949",
                                            "#text": "length of @code, or -1 if @code is a nul-terminated string"
                                        },
                                        "type": {
                                            "@name": "gssize",
                                            "@c:type": "gssize"
                                        }
                                    },
                                    {
                                        "@name": "mode",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "950",
                                            "#text": "a #JSCCheckSyntaxMode"
                                        },
                                        "type": {
                                            "@name": "CheckSyntaxMode",
                                            "@c:type": "JSCCheckSyntaxMode"
                                        }
                                    },
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "951",
                                            "#text": "the source URI"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "line_number",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "952",
                                            "#text": "the starting line number"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "unsigned"
                                        }
                                    },
                                    {
                                        "@name": "exception",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "953",
                                            "#text": "return location for a #JSCException, or %NULL to ignore"
                                        },
                                        "type": {
                                            "@name": "Exception",
                                            "@c:type": "JSCException**"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "clear_exception",
                            "@c:identifier": "jsc_context_clear_exception",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "746",
                                "#text": "Clear the uncaught exception in @context if any."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "121"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "748",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "evaluate",
                            "@c:identifier": "jsc_context_evaluate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "834",
                                "#text": "Evaluate @code in @context."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "136"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "842",
                                    "#text": "a #JSCValue representing the last value generated by the script."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "836",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "code",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "837",
                                            "#text": "a JavaScript script to evaluate"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "838",
                                            "#text": "length of @code, or -1 if @code is a nul-terminated string"
                                        },
                                        "type": {
                                            "@name": "gssize",
                                            "@c:type": "gssize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "evaluate_in_object",
                            "@c:identifier": "jsc_context_evaluate_in_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "883",
                                "#text": "Evaluate @code and create an new object where symbols defined in @code will be added as properties,\ninstead of being added to @context global object. The new object is returned as @object parameter.\nSimilar to how jsc_value_new_object() works, if @object_instance is not %NULL @object_class must be provided too.\nThe @line_number is the starting line number in @uri; the value is one-based so the first line is 1.\n@uri and @line_number will be shown in exceptions and they don't affect the behavior of the script."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "148"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "900",
                                    "#text": "a #JSCValue representing the last value generated by the script."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "885",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "code",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "886",
                                            "#text": "a JavaScript script to evaluate"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "887",
                                            "#text": "length of @code, or -1 if @code is a nul-terminated string"
                                        },
                                        "type": {
                                            "@name": "gssize",
                                            "@c:type": "gssize"
                                        }
                                    },
                                    {
                                        "@name": "object_instance",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "888",
                                            "#text": "an object instance"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "object_class",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "889",
                                            "#text": "a #JSCClass or %NULL to use the default"
                                        },
                                        "type": {
                                            "@name": "Class",
                                            "@c:type": "JSCClass*"
                                        }
                                    },
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "890",
                                            "#text": "the source URI"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "line_number",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "891",
                                            "#text": "the starting line number"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "object",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "892",
                                            "#text": "return location for a #JSCValue."
                                        },
                                        "type": {
                                            "@name": "Value",
                                            "@c:type": "JSCValue**"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "evaluate_with_source_uri",
                            "@c:identifier": "jsc_context_evaluate_with_source_uri",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "856",
                                "#text": "Evaluate @code in @context using @uri as the source URI. The @line_number is the starting line number\nin @uri; the value is one-based so the first line is 1. @uri and @line_number will be shown in exceptions and\nthey don't affect the behavior of the script."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "141"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "868",
                                    "#text": "a #JSCValue representing the last value generated by the script."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "858",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "code",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "859",
                                            "#text": "a JavaScript script to evaluate"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "860",
                                            "#text": "length of @code, or -1 if @code is a nul-terminated string"
                                        },
                                        "type": {
                                            "@name": "gssize",
                                            "@c:type": "gssize"
                                        }
                                    },
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "861",
                                            "#text": "the source URI"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "line_number",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "862",
                                            "#text": "the starting line number"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_exception",
                            "@c:identifier": "jsc_context_get_exception",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "644",
                                "#text": "Get the last unhandled exception thrown in @context by API functions calls."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "650",
                                    "#text": "a #JSCException or %NULL if there isn't any\n   unhandled exception in the #JSCContext."
                                },
                                "type": {
                                    "@name": "Exception",
                                    "@c:type": "JSCException*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "646",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_global_object",
                            "@c:identifier": "jsc_context_get_global_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "1033",
                                "#text": "Get a #JSCValue referencing the @context global object"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "167"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "1039",
                                    "#text": "a #JSCValue"
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "1035",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_value",
                            "@c:identifier": "jsc_context_get_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "1066",
                                "#text": "Get a property of @context global object with @name."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "175"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "1073",
                                    "#text": "a #JSCValue"
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "1068",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "1069",
                                        "#text": "the value name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_virtual_machine",
                            "@c:identifier": "jsc_context_get_virtual_machine",
                            "@glib:get-property": "virtual-machine",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "629",
                                "#text": "Get the #JSCVirtualMachine where @context was created."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "635",
                                    "#text": "the #JSCVirtualMachine where the #JSCContext was created."
                                },
                                "type": {
                                    "@name": "VirtualMachine",
                                    "@c:type": "JSCVirtualMachine*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "631",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "pop_exception_handler",
                            "@c:identifier": "jsc_context_pop_exception_handler",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "792",
                                "#text": "Remove the last #JSCExceptionHandler previously pushed to @context with\njsc_context_push_exception_handler()."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "130"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "794",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "push_exception_handler",
                            "@c:identifier": "jsc_context_push_exception_handler",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "768",
                                "#text": "Push an exception handler in @context. Whenever a JavaScript exception happens in\nthe #JSCContext, the given @handler will be called. The default #JSCExceptionHandler\nsimply calls jsc_context_throw_exception() to throw the exception to the #JSCContext.\nIf you don't want to catch the exception, but only get notified about it, call\njsc_context_throw_exception() in @handler like the default one does.\nThe last exception handler pushed is the only one used by the #JSCContext, use\njsc_context_pop_exception_handler() to remove it and set the previous one. When @handler\nis removed from the context, @destroy_notify i called with @user_data as parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "124"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "770",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "handler",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "1",
                                        "@destroy": "2",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "771",
                                            "#text": "a #JSCExceptionHandler"
                                        },
                                        "type": {
                                            "@name": "ExceptionHandler",
                                            "@c:type": "JSCExceptionHandler"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "772",
                                            "#text": "user data to pass to @handler"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "773",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "register_class",
                            "@c:identifier": "jsc_context_register_class",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "1084",
                                "#text": "Register a custom class in @context using the given @name. If the new class inherits from\nanother #JSCClass, the parent should be passed as @parent_class, otherwise %NULL should be\nused. The optional @vtable parameter allows to provide a custom implementation for handling\nthe class, for example, to handle external properties not added to the prototype.\nWhen an instance of the #JSCClass is cleared in the context, @destroy_notify is called with\nthe instance as parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "179"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "1099",
                                    "#text": "a #JSCClass"
                                },
                                "type": {
                                    "@name": "Class",
                                    "@c:type": "JSCClass*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "1086",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "1087",
                                            "#text": "the class name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "parent_class",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "1088",
                                            "#text": "a #JSCClass or %NULL"
                                        },
                                        "type": {
                                            "@name": "Class",
                                            "@c:type": "JSCClass*"
                                        }
                                    },
                                    {
                                        "@name": "vtable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "1089",
                                            "#text": "an optional #JSCClassVTable or %NULL"
                                        },
                                        "type": {
                                            "@name": "ClassVTable",
                                            "@c:type": "JSCClassVTable*"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "1090",
                                            "#text": "a destroy notifier for class instances"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_value",
                            "@c:identifier": "jsc_context_set_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "1048",
                                "#text": "Set a property of @context global object with @name and @value."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "170"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "1050",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "1051",
                                            "#text": "the value name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "1052",
                                            "#text": "a #JSCValue"
                                        },
                                        "type": {
                                            "@name": "Value",
                                            "@c:type": "JSCValue*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "throw",
                            "@c:identifier": "jsc_context_throw",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "660",
                                "#text": "Throw an exception to @context using the given error message. The created #JSCException\ncan be retrieved with jsc_context_get_exception()."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "97"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "662",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "error_message",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "663",
                                        "#text": "an error message"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "throw_exception",
                            "@c:identifier": "jsc_context_throw_exception",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "731",
                                "#text": "Throw @exception to @context."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "117"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "733",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "734",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "throw_printf",
                            "@c:identifier": "jsc_context_throw_printf",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "675",
                                "#text": "Throw an exception to @context using the given formatted string as error message.\nThe created #JSCException can be retrieved with jsc_context_get_exception()."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "101"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "677",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "678",
                                            "#text": "the string format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "679",
                                            "#text": "the parameters to insert into the format string"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "throw_with_name",
                            "@c:identifier": "jsc_context_throw_with_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "694",
                                "#text": "Throw an exception to @context using the given error name and message. The created #JSCException\ncan be retrieved with jsc_context_get_exception()."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "106"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "696",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "error_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "697",
                                            "#text": "the error name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "error_message",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "698",
                                            "#text": "an error message"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "throw_with_name_printf",
                            "@c:identifier": "jsc_context_throw_with_name_printf",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                "@line": "711",
                                "#text": "Throw an exception to @context using the given error name and the formatted string as error message.\nThe created #JSCException can be retrieved with jsc_context_get_exception()."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                "@line": "111"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                        "@line": "713",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "error_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "714",
                                            "#text": "the error name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "715",
                                            "#text": "the string format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                            "@line": "716",
                                            "#text": "the parameters to insert into the format string"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        }
                    ],
                    "property": {
                        "@name": "virtual-machine",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "@getter": "get_virtual_machine",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                            "@line": "179",
                            "#text": "The #JSCVirtualMachine in which the context was created."
                        },
                        "type": {
                            "@name": "VirtualMachine"
                        }
                    },
                    "field": [
                        {
                            "@name": "parent",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "ContextPrivate",
                                "@c:type": "JSCContextPrivate*"
                            }
                        }
                    ]
                },
                {
                    "@name": "Exception",
                    "@c:symbol-prefix": "exception",
                    "@c:type": "JSCException",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JSCException",
                    "@glib:get-type": "jsc_exception_get_type",
                    "@glib:type-struct": "ExceptionClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                        "@line": "33",
                        "#text": "JSCException represents a JavaScript exception."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                        "@line": "59"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "jsc_exception_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "122",
                                "#text": "Create a new #JSCException in @context with @message."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "129",
                                    "#text": "a new #JSCException."
                                },
                                "type": {
                                    "@name": "Exception",
                                    "@c:type": "JSCException*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "124",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "message",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "125",
                                            "#text": "the error message"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_printf",
                            "@c:identifier": "jsc_exception_new_printf",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "136",
                                "#text": "Create a new #JSCException in @context using a formatted string\nfor the message."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "145",
                                    "#text": "a new #JSCException."
                                },
                                "type": {
                                    "@name": "Exception",
                                    "@c:type": "JSCException*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "138",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "139",
                                            "#text": "the string format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "140",
                                            "#text": "the parameters to insert into the format string"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_vprintf",
                            "@c:identifier": "jsc_exception_new_vprintf",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "157",
                                "#text": "Create a new #JSCException in @context using a formatted string\nfor the message. This is similar to jsc_exception_new_printf()\nexcept that the arguments to the format string are passed as a va_list."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "167",
                                    "#text": "a new #JSCException."
                                },
                                "type": {
                                    "@name": "Exception",
                                    "@c:type": "JSCException*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "159",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "160",
                                            "#text": "the string format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "args",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "161",
                                            "#text": "the parameters to insert into the format string"
                                        },
                                        "type": {
                                            "@name": "va_list",
                                            "@c:type": "va_list"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_with_name",
                            "@c:identifier": "jsc_exception_new_with_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "178",
                                "#text": "Create a new #JSCException in @context with @name and @message."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "79"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "186",
                                    "#text": "a new #JSCException."
                                },
                                "type": {
                                    "@name": "Exception",
                                    "@c:type": "JSCException*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "180",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "181",
                                            "#text": "the error name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "message",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "182",
                                            "#text": "the error message"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_with_name_printf",
                            "@c:identifier": "jsc_exception_new_with_name_printf",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "209",
                                "#text": "Create a new #JSCException in @context with @name and using a formatted string\nfor the message."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "219",
                                    "#text": "a new #JSCException."
                                },
                                "type": {
                                    "@name": "Exception",
                                    "@c:type": "JSCException*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "211",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "212",
                                            "#text": "the error name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "213",
                                            "#text": "the string format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "214",
                                            "#text": "the parameters to insert into the format string"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_with_name_vprintf",
                            "@c:identifier": "jsc_exception_new_with_name_vprintf",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "231",
                                "#text": "Create a new #JSCException in @context with @name and using a formatted string\nfor the message. This is similar to jsc_exception_new_with_name_printf()\nexcept that the arguments to the format string are passed as a va_list."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "90"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "242",
                                    "#text": "a new #JSCException."
                                },
                                "type": {
                                    "@name": "Exception",
                                    "@c:type": "JSCException*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "233",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "234",
                                            "#text": "the error name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "235",
                                            "#text": "the string format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "args",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                            "@line": "236",
                                            "#text": "the parameters to insert into the format string"
                                        },
                                        "type": {
                                            "@name": "va_list",
                                            "@c:type": "va_list"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_backtrace_string",
                            "@c:identifier": "jsc_exception_get_backtrace_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "348",
                                "#text": "Get a string with the exception backtrace."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "111"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "354",
                                    "#text": "the exception backtrace string or %NULL."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                        "@line": "350",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_column_number",
                            "@c:identifier": "jsc_exception_get_column_number",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "310",
                                "#text": "Get the column number at which @exception happened."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "105"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "316",
                                    "#text": "the column number of @exception."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                        "@line": "312",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_line_number",
                            "@c:identifier": "jsc_exception_get_line_number",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "291",
                                "#text": "Get the line number at which @exception happened."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "102"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "297",
                                    "#text": "the line number of @exception."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                        "@line": "293",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_message",
                            "@c:identifier": "jsc_exception_get_message",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "272",
                                "#text": "Get the error message of @exception."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "99"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "278",
                                    "#text": "the @exception error message."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                        "@line": "274",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_name",
                            "@c:identifier": "jsc_exception_get_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "253",
                                "#text": "Get the error name of @exception"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "96"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "259",
                                    "#text": "the @exception error name."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                        "@line": "255",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_source_uri",
                            "@c:identifier": "jsc_exception_get_source_uri",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "329",
                                "#text": "Get the source URI of @exception."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "108"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "335",
                                    "#text": "the the source URI of @exception, or %NULL."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                        "@line": "331",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "report",
                            "@c:identifier": "jsc_exception_report",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "386",
                                "#text": "Return a report message of @exception, containing all the possible details such us\nsource URI, line, column and backtrace, and formatted to be printed."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "117"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "393",
                                    "#text": "a new string with the exception report"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                        "@line": "388",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_string",
                            "@c:identifier": "jsc_exception_to_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                "@line": "367",
                                "#text": "Get the string representation of @exception error."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                "@line": "114"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                    "@line": "373",
                                    "#text": "the string representation of @exception."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "exception",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.cpp",
                                        "@line": "369",
                                        "#text": "a #JSCException"
                                    },
                                    "type": {
                                        "@name": "Exception",
                                        "@c:type": "JSCException*"
                                    }
                                }
                            }
                        }
                    ],
                    "field": [
                        {
                            "@name": "parent",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "ExceptionPrivate",
                                "@c:type": "JSCExceptionPrivate*"
                            }
                        }
                    ]
                },
                {
                    "@name": "Value",
                    "@c:symbol-prefix": "value",
                    "@c:type": "JSCValue",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JSCValue",
                    "@glib:get-type": "jsc_value_get_type",
                    "@glib:type-struct": "ValueClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                        "@line": "41",
                        "#text": "JSCValue represents a reference to a value in a #JSCContext. The JSCValue\nprotects the referenced value from being garbage collected."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "81"
                    },
                    "constructor": [
                        {
                            "@name": "new_array",
                            "@c:identifier": "jsc_value_new_array",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "464",
                                "#text": "Create a new #JSCValue referencing an array with the given items. If @first_item_type\nis %G_TYPE_NONE an empty array is created."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "140"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "473",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "466",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "first_item_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "467",
                                            "#text": "#GType of first item, or %G_TYPE_NONE"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "468",
                                            "#text": "value of the first item, followed optionally by more type/value pairs, followed by %G_TYPE_NONE."
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_array_buffer",
                            "@c:identifier": "jsc_value_new_array_buffer",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1473",
                                "#text": "Creates a new %ArrayBuffer from existing @data in memory.\n\nThe @data is not copied: while this allows sharing data with JavaScript\nefficiently, the caller must ensure that the memory region remains valid\nuntil the newly created object is released by JSC.\n\nOptionally, a @destroy_notify callback can be provided, which will be\ninvoked with @user_data as parameter when the %ArrayBuffer object is\nreleased. This is intended to be used for freeing resources related to\nthe memory region which contains the data:\n\n|[!<-- language=\"C\" -->\nGMappedFile *f = g_mapped_file_new (file_path, TRUE, NULL);\nJSCValue *value = jsc_value_new_array_buffer (context,\n    g_mapped_file_get_contents (f), g_mapped_file_get_length (f),\n    (GDestroyNotify) g_mapped_file_unref, f);\n]|\n\nNote that the @user_data can be the same value as @data:\n\n|[!<-- language=\"C\" -->\nvoid *bytes = g_malloc0 (100);\nJSCValue *value = jsc_value_new_array_buffer (context, bytes, 100, g_free, bytes);\n]|"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "265"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1506",
                                    "#text": "A #JSCValue, or %NULL in case of exception."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1475",
                                            "#text": "A #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1476",
                                            "#text": "Pointer to a region of memory."
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "size",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1477",
                                            "#text": "Size in bytes of the memory region."
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1478",
                                            "#text": "destroy notifier for @user_data."
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1479",
                                            "#text": "user data."
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_array_from_garray",
                            "@c:identifier": "jsc_value_new_array_from_garray",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "528",
                                "#text": "Create a new #JSCValue referencing an array with the items from @array. If @array\nis %NULL or empty a new empty array will be created. Elements of @array should be\npointers to a #JSCValue."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "145"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "537",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "530",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "array",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "531",
                                            "#text": "a #GPtrArray"
                                        },
                                        "array": {
                                            "@name": "GLib.PtrArray",
                                            "@c:type": "GPtrArray*",
                                            "type": {
                                                "@name": "Value"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_array_from_strv",
                            "@c:identifier": "jsc_value_new_array_from_strv",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "554",
                                "#text": "Create a new #JSCValue referencing an array of strings with the items from @strv. If @array\nis %NULL or empty a new empty array will be created."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "149"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "562",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "556",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "strv",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "557",
                                            "#text": "a %NULL-terminated array of strings"
                                        },
                                        "array": {
                                            "@c:type": "const char* const*",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_boolean",
                            "@c:identifier": "jsc_value_new_boolean",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "285",
                                "#text": "Create a new #JSCValue from @value"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "114"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "292",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "287",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "288",
                                            "#text": "a #gboolean"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_json",
                            "@c:identifier": "jsc_value_new_from_json",
                            "@version": "2.28",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "2064",
                                "#text": "Create a new #JSCValue referencing a new value created by parsing @json."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "328"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "2071",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "2066",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "json",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "2067",
                                            "#text": "the JSON string to be parsed"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_function",
                            "@c:identifier": "jsc_value_new_function",
                            "@shadowed-by": "new_functionv",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1180",
                                "#text": "Create a function in @context. If @name is %NULL an anonymous function will be created.\nWhen the function is called by JavaScript or jsc_value_function_call(), @callback is called\nreceiving the function parameters and then @user_data as last parameter. When the function is\ncleared in @context, @destroy_notify is called with @user_data as parameter.\n\nNote that the value returned by @callback must be fully transferred. In case of boxed types, you could use\n%G_TYPE_POINTER instead of the actual boxed #GType to ensure that the instance owned by #JSCClass is used.\nIf you really want to return a new copy of the boxed type, use #JSC_TYPE_VALUE and return a #JSCValue created\nwith jsc_value_new_object() that receives the copy as instance parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "225"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1201",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1182",
                                            "#text": "a #JSCContext:"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1183",
                                            "#text": "the function name or %NULL"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "3",
                                        "@destroy": "4",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1184",
                                            "#text": "a #GCallback."
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1185",
                                            "#text": "user data to pass to @callback."
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1186",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1187",
                                            "#text": "the #GType of the function return value, or %G_TYPE_NONE if the function is void."
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "n_params",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1188",
                                            "#text": "the number of parameter types to follow or 0 if the function doesn't receive parameters."
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1189",
                                            "#text": "a list of #GType<!-- -->s, one for each parameter."
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_function_variadic",
                            "@c:identifier": "jsc_value_new_function_variadic",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1260",
                                "#text": "Create a function in @context. If @name is %NULL an anonymous function will be created.\nWhen the function is called by JavaScript or jsc_value_function_call(), @callback is called\nreceiving an #GPtrArray of #JSCValue<!-- -->s with the arguments and then @user_data as last parameter.\nWhen the function is cleared in @context, @destroy_notify is called with @user_data as parameter.\n\nNote that the value returned by @callback must be fully transferred. In case of boxed types, you could use\n%G_TYPE_POINTER instead of the actual boxed #GType to ensure that the instance owned by #JSCClass is used.\nIf you really want to return a new copy of the boxed type, use #JSC_TYPE_VALUE and return a #JSCValue created\nwith jsc_value_new_object() that receives the copy as instance parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "245"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1279",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1262",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1263",
                                            "#text": "the function name or %NULL"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "3",
                                        "@destroy": "4",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1264",
                                            "#text": "a #GCallback."
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1265",
                                            "#text": "user data to pass to @callback."
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1266",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1267",
                                            "#text": "the #GType of the function return value, or %G_TYPE_NONE if the function is void."
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_functionv",
                            "@c:identifier": "jsc_value_new_functionv",
                            "@shadows": "new_function",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1221",
                                "#text": "Create a function in @context. If @name is %NULL an anonymous function will be created.\nWhen the function is called by JavaScript or jsc_value_function_call(), @callback is called\nreceiving the function parameters and then @user_data as last parameter. When the function is\ncleared in @context, @destroy_notify is called with @user_data as parameter.\n\nNote that the value returned by @callback must be fully transferred. In case of boxed types, you could use\n%G_TYPE_POINTER instead of the actual boxed #GType to ensure that the instance owned by #JSCClass is used.\nIf you really want to return a new copy of the boxed type, use #JSC_TYPE_VALUE and return a #JSCValue created\nwith jsc_value_new_object() that receives the copy as instance parameter."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "235"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1242",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1223",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1224",
                                            "#text": "the function name or %NULL"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "3",
                                        "@destroy": "4",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1225",
                                            "#text": "a #GCallback."
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1226",
                                            "#text": "user data to pass to @callback."
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1227",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "return_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1228",
                                            "#text": "the #GType of the function return value, or %G_TYPE_NONE if the function is void."
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "n_parameters",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1229",
                                            "#text": "the number of parameters"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "parameter_types",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1230",
                                            "#text": "a list of #GType<!-- -->s, one for each parameter, or %NULL"
                                        },
                                        "array": {
                                            "@length": "6",
                                            "@zero-terminated": "0",
                                            "@c:type": "GType*",
                                            "type": {
                                                "@name": "GType"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_null",
                            "@c:identifier": "jsc_value_new_null",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "188",
                                "#text": "Create a new #JSCValue referencing <function>null</function> in @context."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "96"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "194",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "190",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_number",
                            "@c:identifier": "jsc_value_new_number",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "219",
                                "#text": "Create a new #JSCValue from @number."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "102"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "226",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "221",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "number",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "222",
                                            "#text": "a number"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_object",
                            "@c:identifier": "jsc_value_new_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "595",
                                "#text": "Create a new #JSCValue from @instance. If @instance is %NULL a new empty object is created.\nWhen @instance is provided, @jsc_class must be provided too. @jsc_class takes ownership of\n@instance that will be freed by the #GDestroyNotify passed to jsc_context_register_class()."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "156"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "605",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "597",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "instance",
                                        "@transfer-ownership": "full",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "598",
                                            "#text": "an object instance or %NULL"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "jsc_class",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "599",
                                            "#text": "the #JSCClass of @instance"
                                        },
                                        "type": {
                                            "@name": "Class",
                                            "@c:type": "JSCClass*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_string",
                            "@c:identifier": "jsc_value_new_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "333",
                                "#text": "Create a new #JSCValue from @string. If you need to create a #JSCValue from a\nstring containing null characters, use jsc_value_new_string_from_bytes() instead."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "123"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "341",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "335",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "string",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "336",
                                            "#text": "a null-terminated string"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_string_from_bytes",
                            "@c:identifier": "jsc_value_new_string_from_bytes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "356",
                                "#text": "Create a new #JSCValue from @bytes."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "127"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "363",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "358",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "bytes",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "359",
                                            "#text": "a #GBytes"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_typed_array",
                            "@c:identifier": "jsc_value_new_typed_array",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1726",
                                "#text": "Create a new typed array containing a given amount of elements.\n\nCreate a #JSCValue referencing a new typed array with space for @length\nelements of a given @type. As all typed arrays must have an associated\n`ArrayBuffer`, a new one of suitable size will be allocated to store\nthe elements, which will be initialized to zero.\n\nThe @type must *not* be %JSC_TYPED_ARRAY_NONE."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "282"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1741",
                                    "#text": "a #JSCValue"
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "context",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1728",
                                            "#text": "a #JSCContext"
                                        },
                                        "type": {
                                            "@name": "Context",
                                            "@c:type": "JSCContext*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1729",
                                            "#text": "the type of array elements"
                                        },
                                        "type": {
                                            "@name": "TypedArrayType",
                                            "@c:type": "JSCTypedArrayType"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1730",
                                            "#text": "number of elements in the array"
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_undefined",
                            "@c:identifier": "jsc_value_new_undefined",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "157",
                                "#text": "Create a new #JSCValue referencing <function>undefined</function> in @context."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "90"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "163",
                                    "#text": "a #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "159",
                                        "#text": "a #JSCContext"
                                    },
                                    "type": {
                                        "@name": "Context",
                                        "@c:type": "JSCContext*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "array_buffer_get_data",
                            "@c:identifier": "jsc_value_array_buffer_get_data",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1564",
                                "#text": "Gets a pointer to memory that contains the array buffer data.\n\nObtains a pointer to the memory region that holds the contents of the\n%ArrayBuffer; modifications done to the data will be visible to JavaScript\ncode. If @size is not %NULL, the size in bytes of the memory region\nwill also be stored in the pointed location.\n\nNote that the pointer returned by this function is not guaranteed to remain\nthe same after calls to other JSC API functions. If you plan to access the\ndata of the %ArrayBuffer later, you can keep a reference to the @value and\nobtain the data pointer at a later point. Keep in mind that if JavaScript\ncode has a chance to run, for example due to main loop events that result\nin JSC being called, the contents of the memory region might be modified in\nthe meantime. Consider taking a copy of the data and using the copy instead\nin asynchronous code."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "275"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1585",
                                    "#text": "pointer to memory."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1566",
                                        "#text": "A #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": {
                                    "@name": "size",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1567",
                                        "#text": "location where to store the size of the memory region."
                                    },
                                    "type": {
                                        "@name": "gsize",
                                        "@c:type": "gsize*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "array_buffer_get_size",
                            "@c:identifier": "jsc_value_array_buffer_get_size",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1613",
                                "#text": "Gets the size in bytes of the array buffer.\n\nObtains the size in bytes of the memory region that holds the contents of\nan %ArrayBuffer."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "279"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1622",
                                    "#text": "size, in bytes."
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1615",
                                        "#text": "A #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "constructor_call",
                            "@c:identifier": "jsc_value_constructor_call",
                            "@shadowed-by": "constructor_callv",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1400",
                                "#text": "Invoke <function>new</function> with constructor referenced by @value. If @first_parameter_type\nis %G_TYPE_NONE no parameters will be passed to the constructor."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "318"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1409",
                                    "#text": "a #JSCValue referencing the newly created object instance."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1402",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "first_parameter_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1403",
                                            "#text": "#GType of first parameter, or %G_TYPE_NONE"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1404",
                                            "#text": "value of the first parameter, followed optionally by more type/value pairs, followed by %G_TYPE_NONE"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "constructor_callv",
                            "@c:identifier": "jsc_value_constructor_callv",
                            "@shadows": "constructor_call",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1430",
                                "#text": "Invoke <function>new</function> with constructor referenced by @value. If @n_parameters\nis 0 no parameters will be passed to the constructor."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "323"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1439",
                                    "#text": "a #JSCValue referencing the newly created object instance."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1432",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "n_parameters",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1433",
                                            "#text": "the number of parameters"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "parameters",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1434",
                                            "#text": "the #JSCValue<!-- -->s to pass as parameters to the constructor, or %NULL"
                                        },
                                        "array": {
                                            "@length": "0",
                                            "@zero-terminated": "0",
                                            "@c:type": "JSCValue**",
                                            "type": {
                                                "@name": "Value"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "function_call",
                            "@c:identifier": "jsc_value_function_call",
                            "@shadowed-by": "function_callv",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1308",
                                "#text": "Call function referenced by @value, passing the given parameters. If @first_parameter_type\nis %G_TYPE_NONE no parameters will be passed to the function.\n\nThis function always returns a #JSCValue, in case of void functions a #JSCValue referencing\n<function>undefined</function> is returned"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "256"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1320",
                                    "#text": "a #JSCValue with the return value of the function."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1310",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "first_parameter_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1311",
                                            "#text": "#GType of first parameter, or %G_TYPE_NONE"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1312",
                                            "#text": "value of the first parameter, followed optionally by more type/value pairs, followed by %G_TYPE_NONE"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "function_callv",
                            "@c:identifier": "jsc_value_function_callv",
                            "@shadows": "function_call",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1341",
                                "#text": "Call function referenced by @value, passing the given @parameters. If @n_parameters\nis 0 no parameters will be passed to the function.\n\nThis function always returns a #JSCValue, in case of void functions a #JSCValue referencing\n<function>undefined</function> is returned"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "261"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1353",
                                    "#text": "a #JSCValue with the return value of the function."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1343",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "n_parameters",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1344",
                                            "#text": "the number of parameters"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "parameters",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1345",
                                            "#text": "the #JSCValue<!-- -->s to pass as parameters to the function, or %NULL"
                                        },
                                        "array": {
                                            "@length": "0",
                                            "@zero-terminated": "0",
                                            "@c:type": "JSCValue**",
                                            "type": {
                                                "@name": "Value"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_context",
                            "@c:identifier": "jsc_value_get_context",
                            "@glib:get-property": "context",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "142",
                                "#text": "Get the #JSCContext in which @value was created."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "148",
                                    "#text": "the #JSCValue context."
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "144",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_array",
                            "@c:identifier": "jsc_value_is_array",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "579",
                                "#text": "Get whether the value referenced by @value is an array."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "153"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "585",
                                    "#text": "whether the value is an array."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "581",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_array_buffer",
                            "@c:identifier": "jsc_value_is_array_buffer",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1537",
                                "#text": "Check whether the @value is an %ArrayBuffer."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "272"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1543",
                                    "#text": "whether the value is an %ArrayBuffer"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1539",
                                        "#text": "A #JSCValue."
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_boolean",
                            "@c:identifier": "jsc_value_is_boolean",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "301",
                                "#text": "Get whether the value referenced by @value is a boolean."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "117"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "307",
                                    "#text": "whether the value is a boolean."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "303",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_constructor",
                            "@c:identifier": "jsc_value_is_constructor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1381",
                                "#text": "Get whether the value referenced by @value is a constructor."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "315"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1387",
                                    "#text": "whether the value is a constructor."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1383",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_function",
                            "@c:identifier": "jsc_value_is_function",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1289",
                                "#text": "Get whether the value referenced by @value is a function"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "253"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1295",
                                    "#text": "whether the value is a function."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1291",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_null",
                            "@c:identifier": "jsc_value_is_null",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "203",
                                "#text": "Get whether the value referenced by @value is <function>null</function>."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "99"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "209",
                                    "#text": "whether the value is null."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "205",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_number",
                            "@c:identifier": "jsc_value_is_number",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "235",
                                "#text": "Get whether the value referenced by @value is a number."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "105"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "241",
                                    "#text": "whether the value is a number."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "237",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_object",
                            "@c:identifier": "jsc_value_is_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "615",
                                "#text": "Get whether the value referenced by @value is an object."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "161"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "621",
                                    "#text": "whether the value is an object."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "617",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_string",
                            "@c:identifier": "jsc_value_is_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "379",
                                "#text": "Get whether the value referenced by @value is a string"
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "131"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "385",
                                    "#text": "whether the value is a string"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "381",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_typed_array",
                            "@c:identifier": "jsc_value_is_typed_array",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1820",
                                "#text": "Determines whether a value is a typed array."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "293"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1826",
                                    "#text": "Whether @value is a typed array."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1822",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_undefined",
                            "@c:identifier": "jsc_value_is_undefined",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "172",
                                "#text": "Get whether the value referenced by @value is <function>undefined</function>."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "93"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "178",
                                    "#text": "whether the value is undefined."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "174",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_typed_array_with_buffer",
                            "@c:identifier": "jsc_value_new_typed_array_with_buffer",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1760",
                                "#text": "Create a new typed array value with elements from an array buffer.\n\nCreate a #JSCValue referencing a new typed array value containing\nelements of the given @type, where the elements are stored at the memory\nregion represented by the @array_buffer.\n\nThe @type must *not* be %JSC_TYPED_ARRAY_NONE.\n\nThe @offset and @length parameters can be used to indicate which part of\nthe array buffer can be accessed through the typed array. If both are\nomitted (passing zero as @offset, and `-1` as @length), the whole\n@array_buffer is exposed through the typed array. Omitting the @length\nwith a non-zero @offset will expose the remainder of the @array_buffer\nstarting at the indicated offset."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "287"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1782",
                                    "#text": "a #JSCValue"
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array_buffer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1762",
                                        "#text": "a #JSCValue."
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1763",
                                            "#text": "type of array elements."
                                        },
                                        "type": {
                                            "@name": "TypedArrayType",
                                            "@c:type": "JSCTypedArrayType"
                                        }
                                    },
                                    {
                                        "@name": "offset",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1764",
                                            "#text": "offset, in bytes."
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1765",
                                            "#text": "number of array elements, or `-1`."
                                        },
                                        "type": {
                                            "@name": "gssize",
                                            "@c:type": "gssize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "object_define_property_accessor",
                            "@c:identifier": "jsc_value_object_define_property_accessor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1123",
                                "#text": "Define or modify a property with @property_name in object referenced by @value. When the\nproperty value needs to be getted or set, @getter and @setter callbacks will be called.\nWhen the property is cleared in the #JSCClass context, @destroy_notify is called with\n@user_data as parameter. This is equivalent to JavaScript <function>Object.defineProperty()</function>\nwhen used with an accessor descriptor.\n\nNote that the value returned by @getter must be fully transferred. In case of boxed types, you could use\n%G_TYPE_POINTER instead of the actual boxed #GType to ensure that the instance owned by #JSCClass is used.\nIf you really want to return a new copy of the boxed type, use #JSC_TYPE_VALUE and return a #JSCValue created\nwith jsc_value_new_object() that receives the copy as instance parameter.\n\nNote that @getter and @setter are called as functions and not methods, so they don't receive an instance as\nfirst parameter. Use jsc_class_add_property() if you want to add property accessor invoked as a method."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "215"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1125",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "property_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1126",
                                            "#text": "the name of the property to define"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "flags",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1127",
                                            "#text": "#JSCValuePropertyFlags"
                                        },
                                        "type": {
                                            "@name": "ValuePropertyFlags",
                                            "@c:type": "JSCValuePropertyFlags"
                                        }
                                    },
                                    {
                                        "@name": "property_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1128",
                                            "#text": "the #GType of the property"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "getter",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1129",
                                            "#text": "a #GCallback to be called to get the property value"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "setter",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "notified",
                                        "@closure": "5",
                                        "@destroy": "6",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1130",
                                            "#text": "a #GCallback to be called to set the property value"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1131",
                                            "#text": "user data to pass to @getter and @setter"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy_notify",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1132",
                                            "#text": "destroy notifier for @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "object_define_property_data",
                            "@c:identifier": "jsc_value_object_define_property_data",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1032",
                                "#text": "Define or modify a property with @property_name in object referenced by @value. This is equivalent to\nJavaScript <function>Object.defineProperty()</function> when used with a data descriptor."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "209"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1034",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "property_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1035",
                                            "#text": "the name of the property to define"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "flags",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1036",
                                            "#text": "#JSCValuePropertyFlags"
                                        },
                                        "type": {
                                            "@name": "ValuePropertyFlags",
                                            "@c:type": "JSCValuePropertyFlags"
                                        }
                                    },
                                    {
                                        "@name": "property_value",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "1037",
                                            "#text": "the default property value"
                                        },
                                        "type": {
                                            "@name": "Value",
                                            "@c:type": "JSCValue*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "object_delete_property",
                            "@c:identifier": "jsc_value_object_delete_property",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "794",
                                "#text": "Try to delete property with @name from @value. This function will return %FALSE if\nthe property was defined without %JSC_VALUE_PROPERTY_CONFIGURABLE flag."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "190"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "802",
                                    "#text": "%TRUE if the property was deleted, or %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "796",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "797",
                                        "#text": "the property name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_enumerate_properties",
                            "@c:identifier": "jsc_value_object_enumerate_properties",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "824",
                                "#text": "Get the list of property names of @value. Only properties defined with %JSC_VALUE_PROPERTY_ENUMERABLE\nflag will be collected."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "194"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "831",
                                    "#text": "a %NULL-terminated array of strings containing the\n   property names, or %NULL if @value doesn't have enumerable properties.  Use g_strfreev() to free."
                                },
                                "array": {
                                    "@c:type": "gchar**",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "826",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_get_property",
                            "@c:identifier": "jsc_value_object_get_property",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "689",
                                "#text": "Get property with @name from @value."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "173"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "696",
                                    "#text": "the property #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "691",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "692",
                                        "#text": "the property name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_get_property_at_index",
                            "@c:identifier": "jsc_value_object_get_property_at_index",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "742",
                                "#text": "Get property at @index from @value."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "182"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "749",
                                    "#text": "the property #JSCValue."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "744",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "745",
                                        "#text": "the property index"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_has_property",
                            "@c:identifier": "jsc_value_object_has_property",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "769",
                                "#text": "Get whether @value has property with @name."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "186"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "776",
                                    "#text": "%TRUE if @value has a property with @name, or %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "771",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "772",
                                        "#text": "the property name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_invoke_method",
                            "@c:identifier": "jsc_value_object_invoke_method",
                            "@shadowed-by": "object_invoke_methodv",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "918",
                                "#text": "Invoke method with @name on object referenced by @value, passing the given parameters. If\n@first_parameter_type is %G_TYPE_NONE no parameters will be passed to the method.\nThe object instance will be handled automatically even when the method is a custom one\nregistered with jsc_class_add_method(), so it should never be passed explicitly as parameter\nof this function.\n\nThis function always returns a #JSCValue, in case of void methods a #JSCValue referencing\n<function>undefined</function> is returned."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "197"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "934",
                                    "#text": "a #JSCValue with the return value of the method."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "920",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "921",
                                            "#text": "the method name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "first_parameter_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "922",
                                            "#text": "#GType of first parameter, or %G_TYPE_NONE"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "923",
                                            "#text": "value of the first parameter, followed optionally by more type/value pairs, followed by %G_TYPE_NONE"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "object_invoke_methodv",
                            "@c:identifier": "jsc_value_object_invoke_methodv",
                            "@shadows": "object_invoke_method",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "965",
                                "#text": "Invoke method with @name on object referenced by @value, passing the given @parameters. If\n@n_parameters is 0 no parameters will be passed to the method.\nThe object instance will be handled automatically even when the method is a custom one\nregistered with jsc_class_add_method(), so it should never be passed explicitly as parameter\nof this function.\n\nThis function always returns a #JSCValue, in case of void methods a #JSCValue referencing\n<function>undefined</function> is returned."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "203"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "981",
                                    "#text": "a #JSCValue with the return value of the method."
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "967",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "968",
                                            "#text": "the method name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "n_parameters",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "969",
                                            "#text": "the number of parameters"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "parameters",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "970",
                                            "#text": "the #JSCValue<!-- -->s to pass as parameters to the method, or %NULL"
                                        },
                                        "array": {
                                            "@length": "1",
                                            "@zero-terminated": "0",
                                            "@c:type": "JSCValue**",
                                            "type": {
                                                "@name": "Value"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "object_is_instance_of",
                            "@c:identifier": "jsc_value_object_is_instance_of",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "631",
                                "#text": "Get whether the value referenced by @value is an instance of class @name."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "164"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "638",
                                    "#text": "whether the value is an object instance of class @name."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "633",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "634",
                                        "#text": "a class name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_set_property",
                            "@c:identifier": "jsc_value_object_set_property",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "663",
                                "#text": "Set @property with @name on @value."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "168"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "665",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "666",
                                            "#text": "the property name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "property",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "667",
                                            "#text": "the #JSCValue to set"
                                        },
                                        "type": {
                                            "@name": "Value",
                                            "@c:type": "JSCValue*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "object_set_property_at_index",
                            "@c:identifier": "jsc_value_object_set_property_at_index",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "718",
                                "#text": "Set @property at @index on @value."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "177"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "720",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "index",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "721",
                                            "#text": "the property index"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "property",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                            "@line": "722",
                                            "#text": "the #JSCValue to set"
                                        },
                                        "type": {
                                            "@name": "Value",
                                            "@c:type": "JSCValue*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "to_boolean",
                            "@c:identifier": "jsc_value_to_boolean",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "317",
                                "#text": "Convert @value to a boolean."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "120"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "323",
                                    "#text": "a #gboolean result of the conversion."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "319",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_double",
                            "@c:identifier": "jsc_value_to_double",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "251",
                                "#text": "Convert @value to a double."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "108"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "257",
                                    "#text": "a #gdouble result of the conversion."
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "double"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "253",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_int32",
                            "@c:identifier": "jsc_value_to_int32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "272",
                                "#text": "Convert @value to a #gint32."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "111"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "278",
                                    "#text": "a #gint32 result of the conversion."
                                },
                                "type": {
                                    "@name": "gint32",
                                    "@c:type": "gint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "274",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_json",
                            "@c:identifier": "jsc_value_to_json",
                            "@version": "2.28",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "2109",
                                "#text": "Create a JSON string of @value serialization. If @indent is 0, the resulting JSON will\nnot contain newlines. The size of the indent is clamped to 10 spaces."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "332"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "2117",
                                    "#text": "a null-terminated JSON string with serialization of @value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "2111",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": {
                                    "@name": "indent",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "2112",
                                        "#text": "The number of spaces to indent when nesting."
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_string",
                            "@c:identifier": "jsc_value_to_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "395",
                                "#text": "Convert @value to a string. Use jsc_value_to_string_as_bytes() instead, if you need to\nhandle strings containing null characters."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "134"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "402",
                                    "#text": "a null-terminated string result of the conversion."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "397",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_string_as_bytes",
                            "@c:identifier": "jsc_value_to_string_as_bytes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "427",
                                "#text": "Convert @value to a string and return the results as #GBytes. This is needed\nto handle strings with null characters."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "137"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "434",
                                    "#text": "a #GBytes with the result of the conversion."
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "429",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "typed_array_get_buffer",
                            "@c:identifier": "jsc_value_typed_array_get_buffer",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "2036",
                                "#text": "Obtain the %ArrayBuffer for the memory region of the typed array elements."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "312"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "2042",
                                    "#text": "A #JSCValue"
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "2038",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "typed_array_get_data",
                            "@c:identifier": "jsc_value_typed_array_get_data",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1889",
                                "#text": "Obtains a pointer to the memory region that holds the elements of the typed\narray; modifications done to them will be visible to JavaScript code. If\n@length is not %NULL, the number of elements contained in the typed array\nare also stored in the pointed location.\n\nThe returned pointer needs to be casted to the appropriate type (see\n#JSCTypedArrayType), and has the `offset` over the underlying array\nbuffer data applied\u2014that is, points to the first element of the typed\narray:\n\n|[<!-- language=\"C\" -->\nif (jsc_value_typed_array_get_type(value) != JSC_TYPED_ARRAY_UINT32)\n    g_error (\"Only arrays of uint32_t are supported\");\n\ngsize count = 0;\nuint32_t *elements = jsc_value_typed_array_get_contents (value, &count);\nfor (gsize i = 0; i < count; i++)\n     g_print (\"index %zu, value %\" PRIu32 \"\\n\", i, elements[i]);\n]|\n\nNote that the pointer returned by this function is not guaranteed to remain\nthe same after calls to other JSC API functions. See\njsc_value_array_buffer_get_data() for details."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "299"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1918",
                                    "#text": "pointer to memory."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1891",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                },
                                "parameter": {
                                    "@name": "length",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@nullable": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1892",
                                        "#text": "location to return the number of elements contained"
                                    },
                                    "type": {
                                        "@name": "gsize",
                                        "@c:type": "gsize*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "typed_array_get_length",
                            "@c:identifier": "jsc_value_typed_array_get_length",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1952",
                                "#text": "Gets the number of elements in a typed array."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "303"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1958",
                                    "#text": "number of elements."
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1954",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "typed_array_get_offset",
                            "@c:identifier": "jsc_value_typed_array_get_offset",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "2008",
                                "#text": "Gets the offset over the underlying array buffer data."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "309"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "2014",
                                    "#text": "offset, in bytes."
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "2010",
                                        "#text": "A #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "typed_array_get_size",
                            "@c:identifier": "jsc_value_typed_array_get_size",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1980",
                                "#text": "Gets the size of a typed array."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "306"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1986",
                                    "#text": "size, in bytes."
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1982",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "typed_array_get_type",
                            "@c:identifier": "jsc_value_typed_array_get_type",
                            "@version": "2.38",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                "@line": "1837",
                                "#text": "Gets the type of elements contained in a typed array."
                            },
                            "source-position": {
                                "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                "@line": "296"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                    "@line": "1843",
                                    "#text": "type of the elements, or %JSC_TYPED_ARRAY_NONE if @value is not a typed array."
                                },
                                "type": {
                                    "@name": "TypedArrayType",
                                    "@c:type": "JSCTypedArrayType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                                        "@line": "1839",
                                        "#text": "a #JSCValue"
                                    },
                                    "type": {
                                        "@name": "Value",
                                        "@c:type": "JSCValue*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "context",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "@getter": "get_context",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                            "@line": "114",
                            "#text": "The #JSCContext in which the value was created."
                        },
                        "type": {
                            "@name": "Context"
                        }
                    },
                    "field": [
                        {
                            "@name": "parent",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "ValuePrivate",
                                "@c:type": "JSCValuePrivate*"
                            }
                        }
                    ]
                },
                {
                    "@name": "VirtualMachine",
                    "@c:symbol-prefix": "virtual_machine",
                    "@c:type": "JSCVirtualMachine",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JSCVirtualMachine",
                    "@glib:get-type": "jsc_virtual_machine_get_type",
                    "@glib:type-struct": "VirtualMachineClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.cpp",
                        "@line": "31",
                        "#text": "JSCVirtualMachine represents a group of JSCContext<!-- -->s. It allows\nconcurrent JavaScript execution by creating a different instance of\nJSCVirtualMachine in each thread.\n\nTo create a group of JSCContext<!-- -->s pass the same JSCVirtualMachine\ninstance to every JSCContext constructor."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                        "@line": "58"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "jsc_virtual_machine_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.cpp",
                            "@line": "155",
                            "#text": "Create a new #JSCVirtualMachine."
                        },
                        "source-position": {
                            "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                            "@line": "64"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.cpp",
                                "@line": "160",
                                "#text": "the newly created #JSCVirtualMachine."
                            },
                            "type": {
                                "@name": "VirtualMachine",
                                "@c:type": "JSCVirtualMachine*"
                            }
                        }
                    },
                    "field": [
                        {
                            "@name": "parent",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "VirtualMachinePrivate",
                                "@c:type": "JSCVirtualMachinePrivate*"
                            }
                        }
                    ]
                },
                {
                    "@name": "WeakValue",
                    "@c:symbol-prefix": "weak_value",
                    "@c:type": "JSCWeakValue",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JSCWeakValue",
                    "@glib:get-type": "jsc_weak_value_get_type",
                    "@glib:type-struct": "WeakValueClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                        "@line": "33",
                        "#text": "JSCWeakValue represents a weak reference to a value in a #JSCContext. It can be used\nto keep a reference to a JavaScript value without protecting it from being garbage\ncollected and without referencing the #JSCContext either."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                        "@line": "58"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "jsc_weak_value_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                            "@line": "163",
                            "#text": "Create a new #JSCWeakValue for the JavaScript value referenced by @value."
                        },
                        "source-position": {
                            "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                            "@line": "64"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                                "@line": "169",
                                "#text": "a new #JSCWeakValue"
                            },
                            "type": {
                                "@name": "WeakValue",
                                "@c:type": "JSCWeakValue*"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                                    "@line": "165",
                                    "#text": "a #JSCValue"
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            }
                        }
                    },
                    "method": {
                        "@name": "get_value",
                        "@c:identifier": "jsc_weak_value_get_value",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                            "@line": "178",
                            "#text": "Get a #JSCValue referencing the JavaScript value of @weak_value."
                        },
                        "source-position": {
                            "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                            "@line": "67"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                                "@line": "184",
                                "#text": "a new #JSCValue or %NULL if @weak_value was cleared."
                            },
                            "type": {
                                "@name": "Value",
                                "@c:type": "JSCValue*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "weak_value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                                    "@line": "180",
                                    "#text": "a #JSCWeakValue"
                                },
                                "type": {
                                    "@name": "WeakValue",
                                    "@c:type": "JSCWeakValue*"
                                }
                            }
                        }
                    },
                    "property": {
                        "@name": "value",
                        "@readable": "0",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                            "@line": "133",
                            "#text": "The #JSCValue referencing the JavaScript value."
                        },
                        "type": {
                            "@name": "Value"
                        }
                    },
                    "field": [
                        {
                            "@name": "parent",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "WeakValuePrivate",
                                "@c:type": "JSCWeakValuePrivate*"
                            }
                        }
                    ],
                    "glib:signal": {
                        "@name": "cleared",
                        "@when": "last",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.cpp",
                            "@line": "147",
                            "#text": "This signal is emitted when the JavaScript value is destroyed."
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        }
                    }
                }
            ],
            "record": [
                {
                    "@name": "ClassClass",
                    "@c:type": "JSCClassClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "Class",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "38"
                    }
                },
                {
                    "@name": "ClassVTable",
                    "@c:type": "JSCClassVTable",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                        "@line": "442",
                        "#text": "Virtual table for a JSCClass. This can be optionally used when registering a #JSCClass in a #JSCContext\nto provide a custom implementation for the class. All virtual functions are optional and can be set to\n%NULL to fallback to the default implementation."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "76"
                    },
                    "field": [
                        {
                            "@name": "get_property",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "444",
                                "#text": "a #JSCClassGetPropertyFunction for getting a property."
                            },
                            "type": {
                                "@name": "ClassGetPropertyFunction",
                                "@c:type": "JSCClassGetPropertyFunction"
                            }
                        },
                        {
                            "@name": "set_property",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "445",
                                "#text": "a #JSCClassSetPropertyFunction for setting a property."
                            },
                            "type": {
                                "@name": "ClassSetPropertyFunction",
                                "@c:type": "JSCClassSetPropertyFunction"
                            }
                        },
                        {
                            "@name": "has_property",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "446",
                                "#text": "a #JSCClassHasPropertyFunction for querying a property."
                            },
                            "type": {
                                "@name": "ClassHasPropertyFunction",
                                "@c:type": "JSCClassHasPropertyFunction"
                            }
                        },
                        {
                            "@name": "delete_property",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "447",
                                "#text": "a #JSCClassDeletePropertyFunction for deleting a property."
                            },
                            "type": {
                                "@name": "ClassDeletePropertyFunction",
                                "@c:type": "JSCClassDeletePropertyFunction"
                            }
                        },
                        {
                            "@name": "enumerate_properties",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                "@line": "448",
                                "#text": "a #JSCClassEnumeratePropertiesFunction for enumerating properties."
                            },
                            "type": {
                                "@name": "ClassEnumeratePropertiesFunction",
                                "@c:type": "JSCClassEnumeratePropertiesFunction"
                            }
                        },
                        {
                            "@name": "_jsc_reserved0",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved0",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                    "@line": "72"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved1",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                    "@line": "73"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved2",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                    "@line": "74"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved3",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                                    "@line": "75"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ContextClass",
                    "@c:type": "JSCContextClass",
                    "@glib:is-gtype-struct-for": "Context",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "79"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "_jsc_reserved0",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved0",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                    "@line": "75"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved1",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                    "@line": "76"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved2",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                    "@line": "77"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved3",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                                    "@line": "78"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ContextPrivate",
                    "@c:type": "JSCContextPrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "45"
                    }
                },
                {
                    "@name": "ExceptionClass",
                    "@c:type": "JSCExceptionClass",
                    "@glib:is-gtype-struct-for": "Exception",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                        "@line": "59"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "_jsc_reserved0",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved0",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                    "@line": "55"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved1",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                    "@line": "56"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved2",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                    "@line": "57"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved3",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                                    "@line": "58"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ExceptionPrivate",
                    "@c:type": "JSCExceptionPrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCException.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "ValueClass",
                    "@c:type": "JSCValueClass",
                    "@glib:is-gtype-struct-for": "Value",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "81"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "_jsc_reserved0",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved0",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                    "@line": "77"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved1",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                    "@line": "78"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved2",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                    "@line": "79"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved3",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                                    "@line": "80"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ValuePrivate",
                    "@c:type": "JSCValuePrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "VirtualMachineClass",
                    "@c:type": "JSCVirtualMachineClass",
                    "@glib:is-gtype-struct-for": "VirtualMachine",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                        "@line": "58"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "_jsc_reserved0",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved0",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                                    "@line": "54"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved1",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                                    "@line": "55"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved2",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                                    "@line": "56"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved3",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                                    "@line": "57"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "VirtualMachinePrivate",
                    "@c:type": "JSCVirtualMachinePrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVirtualMachine.h",
                        "@line": "42"
                    }
                },
                {
                    "@name": "WeakValueClass",
                    "@c:type": "JSCWeakValueClass",
                    "@glib:is-gtype-struct-for": "WeakValue",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                        "@line": "58"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "_jsc_reserved0",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved0",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                                    "@line": "54"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved1",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                                    "@line": "55"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved2",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                                    "@line": "56"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_jsc_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_jsc_reserved3",
                                "source-position": {
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                                    "@line": "57"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "WeakValuePrivate",
                    "@c:type": "JSCWeakValuePrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCWeakValue.h",
                        "@line": "42"
                    }
                }
            ],
            "callback": [
                {
                    "@name": "ClassDeletePropertyFunction",
                    "@c:type": "JSCClassDeletePropertyFunction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                        "@line": "416",
                        "#text": "The type of delete_property in #JSCClassVTable. This is only required when you need to handle\nexternal properties not added to the prototype."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "55"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                            "@line": "426",
                            "#text": "%TRUE if handled or %FALSE to to forward the request to the parent class or prototype chain."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "jsc_class",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "418",
                                    "#text": "a #JSCClass"
                                },
                                "type": {
                                    "@name": "Class",
                                    "@c:type": "JSCClass*"
                                }
                            },
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "419",
                                    "#text": "a #JSCContext"
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            },
                            {
                                "@name": "instance",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "420",
                                    "#text": "the @jsc_class instance"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "421",
                                    "#text": "the property name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ClassEnumeratePropertiesFunction",
                    "@c:type": "JSCClassEnumeratePropertiesFunction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                        "@line": "429",
                        "#text": "The type of enumerate_properties in #JSCClassVTable. This is only required when you need to handle\nexternal properties not added to the prototype."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                            "@line": "438",
                            "#text": "a %NULL-terminated array of strings\n   containing the property names, or %NULL if @instance doesn't have enumerable properties."
                        },
                        "array": {
                            "@c:type": "gchar**",
                            "type": {
                                "@name": "utf8"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "jsc_class",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "431",
                                    "#text": "a #JSCClass"
                                },
                                "type": {
                                    "@name": "Class",
                                    "@c:type": "JSCClass*"
                                }
                            },
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "432",
                                    "#text": "a #JSCContext"
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            },
                            {
                                "@name": "instance",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "433",
                                    "#text": "the @jsc_class instance"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ClassGetPropertyFunction",
                    "@c:type": "JSCClassGetPropertyFunction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                        "@line": "374",
                        "#text": "The type of get_property in #JSCClassVTable. This is only required when you need to handle\nexternal properties not added to the prototype."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "42"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                            "@line": "384",
                            "#text": "a #JSCValue or %NULL to forward the request to\n   the parent class or prototype chain"
                        },
                        "type": {
                            "@name": "Value",
                            "@c:type": "JSCValue*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "jsc_class",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "376",
                                    "#text": "a #JSCClass"
                                },
                                "type": {
                                    "@name": "Class",
                                    "@c:type": "JSCClass*"
                                }
                            },
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "377",
                                    "#text": "a #JSCContext"
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            },
                            {
                                "@name": "instance",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "378",
                                    "#text": "the @jsc_class instance"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "379",
                                    "#text": "the property name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ClassHasPropertyFunction",
                    "@c:type": "JSCClassHasPropertyFunction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                        "@line": "402",
                        "#text": "The type of has_property in #JSCClassVTable. This is only required when you need to handle\nexternal properties not added to the prototype."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "51"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                            "@line": "412",
                            "#text": "%TRUE if @instance has a property with @name or %FALSE to forward the request\n   to the parent class or prototype chain."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "jsc_class",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "404",
                                    "#text": "a #JSCClass"
                                },
                                "type": {
                                    "@name": "Class",
                                    "@c:type": "JSCClass*"
                                }
                            },
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "405",
                                    "#text": "a #JSCContext"
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            },
                            {
                                "@name": "instance",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "406",
                                    "#text": "the @jsc_class instance"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "407",
                                    "#text": "the property name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ClassSetPropertyFunction",
                    "@c:type": "JSCClassSetPropertyFunction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                        "@line": "388",
                        "#text": "The type of set_property in #JSCClassVTable. This is only required when you need to handle\nexternal properties not added to the prototype."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCClass.h",
                        "@line": "46"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                            "@line": "399",
                            "#text": "%TRUE if handled or %FALSE to forward the request to the parent class or prototype chain."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "jsc_class",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "390",
                                    "#text": "a #JSCClass"
                                },
                                "type": {
                                    "@name": "Class",
                                    "@c:type": "JSCClass*"
                                }
                            },
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "391",
                                    "#text": "a #JSCContext"
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            },
                            {
                                "@name": "instance",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "392",
                                    "#text": "the @jsc_class instance"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "393",
                                    "#text": "the property name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCClass.cpp",
                                    "@line": "394",
                                    "#text": "the #JSCValue to set"
                                },
                                "type": {
                                    "@name": "Value",
                                    "@c:type": "JSCValue*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ExceptionHandler",
                    "@c:type": "JSCExceptionHandler",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                        "@line": "759",
                        "#text": "Function used to handle JavaScript exceptions in a #JSCContext."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCContext.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "761",
                                    "#text": "a #JSCContext"
                                },
                                "type": {
                                    "@name": "Context",
                                    "@c:type": "JSCContext*"
                                }
                            },
                            {
                                "@name": "exception",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "762",
                                    "#text": "a #JSCException"
                                },
                                "type": {
                                    "@name": "Exception",
                                    "@c:type": "JSCException*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCContext.cpp",
                                    "@line": "763",
                                    "#text": "user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "OptionsFunc",
                    "@c:type": "JSCOptionsFunc",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "606",
                        "#text": "Function used to iterate options.\n\nNot that @description string is not localized."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "96"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "617",
                            "#text": "%TRUE to stop the iteration, or %FALSE otherwise"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "608",
                                    "#text": "the option name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "609",
                                    "#text": "the option #JSCOptionType"
                                },
                                "type": {
                                    "@name": "OptionType",
                                    "@c:type": "JSCOptionType"
                                }
                            },
                            {
                                "@name": "description",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "610",
                                    "#text": "the option description, or %NULL"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "611",
                                    "#text": "user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                }
            ],
            "docsection": {
                "@name": "JSCOptions",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                    "@line": "28",
                    "#text": "JavaScript options allow changing the behavior of the JavaScript engine.\nThey affect the way the engine works, so the options must be set\nat the very beginning of the program execution, before any other JavaScript\nAPI call. Most of the options are only useful for testing and debugging.\nOnly a few of them are documented; you can use the undocumented options at\nyour own risk. (You can find the list of options in the WebKit source code).\n\nThe API allows to set and get any option using the types defined in #JSCOptionType.\nYou can also iterate all the available options using jsc_options_foreach() and\npassing a #JSCOptionsFunc callback. If your application uses #GOptionContext to handle\ncommand line arguments, you can easily integrate the JSCOptions by adding the\n#GOptionGroup returned by jsc_options_get_option_group()."
                }
            },
            "constant": [
                {
                    "@name": "MAJOR_VERSION",
                    "@value": "2",
                    "@c:type": "JSC_MAJOR_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "31",
                        "#text": "Like jsc_get_major_version(), but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "38"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MICRO_VERSION",
                    "@value": "3",
                    "@c:type": "JSC_MICRO_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "49",
                        "#text": "Like jsc_get_micro_version(), but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "56"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MINOR_VERSION",
                    "@value": "38",
                    "@c:type": "JSC_MINOR_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "40",
                        "#text": "Like jsc_get_minor_version(), but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "47"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "OPTIONS_USE_DFG",
                    "@value": "useDFGJIT",
                    "@c:type": "JSC_OPTIONS_USE_DFG",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "717",
                        "#text": "Allows the DFG JIT to be used if %TRUE.\nOption type: %JSC_OPTION_BOOLEAN\nDefault value: %TRUE."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "33"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                },
                {
                    "@name": "OPTIONS_USE_FTL",
                    "@value": "useFTLJIT",
                    "@c:type": "JSC_OPTIONS_USE_FTL",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "727",
                        "#text": "Allows the FTL JIT to be used if %TRUE.\nOption type: %JSC_OPTION_BOOLEAN\nDefault value: %TRUE."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "34"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                },
                {
                    "@name": "OPTIONS_USE_JIT",
                    "@value": "useJIT",
                    "@c:type": "JSC_OPTIONS_USE_JIT",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "707",
                        "#text": "Allows the executable pages to be allocated for JIT and thunks if %TRUE.\nOption type: %JSC_OPTION_BOOLEAN\nDefault value: %TRUE."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "32"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                },
                {
                    "@name": "OPTIONS_USE_LLINT",
                    "@value": "useLLInt",
                    "@c:type": "JSC_OPTIONS_USE_LLINT",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "737",
                        "#text": "Allows the LLINT to be used if %TRUE.\nOption type: %JSC_OPTION_BOOLEAN\nDefault value: %TRUE."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "35"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                }
            ],
            "bitfield": {
                "@name": "ValuePropertyFlags",
                "@c:type": "JSCValuePropertyFlags",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                    "@line": "1019",
                    "#text": "Flags used when defining properties with jsc_value_object_define_property_data() and\njsc_value_object_define_property_accessor()."
                },
                "source-position": {
                    "@filename": "Source/JavaScriptCore/API/glib/JSCValue.h",
                    "@line": "50"
                },
                "member": [
                    {
                        "@name": "configurable",
                        "@value": "1",
                        "@c:identifier": "JSC_VALUE_PROPERTY_CONFIGURABLE",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                            "@line": "1021",
                            "#text": "the type of the property descriptor may be changed and the\n property may be deleted from the corresponding object."
                        }
                    },
                    {
                        "@name": "enumerable",
                        "@value": "2",
                        "@c:identifier": "JSC_VALUE_PROPERTY_ENUMERABLE",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                            "@line": "1023",
                            "#text": "the property shows up during enumeration of the properties on\n the corresponding object."
                        }
                    },
                    {
                        "@name": "writable",
                        "@value": "4",
                        "@c:identifier": "JSC_VALUE_PROPERTY_WRITABLE",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCValue.cpp",
                            "@line": "1025",
                            "#text": "the value associated with the property may be changed with an\n assignment operator. This doesn't have any effect when passed to jsc_value_object_define_property_accessor()."
                        }
                    }
                ]
            },
            "function": [
                {
                    "@name": "get_major_version",
                    "@c:identifier": "jsc_get_major_version",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVersion.cpp",
                        "@line": "37",
                        "#text": "Returns the major version number of the JavaScriptCore library.\n(e.g. in JavaScriptCore version 1.8.3 this is 1.)\n\nThis function is in the library, so it represents the JavaScriptCore library\nyour code is running against. Contrast with the #JSC_MAJOR_VERSION\nmacro, which represents the major version of the JavaScriptCore headers you\nhave included when compiling your code."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "76"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCVersion.cpp",
                            "@line": "48",
                            "#text": "the major version number of the JavaScriptCore library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "get_micro_version",
                    "@c:identifier": "jsc_get_micro_version",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVersion.cpp",
                        "@line": "73",
                        "#text": "Returns the micro version number of the JavaScriptCore library.\n(e.g. in JavaScriptCore version 1.8.3 this is 3.)\n\nThis function is in the library, so it represents the JavaScriptCore library\nyour code is running against. Contrast with the #JSC_MICRO_VERSION\nmacro, which represents the micro version of the JavaScriptCore headers you\nhave included when compiling your code."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "82"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCVersion.cpp",
                            "@line": "84",
                            "#text": "the micro version number of the JavaScriptCore library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "get_minor_version",
                    "@c:identifier": "jsc_get_minor_version",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCVersion.cpp",
                        "@line": "55",
                        "#text": "Returns the minor version number of the JavaScriptCore library.\n(e.g. in JavaScriptCore version 1.8.3 this is 8.)\n\nThis function is in the library, so it represents the JavaScriptCore library\nyour code is running against. Contrast with the #JSC_MINOR_VERSION\nmacro, which represents the minor version of the JavaScriptCore headers you\nhave included when compiling your code."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/webkit2gtk-5.0/JavaScriptCoreGLib/DerivedSources/jsc/JSCVersion.h",
                        "@line": "79"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCVersion.cpp",
                            "@line": "66",
                            "#text": "the minor version number of the JavaScriptCore library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "options_foreach",
                    "@c:identifier": "jsc_options_foreach",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "622",
                        "#text": "Iterates all available options calling @function for each one. Iteration can\nstop early if @function returns %FALSE."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "102"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "function",
                                "@transfer-ownership": "none",
                                "@scope": "call",
                                "@closure": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "624",
                                    "#text": "a #JSCOptionsFunc callback"
                                },
                                "type": {
                                    "@name": "OptionsFunc",
                                    "@c:type": "JSCOptionsFunc"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "625",
                                    "#text": "callback user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_get_boolean",
                    "@c:identifier": "jsc_options_get_boolean",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "236",
                        "#text": "Get @option as a #gboolean value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "41"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "243",
                            "#text": "%TRUE if @value has been set or %FALSE if the option doesn't exist"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "238",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "239",
                                    "#text": "return location for the option value"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_get_double",
                    "@c:identifier": "jsc_options_get_double",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "420",
                        "#text": "Get @option as a #gdouble value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "69"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "427",
                            "#text": "%TRUE if @value has been set or %FALSE if the option doesn't exist"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "422",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "423",
                                    "#text": "return location for the option value"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_get_int",
                    "@c:identifier": "jsc_options_get_int",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "282",
                        "#text": "Get @option as a #gint value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "289",
                            "#text": "%TRUE if @value has been set or %FALSE if the option doesn't exist"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "284",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "285",
                                    "#text": "return location for the option value"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_get_option_group",
                    "@c:identifier": "jsc_options_get_option_group",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "661",
                        "#text": "Create a #GOptionGroup to handle JSCOptions as command line arguments.\nThe options will be exposed as command line arguments with the form\n<emphasis>--jsc-&lt;option&gt;=&lt;value&gt;</emphasis>.\nEach entry in the returned #GOptionGroup is configured to apply the\ncorresponding option during command line parsing. Applications only need to\npass the returned group to g_option_context_add_group(), and the rest will\nbe taken care for automatically."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "106"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "672",
                            "#text": "a #GOptionGroup for the JSCOptions"
                        },
                        "type": {
                            "@name": "GLib.OptionGroup",
                            "@c:type": "GOptionGroup*"
                        }
                    }
                },
                {
                    "@name": "options_get_range_string",
                    "@c:identifier": "jsc_options_get_range_string",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "520",
                        "#text": "Get @option as a range string. The string must be in the\nformat <emphasis>[!]&lt;low&gt;[:&lt;high&gt;]</emphasis> where low and high are #guint values.\nValues between low and high (both included) will be considered in\nthe range, unless <emphasis>!</emphasis> is used to invert the range."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "83"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "530",
                            "#text": "%TRUE if @value has been set or %FALSE if the option doesn't exist"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "522",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "523",
                                    "#text": "return location for the option value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_get_size",
                    "@c:identifier": "jsc_options_get_size",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "374",
                        "#text": "Get @option as a #gsize value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "62"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "381",
                            "#text": "%TRUE if @value has been set or %FALSE if the option doesn't exist"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "376",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "377",
                                    "#text": "return location for the option value"
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_get_string",
                    "@c:identifier": "jsc_options_get_string",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "468",
                        "#text": "Get @option as a string."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "76"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "475",
                            "#text": "%TRUE if @value has been set or %FALSE if the option doesn't exist"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "470",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "471",
                                    "#text": "return location for the option value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_get_uint",
                    "@c:identifier": "jsc_options_get_uint",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "328",
                        "#text": "Get @option as a #guint value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "55"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "335",
                            "#text": "%TRUE if @value has been set or %FALSE if the option doesn't exist"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "330",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "331",
                                    "#text": "return location for the option value"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_set_boolean",
                    "@c:identifier": "jsc_options_set_boolean",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "215",
                        "#text": "Set @option as a #gboolean value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "38"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "222",
                            "#text": "%TRUE if option was correctly set or %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "217",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "218",
                                    "#text": "the value to set"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_set_double",
                    "@c:identifier": "jsc_options_set_double",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "399",
                        "#text": "Set @option as a #gdouble value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "66"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "406",
                            "#text": "%TRUE if option was correctly set or %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "401",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "402",
                                    "#text": "the value to set"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_set_int",
                    "@c:identifier": "jsc_options_set_int",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "261",
                        "#text": "Set @option as a #gint value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "268",
                            "#text": "%TRUE if option was correctly set or %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "263",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "264",
                                    "#text": "the value to set"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_set_range_string",
                    "@c:identifier": "jsc_options_set_range_string",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "494",
                        "#text": "Set @option as a range string. The string must be in the\nformat <emphasis>[!]&lt;low&gt;[:&lt;high&gt;]</emphasis> where low and high are #guint values.\nValues between low and high (both included) will be considered in\nthe range, unless <emphasis>!</emphasis> is used to invert the range."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "80"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "504",
                            "#text": "%TRUE if option was correctly set or %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "496",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "497",
                                    "#text": "the value to set"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_set_size",
                    "@c:identifier": "jsc_options_set_size",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "353",
                        "#text": "Set @option as a #gsize value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "360",
                            "#text": "%TRUE if option was correctly set or %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "355",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "356",
                                    "#text": "the value to set"
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_set_string",
                    "@c:identifier": "jsc_options_set_string",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "445",
                        "#text": "Set @option as a string."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "73"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "452",
                            "#text": "%TRUE if option was correctly set or %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "447",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "448",
                                    "#text": "the value to set"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "options_set_uint",
                    "@c:identifier": "jsc_options_set_uint",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                        "@line": "307",
                        "#text": "Set @option as a #guint value."
                    },
                    "source-position": {
                        "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.h",
                        "@line": "52"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                            "@line": "314",
                            "#text": "%TRUE if option was correctly set or %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "option",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "309",
                                    "#text": "the option identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "Source/JavaScriptCore/API/glib/JSCOptions.cpp",
                                    "@line": "310",
                                    "#text": "the value to set"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            }
                        ]
                    }
                }
            ]
        }
    }
}