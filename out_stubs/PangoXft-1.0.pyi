from gi.repository import xlib, Pango, xft, GLib, freetype2, GObject, Pango, PangoFT2, PangoOT, xft, xlib

def get_context(display: xlib.Display, screen: int) -> Pango.Context: ...
def get_font_map(display: xlib.Display, screen: int) -> Pango.FontMap: ...
def picture_render(display: xlib.Display, src_picture: xlib.Picture, dest_picture: xlib.Picture, font: Pango.Font, glyphs: Pango.GlyphString, x: int, y: int) -> None: ...
def render(draw: xft.Draw, color: xft.Color, font: Pango.Font, glyphs: Pango.GlyphString, x: int, y: int) -> None: ...
def render_layout(draw: xft.Draw, color: xft.Color, layout: Pango.Layout, x: int, y: int) -> None: ...
def render_layout_line(draw: xft.Draw, color: xft.Color, line: Pango.LayoutLine, x: int, y: int) -> None: ...
def render_transformed(draw: xft.Draw, color: xft.Color, matrix: Pango.Matrix, font: Pango.Font, glyphs: Pango.GlyphString, x: int, y: int) -> None: ...
def set_default_substitute(display: xlib.Display, screen: int, func: SubstituteFunc, data: object, notify: GLib.DestroyNotify) -> None: ...
def shutdown_display(display: xlib.Display, screen: int) -> None: ...
def substitute_changed(display: xlib.Display, screen: int) -> None: ...

class Font(PangoFc.Font): 
    @classmethod
    def get_font(cls, font: Pango.Font) -> xft.Font: ...
    def get_display(self) -> xlib.Display: ...
    def get_glyph(self, wc: gunichar) -> int: ...
    def get_unknown_glyph(self, wc: gunichar) -> Pango.Glyph: ...
    def has_char(self, wc: gunichar) -> bool: ...
    def lock_face(self) -> freetype2.Face: ...
    def unlock_face(self) -> None: ...

class FontMap(PangoFc.FontMap, Gio.ListModel): ...

class Renderer(Pango.Renderer): 
    @classmethod
    def new(cls, display: xlib.Display, screen: int) -> Pango.Renderer: ...
    def set_default_color(self, default_color: Pango.Color) -> None: ...
    def set_draw(self, draw: xft.Draw) -> None: ...

