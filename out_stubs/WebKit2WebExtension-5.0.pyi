from gi.repository import GLib, Gio, JavaScriptCore, Soup, Gtk, JavaScriptCore, Soup, GObject

DOM_CSS_RULE_CHARSET_RULE: int
DOM_CSS_RULE_FONT_FACE_RULE: int
DOM_CSS_RULE_IMPORT_RULE: int
DOM_CSS_RULE_MEDIA_RULE: int
DOM_CSS_RULE_PAGE_RULE: int
DOM_CSS_RULE_STYLE_RULE: int
DOM_CSS_RULE_UNKNOWN_RULE: int
DOM_CSS_VALUE_CSS_CUSTOM: int
DOM_CSS_VALUE_CSS_INHERIT: int
DOM_CSS_VALUE_CSS_PRIMITIVE_VALUE: int
DOM_CSS_VALUE_CSS_VALUE_LIST: int
DOM_ELEMENT_ALLOW_KEYBOARD_INPUT: int
DOM_EVENT_AT_TARGET: int
DOM_EVENT_BLUR: int
DOM_EVENT_BUBBLING_PHASE: int
DOM_EVENT_CAPTURING_PHASE: int
DOM_EVENT_CHANGE: int
DOM_EVENT_CLICK: int
DOM_EVENT_DBLCLICK: int
DOM_EVENT_DRAGDROP: int
DOM_EVENT_FOCUS: int
DOM_EVENT_KEYDOWN: int
DOM_EVENT_KEYPRESS: int
DOM_EVENT_KEYUP: int
DOM_EVENT_MOUSEDOWN: int
DOM_EVENT_MOUSEDRAG: int
DOM_EVENT_MOUSEMOVE: int
DOM_EVENT_MOUSEOUT: int
DOM_EVENT_MOUSEOVER: int
DOM_EVENT_MOUSEUP: int
DOM_EVENT_NONE: int
DOM_EVENT_SELECT: int
DOM_KEYBOARD_EVENT_KEY_LOCATION_LEFT: int
DOM_KEYBOARD_EVENT_KEY_LOCATION_NUMPAD: int
DOM_KEYBOARD_EVENT_KEY_LOCATION_RIGHT: int
DOM_KEYBOARD_EVENT_KEY_LOCATION_STANDARD: int
DOM_NODE_ATTRIBUTE_NODE: int
DOM_NODE_CDATA_SECTION_NODE: int
DOM_NODE_COMMENT_NODE: int
DOM_NODE_DOCUMENT_FRAGMENT_NODE: int
DOM_NODE_DOCUMENT_NODE: int
DOM_NODE_DOCUMENT_POSITION_CONTAINED_BY: int
DOM_NODE_DOCUMENT_POSITION_CONTAINS: int
DOM_NODE_DOCUMENT_POSITION_DISCONNECTED: int
DOM_NODE_DOCUMENT_POSITION_FOLLOWING: int
DOM_NODE_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int
DOM_NODE_DOCUMENT_POSITION_PRECEDING: int
DOM_NODE_DOCUMENT_TYPE_NODE: int
DOM_NODE_ELEMENT_NODE: int
DOM_NODE_ENTITY_NODE: int
DOM_NODE_ENTITY_REFERENCE_NODE: int
DOM_NODE_FILTER_ACCEPT: int
DOM_NODE_FILTER_REJECT: int
DOM_NODE_FILTER_SHOW_ALL: int
DOM_NODE_FILTER_SHOW_ATTRIBUTE: int
DOM_NODE_FILTER_SHOW_CDATA_SECTION: int
DOM_NODE_FILTER_SHOW_COMMENT: int
DOM_NODE_FILTER_SHOW_DOCUMENT: int
DOM_NODE_FILTER_SHOW_DOCUMENT_FRAGMENT: int
DOM_NODE_FILTER_SHOW_DOCUMENT_TYPE: int
DOM_NODE_FILTER_SHOW_ELEMENT: int
DOM_NODE_FILTER_SHOW_ENTITY: int
DOM_NODE_FILTER_SHOW_ENTITY_REFERENCE: int
DOM_NODE_FILTER_SHOW_NOTATION: int
DOM_NODE_FILTER_SHOW_PROCESSING_INSTRUCTION: int
DOM_NODE_FILTER_SHOW_TEXT: int
DOM_NODE_FILTER_SKIP: int
DOM_NODE_PROCESSING_INSTRUCTION_NODE: int
DOM_NODE_TEXT_NODE: int
DOM_RANGE_END_TO_END: int
DOM_RANGE_END_TO_START: int
DOM_RANGE_NODE_AFTER: int
DOM_RANGE_NODE_BEFORE: int
DOM_RANGE_NODE_BEFORE_AND_AFTER: int
DOM_RANGE_NODE_INSIDE: int
DOM_RANGE_START_TO_END: int
DOM_RANGE_START_TO_START: int
DOM_XPATH_RESULT_ANY_TYPE: int
DOM_XPATH_RESULT_ANY_UNORDERED_NODE_TYPE: int
DOM_XPATH_RESULT_BOOLEAN_TYPE: int
DOM_XPATH_RESULT_FIRST_ORDERED_NODE_TYPE: int
DOM_XPATH_RESULT_NUMBER_TYPE: int
DOM_XPATH_RESULT_ORDERED_NODE_ITERATOR_TYPE: int
DOM_XPATH_RESULT_ORDERED_NODE_SNAPSHOT_TYPE: int
DOM_XPATH_RESULT_STRING_TYPE: int
DOM_XPATH_RESULT_UNORDERED_NODE_ITERATOR_TYPE: int
DOM_XPATH_RESULT_UNORDERED_NODE_SNAPSHOT_TYPE: int


class ContextMenu(GObject.Object): 
    @classmethod
    def new(cls) -> ContextMenu: ...
    def append(self, item: ContextMenuItem) -> None: ...
    def first(self) -> ContextMenuItem: ...
    def get_item_at_position(self, position: int) -> ContextMenuItem: ...
    def get_items(self) -> GLib.List: ...
    def get_n_items(self) -> int: ...
    def get_user_data(self) -> GLib.Variant: ...
    def insert(self, item: ContextMenuItem, position: int) -> None: ...
    def last(self) -> ContextMenuItem: ...
    def move_item(self, item: ContextMenuItem, position: int) -> None: ...
    def prepend(self, item: ContextMenuItem) -> None: ...
    def remove(self, item: ContextMenuItem) -> None: ...
    def remove_all(self) -> None: ...
    def set_user_data(self, user_data: GLib.Variant) -> None: ...

class ContextMenuItem(GObject.InitiallyUnowned): 
    @classmethod
    def new_from_gaction(cls, action: Gio.Action, label: str, target: GLib.Variant) -> ContextMenuItem: ...
    def get_gaction(self) -> Gio.Action: ...
    def get_stock_action(self) -> ContextMenuAction: ...
    def get_submenu(self) -> ContextMenu: ...
    def is_separator(self) -> bool: ...
    def set_submenu(self, submenu: ContextMenu) -> None: ...

class DOMAttr(DOMNode, DOMEventTarget): 
    def get_local_name(self) -> str: ...
    def get_name(self) -> str: ...
    def get_namespace_uri(self) -> str: ...
    def get_owner_element(self) -> DOMElement: ...
    def get_prefix(self) -> str: ...
    def get_specified(self) -> bool: ...
    def get_value(self) -> str: ...
    def set_value(self, value: str) -> None: ...

class DOMBlob(DOMObject): 
    def get_size(self) -> int: ...

class DOMCDATASection(DOMText, DOMEventTarget): ...

class DOMCSSRule(DOMObject): 
    def get_css_text(self) -> str: ...
    def get_parent_rule(self) -> DOMCSSRule: ...
    def get_parent_style_sheet(self) -> DOMCSSStyleSheet: ...
    def get_rule_type(self) -> gushort: ...
    def set_css_text(self, value: str) -> None: ...

class DOMCSSRuleList(DOMObject): 
    def get_length(self) -> int: ...
    def item(self, index: int) -> DOMCSSRule: ...

class DOMCSSStyleDeclaration(DOMObject): 
    def get_css_text(self) -> str: ...
    def get_length(self) -> int: ...
    def get_parent_rule(self) -> DOMCSSRule: ...
    def get_property_priority(self, propertyName: str) -> str: ...
    def get_property_shorthand(self, propertyName: str) -> str: ...
    def get_property_value(self, propertyName: str) -> str: ...
    def is_property_implicit(self, propertyName: str) -> bool: ...
    def item(self, index: int) -> str: ...
    def remove_property(self, propertyName: str) -> str: ...
    def set_css_text(self, value: str) -> None: ...
    def set_property(self, propertyName: str, value: str, priority: str) -> None: ...

class DOMCSSStyleSheet(DOMStyleSheet): 
    def add_rule(self, selector: str, style: str, index: int) -> int: ...
    def delete_rule(self, index: int) -> None: ...
    def get_css_rules(self) -> DOMCSSRuleList: ...
    def get_owner_rule(self) -> DOMCSSRule: ...
    def get_rules(self) -> DOMCSSRuleList: ...
    def insert_rule(self, rule: str, index: int) -> int: ...
    def remove_rule(self, index: int) -> None: ...

class DOMCSSValue(DOMObject): 
    def get_css_text(self) -> str: ...
    def get_css_value_type(self) -> gushort: ...
    def set_css_text(self, value: str) -> None: ...

class DOMCharacterData(DOMNode, DOMEventTarget): 
    def append_data(self, data: str) -> None: ...
    def delete_data(self, offset: int, length: int) -> None: ...
    def get_data(self) -> str: ...
    def get_length(self) -> int: ...
    def insert_data(self, offset: int, data: str) -> None: ...
    def replace_data(self, offset: int, length: int, data: str) -> None: ...
    def set_data(self, value: str) -> None: ...
    def substring_data(self, offset: int, length: int) -> str: ...

class DOMClientRect(DOMObject): 
    def get_bottom(self) -> float: ...
    def get_height(self) -> float: ...
    def get_left(self) -> float: ...
    def get_right(self) -> float: ...
    def get_top(self) -> float: ...
    def get_width(self) -> float: ...

class DOMClientRectList(DOMObject): 
    def get_length(self) -> int: ...
    def item(self, index: int) -> DOMClientRect: ...

class DOMComment(DOMCharacterData, DOMEventTarget): ...

class DOMDOMImplementation(DOMObject): 
    def create_css_style_sheet(self, title: str, media: str) -> DOMCSSStyleSheet: ...
    def create_document(self, namespaceURI: str, qualifiedName: str, doctype: DOMDocumentType) -> DOMDocument: ...
    def create_document_type(self, qualifiedName: str, publicId: str, systemId: str) -> DOMDocumentType: ...
    def create_html_document(self, title: str) -> DOMHTMLDocument: ...
    def has_feature(self, feature: str, version: str) -> bool: ...

class DOMDOMSelection(DOMObject): 
    def add_range(self, range: DOMRange) -> None: ...
    def collapse(self, node: DOMNode, offset: int) -> None: ...
    def collapse_to_end(self) -> None: ...
    def collapse_to_start(self) -> None: ...
    def contains_node(self, node: DOMNode, allowPartial: bool) -> bool: ...
    def delete_from_document(self) -> None: ...
    def empty(self) -> None: ...
    def extend(self, node: DOMNode, offset: int) -> None: ...
    def get_anchor_node(self) -> DOMNode: ...
    def get_anchor_offset(self) -> int: ...
    def get_base_node(self) -> DOMNode: ...
    def get_base_offset(self) -> int: ...
    def get_extent_node(self) -> DOMNode: ...
    def get_extent_offset(self) -> int: ...
    def get_focus_node(self) -> DOMNode: ...
    def get_focus_offset(self) -> int: ...
    def get_is_collapsed(self) -> bool: ...
    def get_range_at(self, index: int) -> DOMRange: ...
    def get_range_count(self) -> int: ...
    def get_selection_type(self) -> str: ...
    def modify(self, alter: str, direction: str, granularity: str) -> None: ...
    def remove_all_ranges(self) -> None: ...
    def select_all_children(self, node: DOMNode) -> None: ...
    def set_base_and_extent(self, baseNode: DOMNode, baseOffset: int, extentNode: DOMNode, extentOffset: int) -> None: ...
    def set_position(self, node: DOMNode, offset: int) -> None: ...

class DOMDOMTokenList(DOMObject): 
    def add(self, error: GLib.Error) -> None: ...
    def contains(self, token: str) -> bool: ...
    def get_length(self) -> int: ...
    def get_value(self) -> str: ...
    def item(self, index: int) -> str: ...
    def remove(self, error: GLib.Error) -> None: ...
    def replace(self, token: str, newToken: str) -> None: ...
    def set_value(self, value: str) -> None: ...
    def toggle(self, token: str, force: bool) -> bool: ...

class DOMDOMWindow(DOMObject, DOMEventTarget): 
    def alert(self, message: str) -> None: ...
    def blur(self) -> None: ...
    def capture_events(self) -> None: ...
    def close(self) -> None: ...
    def confirm(self, message: str) -> bool: ...
    def find(self, string: str, caseSensitive: bool, backwards: bool, wrap: bool, wholeWord: bool, searchInFrames: bool, showDialog: bool) -> bool: ...
    def focus(self) -> None: ...
    def get_closed(self) -> bool: ...
    def get_computed_style(self, element: DOMElement, pseudoElement: str) -> DOMCSSStyleDeclaration: ...
    def get_default_status(self) -> str: ...
    def get_device_pixel_ratio(self) -> float: ...
    def get_document(self) -> DOMDocument: ...
    def get_frame_element(self) -> DOMElement: ...
    def get_frames(self) -> DOMDOMWindow: ...
    def get_inner_height(self) -> int: ...
    def get_inner_width(self) -> int: ...
    def get_length(self) -> int: ...
    def get_name(self) -> str: ...
    def get_offscreen_buffering(self) -> bool: ...
    def get_opener(self) -> DOMDOMWindow: ...
    def get_orientation(self) -> int: ...
    def get_outer_height(self) -> int: ...
    def get_outer_width(self) -> int: ...
    def get_page_x_offset(self) -> int: ...
    def get_page_y_offset(self) -> int: ...
    def get_parent(self) -> DOMDOMWindow: ...
    def get_screen_left(self) -> int: ...
    def get_screen_top(self) -> int: ...
    def get_screen_x(self) -> int: ...
    def get_screen_y(self) -> int: ...
    def get_scroll_x(self) -> int: ...
    def get_scroll_y(self) -> int: ...
    def get_selection(self) -> DOMDOMSelection: ...
    def get_self(self) -> DOMDOMWindow: ...
    def get_status(self) -> str: ...
    def get_top(self) -> DOMDOMWindow: ...
    def get_window(self) -> DOMDOMWindow: ...
    def move_by(self, x: float, y: float) -> None: ...
    def move_to(self, x: float, y: float) -> None: ...
    def print(self) -> None: ...
    def prompt(self, message: str, defaultValue: str) -> str: ...
    def release_events(self) -> None: ...
    def resize_by(self, x: float, y: float) -> None: ...
    def resize_to(self, width: float, height: float) -> None: ...
    def scroll_by(self, x: float, y: float) -> None: ...
    def scroll_to(self, x: float, y: float) -> None: ...
    def set_default_status(self, value: str) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_status(self, value: str) -> None: ...
    def stop(self) -> None: ...
    def webkit_message_handlers_post_message(self, handler: str, message: str) -> bool: ...

class DOMDocument(DOMNode, DOMEventTarget): 
    def adopt_node(self, source: DOMNode) -> DOMNode: ...
    def caret_range_from_point(self, x: int, y: int) -> DOMRange: ...
    def create_attribute(self, name: str) -> DOMAttr: ...
    def create_attribute_ns(self, namespaceURI: str, qualifiedName: str) -> DOMAttr: ...
    def create_cdata_section(self, data: str) -> DOMCDATASection: ...
    def create_comment(self, data: str) -> DOMComment: ...
    def create_css_style_declaration(self) -> DOMCSSStyleDeclaration: ...
    def create_document_fragment(self) -> DOMDocumentFragment: ...
    def create_element(self, tagName: str) -> DOMElement: ...
    def create_element_ns(self, namespaceURI: str, qualifiedName: str) -> DOMElement: ...
    def create_entity_reference(self, name: str) -> DOMEntityReference: ...
    def create_event(self, eventType: str) -> DOMEvent: ...
    def create_expression(self, expression: str, resolver: DOMXPathNSResolver) -> DOMXPathExpression: ...
    def create_node_iterator(self, root: DOMNode, whatToShow: int, filter: DOMNodeFilter, expandEntityReferences: bool) -> DOMNodeIterator: ...
    def create_ns_resolver(self, nodeResolver: DOMNode) -> DOMXPathNSResolver: ...
    def create_processing_instruction(self, target: str, data: str) -> DOMProcessingInstruction: ...
    def create_range(self) -> DOMRange: ...
    def create_text_node(self, data: str) -> DOMText: ...
    def create_tree_walker(self, root: DOMNode, whatToShow: int, filter: DOMNodeFilter, expandEntityReferences: bool) -> DOMTreeWalker: ...
    def element_from_point(self, x: int, y: int) -> DOMElement: ...
    def evaluate(self, expression: str, contextNode: DOMNode, resolver: DOMXPathNSResolver, type: gushort, inResult: DOMXPathResult) -> DOMXPathResult: ...
    def exec_command(self, command: str, userInterface: bool, value: str) -> bool: ...
    def exit_pointer_lock(self) -> None: ...
    def get_active_element(self) -> DOMElement: ...
    def get_anchors(self) -> DOMHTMLCollection: ...
    def get_applets(self) -> DOMHTMLCollection: ...
    def get_body(self) -> DOMHTMLElement: ...
    def get_character_set(self) -> str: ...
    def get_charset(self) -> str: ...
    def get_child_element_count(self) -> int: ...
    def get_children(self) -> DOMHTMLCollection: ...
    def get_compat_mode(self) -> str: ...
    def get_content_type(self) -> str: ...
    def get_cookie(self) -> str: ...
    def get_current_script(self) -> DOMHTMLScriptElement: ...
    def get_default_charset(self) -> str: ...
    def get_default_view(self) -> DOMDOMWindow: ...
    def get_design_mode(self) -> str: ...
    def get_dir(self) -> str: ...
    def get_doctype(self) -> DOMDocumentType: ...
    def get_document_element(self) -> DOMElement: ...
    def get_document_uri(self) -> str: ...
    def get_domain(self) -> str: ...
    def get_element_by_id(self, elementId: str) -> DOMElement: ...
    def get_elements_by_class_name(self, class_name: str) -> DOMNodeList: ...
    def get_elements_by_class_name_as_html_collection(self, classNames: str) -> DOMHTMLCollection: ...
    def get_elements_by_name(self, elementName: str) -> DOMNodeList: ...
    def get_elements_by_tag_name(self, tag_name: str) -> DOMNodeList: ...
    def get_elements_by_tag_name_as_html_collection(self, tagname: str) -> DOMHTMLCollection: ...
    def get_elements_by_tag_name_ns(self, namespace_uri: str, tag_name: str) -> DOMNodeList: ...
    def get_elements_by_tag_name_ns_as_html_collection(self, namespaceURI: str, localName: str) -> DOMHTMLCollection: ...
    def get_embeds(self) -> DOMHTMLCollection: ...
    def get_first_element_child(self) -> DOMElement: ...
    def get_forms(self) -> DOMHTMLCollection: ...
    def get_head(self) -> DOMHTMLHeadElement: ...
    def get_hidden(self) -> bool: ...
    def get_images(self) -> DOMHTMLCollection: ...
    def get_implementation(self) -> DOMDOMImplementation: ...
    def get_input_encoding(self) -> str: ...
    def get_last_element_child(self) -> DOMElement: ...
    def get_last_modified(self) -> str: ...
    def get_links(self) -> DOMHTMLCollection: ...
    def get_origin(self) -> str: ...
    def get_override_style(self, element: DOMElement, pseudoElement: str) -> DOMCSSStyleDeclaration: ...
    def get_plugins(self) -> DOMHTMLCollection: ...
    def get_pointer_lock_element(self) -> DOMElement: ...
    def get_preferred_stylesheet_set(self) -> str: ...
    def get_ready_state(self) -> str: ...
    def get_referrer(self) -> str: ...
    def get_scripts(self) -> DOMHTMLCollection: ...
    def get_scrolling_element(self) -> DOMElement: ...
    def get_selected_stylesheet_set(self) -> str: ...
    def get_style_sheets(self) -> DOMStyleSheetList: ...
    def get_title(self) -> str: ...
    def get_url(self) -> str: ...
    def get_visibility_state(self) -> str: ...
    def get_webkit_current_fullscreen_element(self) -> DOMElement: ...
    def get_webkit_fullscreen_element(self) -> DOMElement: ...
    def get_webkit_fullscreen_enabled(self) -> bool: ...
    def get_webkit_fullscreen_keyboard_input_allowed(self) -> bool: ...
    def get_webkit_is_fullscreen(self) -> bool: ...
    def get_xml_encoding(self) -> str: ...
    def get_xml_standalone(self) -> bool: ...
    def get_xml_version(self) -> str: ...
    def has_focus(self) -> bool: ...
    def import_node(self, importedNode: DOMNode, deep: bool) -> DOMNode: ...
    def query_command_enabled(self, command: str) -> bool: ...
    def query_command_indeterm(self, command: str) -> bool: ...
    def query_command_state(self, command: str) -> bool: ...
    def query_command_supported(self, command: str) -> bool: ...
    def query_command_value(self, command: str) -> str: ...
    def query_selector(self, selectors: str) -> DOMElement: ...
    def query_selector_all(self, selectors: str) -> DOMNodeList: ...
    def set_body(self, value: DOMHTMLElement) -> None: ...
    def set_charset(self, value: str) -> None: ...
    def set_cookie(self, value: str) -> None: ...
    def set_design_mode(self, value: str) -> None: ...
    def set_dir(self, value: str) -> None: ...
    def set_document_uri(self, value: str) -> None: ...
    def set_selected_stylesheet_set(self, value: str) -> None: ...
    def set_title(self, value: str) -> None: ...
    def set_xml_standalone(self, value: bool) -> None: ...
    def set_xml_version(self, value: str) -> None: ...
    def webkit_cancel_fullscreen(self) -> None: ...
    def webkit_exit_fullscreen(self) -> None: ...

class DOMDocumentFragment(DOMNode, DOMEventTarget): 
    def get_child_element_count(self) -> int: ...
    def get_children(self) -> DOMHTMLCollection: ...
    def get_element_by_id(self, elementId: str) -> DOMElement: ...
    def get_first_element_child(self) -> DOMElement: ...
    def get_last_element_child(self) -> DOMElement: ...
    def query_selector(self, selectors: str) -> DOMElement: ...
    def query_selector_all(self, selectors: str) -> DOMNodeList: ...

class DOMDocumentType(DOMNode, DOMEventTarget): 
    def get_entities(self) -> DOMNamedNodeMap: ...
    def get_internal_subset(self) -> str: ...
    def get_name(self) -> str: ...
    def get_notations(self) -> DOMNamedNodeMap: ...
    def get_public_id(self) -> str: ...
    def get_system_id(self) -> str: ...

class DOMElement(DOMNode, DOMEventTarget): 
    def blur(self) -> None: ...
    def closest(self, selectors: str) -> DOMElement: ...
    def focus(self) -> None: ...
    def get_attribute(self, name: str) -> str: ...
    def get_attribute_node(self, name: str) -> DOMAttr: ...
    def get_attribute_node_ns(self, namespaceURI: str, localName: str) -> DOMAttr: ...
    def get_attribute_ns(self, namespaceURI: str, localName: str) -> str: ...
    def get_attributes(self) -> DOMNamedNodeMap: ...
    def get_bounding_client_rect(self) -> DOMClientRect: ...
    def get_child_element_count(self) -> int: ...
    def get_children(self) -> DOMHTMLCollection: ...
    def get_class_list(self) -> DOMDOMTokenList: ...
    def get_class_name(self) -> str: ...
    def get_client_height(self) -> float: ...
    def get_client_left(self) -> float: ...
    def get_client_rects(self) -> DOMClientRectList: ...
    def get_client_top(self) -> float: ...
    def get_client_width(self) -> float: ...
    def get_elements_by_class_name(self, class_name: str) -> DOMNodeList: ...
    def get_elements_by_class_name_as_html_collection(self, name: str) -> DOMHTMLCollection: ...
    def get_elements_by_tag_name(self, tag_name: str) -> DOMNodeList: ...
    def get_elements_by_tag_name_as_html_collection(self, name: str) -> DOMHTMLCollection: ...
    def get_elements_by_tag_name_ns(self, namespace_uri: str, tag_name: str) -> DOMNodeList: ...
    def get_elements_by_tag_name_ns_as_html_collection(self, namespaceURI: str, localName: str) -> DOMHTMLCollection: ...
    def get_first_element_child(self) -> DOMElement: ...
    def get_id(self) -> str: ...
    def get_inner_html(self) -> str: ...
    def get_last_element_child(self) -> DOMElement: ...
    def get_local_name(self) -> str: ...
    def get_namespace_uri(self) -> str: ...
    def get_next_element_sibling(self) -> DOMElement: ...
    def get_offset_height(self) -> float: ...
    def get_offset_left(self) -> float: ...
    def get_offset_parent(self) -> DOMElement: ...
    def get_offset_top(self) -> float: ...
    def get_offset_width(self) -> float: ...
    def get_outer_html(self) -> str: ...
    def get_prefix(self) -> str: ...
    def get_previous_element_sibling(self) -> DOMElement: ...
    def get_scroll_height(self) -> int: ...
    def get_scroll_left(self) -> int: ...
    def get_scroll_top(self) -> int: ...
    def get_scroll_width(self) -> int: ...
    def get_style(self) -> DOMCSSStyleDeclaration: ...
    def get_tag_name(self) -> str: ...
    def get_webkit_region_overset(self) -> str: ...
    def has_attribute(self, name: str) -> bool: ...
    def has_attribute_ns(self, namespaceURI: str, localName: str) -> bool: ...
    def has_attributes(self) -> bool: ...
    def html_input_element_get_auto_filled(self) -> bool: ...
    def html_input_element_is_user_edited(self) -> bool: ...
    def html_input_element_set_auto_filled(self, auto_filled: bool) -> None: ...
    def html_input_element_set_editing_value(self, value: str) -> None: ...
    def insert_adjacent_element(self, where: str, element: DOMElement) -> DOMElement: ...
    def insert_adjacent_html(self, where: str, html: str) -> None: ...
    def insert_adjacent_text(self, where: str, text: str) -> None: ...
    def matches(self, selectors: str) -> bool: ...
    def query_selector(self, selectors: str) -> DOMElement: ...
    def query_selector_all(self, selectors: str) -> DOMNodeList: ...
    def remove(self) -> None: ...
    def remove_attribute(self, name: str) -> None: ...
    def remove_attribute_node(self, oldAttr: DOMAttr) -> DOMAttr: ...
    def remove_attribute_ns(self, namespaceURI: str, localName: str) -> None: ...
    def request_pointer_lock(self) -> None: ...
    def scroll_by_lines(self, lines: int) -> None: ...
    def scroll_by_pages(self, pages: int) -> None: ...
    def scroll_into_view(self, alignWithTop: bool) -> None: ...
    def scroll_into_view_if_needed(self, centerIfNeeded: bool) -> None: ...
    def set_attribute(self, name: str, value: str) -> None: ...
    def set_attribute_node(self, newAttr: DOMAttr) -> DOMAttr: ...
    def set_attribute_node_ns(self, newAttr: DOMAttr) -> DOMAttr: ...
    def set_attribute_ns(self, namespaceURI: str, qualifiedName: str, value: str) -> None: ...
    def set_class_name(self, value: str) -> None: ...
    def set_id(self, value: str) -> None: ...
    def set_inner_html(self, value: str) -> None: ...
    def set_outer_html(self, value: str) -> None: ...
    def set_scroll_left(self, value: int) -> None: ...
    def set_scroll_top(self, value: int) -> None: ...
    def webkit_matches_selector(self, selectors: str) -> bool: ...
    def webkit_request_fullscreen(self) -> None: ...

class DOMEntityReference(DOMNode, DOMEventTarget): ...

class DOMEvent(DOMObject): 
    def get_bubbles(self) -> bool: ...
    def get_cancel_bubble(self) -> bool: ...
    def get_cancelable(self) -> bool: ...
    def get_current_target(self) -> DOMEventTarget: ...
    def get_event_phase(self) -> gushort: ...
    def get_event_type(self) -> str: ...
    def get_return_value(self) -> bool: ...
    def get_src_element(self) -> DOMEventTarget: ...
    def get_target(self) -> DOMEventTarget: ...
    def get_time_stamp(self) -> int: ...
    def init_event(self, eventTypeArg: str, canBubbleArg: bool, cancelableArg: bool) -> None: ...
    def prevent_default(self) -> None: ...
    def set_cancel_bubble(self, value: bool) -> None: ...
    def set_return_value(self, value: bool) -> None: ...
    def stop_propagation(self) -> None: ...

class DOMFile(DOMBlob): 
    def get_name(self) -> str: ...

class DOMFileList(DOMObject): 
    def get_length(self) -> int: ...
    def item(self, index: int) -> DOMFile: ...

class DOMHTMLAnchorElement(DOMHTMLElement, DOMEventTarget): 
    def get_charset(self) -> str: ...
    def get_coords(self) -> str: ...
    def get_hash(self) -> str: ...
    def get_host(self) -> str: ...
    def get_hostname(self) -> str: ...
    def get_href(self) -> str: ...
    def get_hreflang(self) -> str: ...
    def get_name(self) -> str: ...
    def get_pathname(self) -> str: ...
    def get_port(self) -> str: ...
    def get_protocol(self) -> str: ...
    def get_rel(self) -> str: ...
    def get_rev(self) -> str: ...
    def get_search(self) -> str: ...
    def get_shape(self) -> str: ...
    def get_target(self) -> str: ...
    def get_text(self) -> str: ...
    def get_type_attr(self) -> str: ...
    def set_charset(self, value: str) -> None: ...
    def set_coords(self, value: str) -> None: ...
    def set_hash(self, value: str) -> None: ...
    def set_host(self, value: str) -> None: ...
    def set_hostname(self, value: str) -> None: ...
    def set_href(self, value: str) -> None: ...
    def set_hreflang(self, value: str) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_pathname(self, value: str) -> None: ...
    def set_port(self, value: str) -> None: ...
    def set_protocol(self, value: str) -> None: ...
    def set_rel(self, value: str) -> None: ...
    def set_rev(self, value: str) -> None: ...
    def set_search(self, value: str) -> None: ...
    def set_shape(self, value: str) -> None: ...
    def set_target(self, value: str) -> None: ...
    def set_text(self, value: str) -> None: ...
    def set_type_attr(self, value: str) -> None: ...

class DOMHTMLAppletElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def get_alt(self) -> str: ...
    def get_archive(self) -> str: ...
    def get_code(self) -> str: ...
    def get_code_base(self) -> str: ...
    def get_height(self) -> str: ...
    def get_hspace(self) -> int: ...
    def get_name(self) -> str: ...
    def get_object(self) -> str: ...
    def get_vspace(self) -> int: ...
    def get_width(self) -> str: ...
    def set_align(self, value: str) -> None: ...
    def set_alt(self, value: str) -> None: ...
    def set_archive(self, value: str) -> None: ...
    def set_code(self, value: str) -> None: ...
    def set_code_base(self, value: str) -> None: ...
    def set_height(self, value: str) -> None: ...
    def set_hspace(self, value: int) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_object(self, value: str) -> None: ...
    def set_vspace(self, value: int) -> None: ...
    def set_width(self, value: str) -> None: ...

class DOMHTMLAreaElement(DOMHTMLElement, DOMEventTarget): 
    def get_alt(self) -> str: ...
    def get_coords(self) -> str: ...
    def get_hash(self) -> str: ...
    def get_host(self) -> str: ...
    def get_hostname(self) -> str: ...
    def get_href(self) -> str: ...
    def get_no_href(self) -> bool: ...
    def get_pathname(self) -> str: ...
    def get_port(self) -> str: ...
    def get_protocol(self) -> str: ...
    def get_search(self) -> str: ...
    def get_shape(self) -> str: ...
    def get_target(self) -> str: ...
    def set_alt(self, value: str) -> None: ...
    def set_coords(self, value: str) -> None: ...
    def set_hash(self, value: str) -> None: ...
    def set_host(self, value: str) -> None: ...
    def set_hostname(self, value: str) -> None: ...
    def set_href(self, value: str) -> None: ...
    def set_no_href(self, value: bool) -> None: ...
    def set_pathname(self, value: str) -> None: ...
    def set_port(self, value: str) -> None: ...
    def set_protocol(self, value: str) -> None: ...
    def set_search(self, value: str) -> None: ...
    def set_shape(self, value: str) -> None: ...
    def set_target(self, value: str) -> None: ...

class DOMHTMLBRElement(DOMHTMLElement, DOMEventTarget): 
    def get_clear(self) -> str: ...
    def set_clear(self, value: str) -> None: ...

class DOMHTMLBaseElement(DOMHTMLElement, DOMEventTarget): 
    def get_href(self) -> str: ...
    def get_target(self) -> str: ...
    def set_href(self, value: str) -> None: ...
    def set_target(self, value: str) -> None: ...

class DOMHTMLBaseFontElement(DOMHTMLElement, DOMEventTarget): 
    def get_color(self) -> str: ...
    def get_face(self) -> str: ...
    def get_size(self) -> int: ...
    def set_color(self, value: str) -> None: ...
    def set_face(self, value: str) -> None: ...
    def set_size(self, value: int) -> None: ...

class DOMHTMLBodyElement(DOMHTMLElement, DOMEventTarget): 
    def get_a_link(self) -> str: ...
    def get_background(self) -> str: ...
    def get_bg_color(self) -> str: ...
    def get_link(self) -> str: ...
    def get_text(self) -> str: ...
    def get_v_link(self) -> str: ...
    def set_a_link(self, value: str) -> None: ...
    def set_background(self, value: str) -> None: ...
    def set_bg_color(self, value: str) -> None: ...
    def set_link(self, value: str) -> None: ...
    def set_text(self, value: str) -> None: ...
    def set_v_link(self, value: str) -> None: ...

class DOMHTMLButtonElement(DOMHTMLElement, DOMEventTarget): 
    def get_autofocus(self) -> bool: ...
    def get_button_type(self) -> str: ...
    def get_disabled(self) -> bool: ...
    def get_form(self) -> DOMHTMLFormElement: ...
    def get_name(self) -> str: ...
    def get_value(self) -> str: ...
    def get_will_validate(self) -> bool: ...
    def set_autofocus(self, value: bool) -> None: ...
    def set_button_type(self, value: str) -> None: ...
    def set_disabled(self, value: bool) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_value(self, value: str) -> None: ...

class DOMHTMLCanvasElement(DOMHTMLElement, DOMEventTarget): 
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def set_height(self, value: int) -> None: ...
    def set_width(self, value: int) -> None: ...

class DOMHTMLCollection(DOMObject): 
    def get_length(self) -> int: ...
    def item(self, index: int) -> DOMNode: ...
    def named_item(self, name: str) -> DOMNode: ...

class DOMHTMLDListElement(DOMHTMLElement, DOMEventTarget): 
    def get_compact(self) -> bool: ...
    def set_compact(self, value: bool) -> None: ...

class DOMHTMLDirectoryElement(DOMHTMLElement, DOMEventTarget): 
    def get_compact(self) -> bool: ...
    def set_compact(self, value: bool) -> None: ...

class DOMHTMLDivElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def set_align(self, value: str) -> None: ...

class DOMHTMLDocument(DOMDocument, DOMEventTarget): 
    def capture_events(self) -> None: ...
    def clear(self) -> None: ...
    def close(self) -> None: ...
    def get_alink_color(self) -> str: ...
    def get_bg_color(self) -> str: ...
    def get_compat_mode(self) -> str: ...
    def get_design_mode(self) -> str: ...
    def get_dir(self) -> str: ...
    def get_embeds(self) -> DOMHTMLCollection: ...
    def get_fg_color(self) -> str: ...
    def get_height(self) -> int: ...
    def get_link_color(self) -> str: ...
    def get_plugins(self) -> DOMHTMLCollection: ...
    def get_scripts(self) -> DOMHTMLCollection: ...
    def get_vlink_color(self) -> str: ...
    def get_width(self) -> int: ...
    def release_events(self) -> None: ...
    def set_alink_color(self, value: str) -> None: ...
    def set_bg_color(self, value: str) -> None: ...
    def set_design_mode(self, value: str) -> None: ...
    def set_dir(self, value: str) -> None: ...
    def set_fg_color(self, value: str) -> None: ...
    def set_link_color(self, value: str) -> None: ...
    def set_vlink_color(self, value: str) -> None: ...

class DOMHTMLElement(DOMElement, DOMEventTarget): 
    def click(self) -> None: ...
    def get_access_key(self) -> str: ...
    def get_children(self) -> DOMHTMLCollection: ...
    def get_content_editable(self) -> str: ...
    def get_dir(self) -> str: ...
    def get_draggable(self) -> bool: ...
    def get_hidden(self) -> bool: ...
    def get_inner_html(self) -> str: ...
    def get_inner_text(self) -> str: ...
    def get_is_content_editable(self) -> bool: ...
    def get_lang(self) -> str: ...
    def get_outer_html(self) -> str: ...
    def get_outer_text(self) -> str: ...
    def get_spellcheck(self) -> bool: ...
    def get_tab_index(self) -> int: ...
    def get_title(self) -> str: ...
    def get_translate(self) -> bool: ...
    def get_webkitdropzone(self) -> str: ...
    def set_access_key(self, value: str) -> None: ...
    def set_content_editable(self, value: str) -> None: ...
    def set_dir(self, value: str) -> None: ...
    def set_draggable(self, value: bool) -> None: ...
    def set_hidden(self, value: bool) -> None: ...
    def set_inner_html(self, contents: str) -> None: ...
    def set_inner_text(self, value: str) -> None: ...
    def set_lang(self, value: str) -> None: ...
    def set_outer_html(self, contents: str) -> None: ...
    def set_outer_text(self, value: str) -> None: ...
    def set_spellcheck(self, value: bool) -> None: ...
    def set_tab_index(self, value: int) -> None: ...
    def set_title(self, value: str) -> None: ...
    def set_translate(self, value: bool) -> None: ...
    def set_webkitdropzone(self, value: str) -> None: ...

class DOMHTMLEmbedElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def get_height(self) -> int: ...
    def get_name(self) -> str: ...
    def get_src(self) -> str: ...
    def get_type_attr(self) -> str: ...
    def get_width(self) -> int: ...
    def set_align(self, value: str) -> None: ...
    def set_height(self, value: int) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_src(self, value: str) -> None: ...
    def set_type_attr(self, value: str) -> None: ...
    def set_width(self, value: int) -> None: ...

class DOMHTMLFieldSetElement(DOMHTMLElement, DOMEventTarget): 
    def get_form(self) -> DOMHTMLFormElement: ...

class DOMHTMLFontElement(DOMHTMLElement, DOMEventTarget): 
    def get_color(self) -> str: ...
    def get_face(self) -> str: ...
    def get_size(self) -> str: ...
    def set_color(self, value: str) -> None: ...
    def set_face(self, value: str) -> None: ...
    def set_size(self, value: str) -> None: ...

class DOMHTMLFormElement(DOMHTMLElement, DOMEventTarget): 
    def get_accept_charset(self) -> str: ...
    def get_action(self) -> str: ...
    def get_elements(self) -> DOMHTMLCollection: ...
    def get_encoding(self) -> str: ...
    def get_enctype(self) -> str: ...
    def get_length(self) -> int: ...
    def get_method(self) -> str: ...
    def get_name(self) -> str: ...
    def get_target(self) -> str: ...
    def reset(self) -> None: ...
    def set_accept_charset(self, value: str) -> None: ...
    def set_action(self, value: str) -> None: ...
    def set_encoding(self, value: str) -> None: ...
    def set_enctype(self, value: str) -> None: ...
    def set_method(self, value: str) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_target(self, value: str) -> None: ...
    def submit(self) -> None: ...

class DOMHTMLFrameElement(DOMHTMLElement, DOMEventTarget): 
    def get_content_document(self) -> DOMDocument: ...
    def get_content_window(self) -> DOMDOMWindow: ...
    def get_frame_border(self) -> str: ...
    def get_height(self) -> int: ...
    def get_long_desc(self) -> str: ...
    def get_margin_height(self) -> str: ...
    def get_margin_width(self) -> str: ...
    def get_name(self) -> str: ...
    def get_no_resize(self) -> bool: ...
    def get_scrolling(self) -> str: ...
    def get_src(self) -> str: ...
    def get_width(self) -> int: ...
    def set_frame_border(self, value: str) -> None: ...
    def set_long_desc(self, value: str) -> None: ...
    def set_margin_height(self, value: str) -> None: ...
    def set_margin_width(self, value: str) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_no_resize(self, value: bool) -> None: ...
    def set_scrolling(self, value: str) -> None: ...
    def set_src(self, value: str) -> None: ...

class DOMHTMLFrameSetElement(DOMHTMLElement, DOMEventTarget): 
    def get_cols(self) -> str: ...
    def get_rows(self) -> str: ...
    def set_cols(self, value: str) -> None: ...
    def set_rows(self, value: str) -> None: ...

class DOMHTMLHRElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def get_no_shade(self) -> bool: ...
    def get_size(self) -> str: ...
    def get_width(self) -> str: ...
    def set_align(self, value: str) -> None: ...
    def set_no_shade(self, value: bool) -> None: ...
    def set_size(self, value: str) -> None: ...
    def set_width(self, value: str) -> None: ...

class DOMHTMLHeadElement(DOMHTMLElement, DOMEventTarget): 
    def get_profile(self) -> str: ...
    def set_profile(self, value: str) -> None: ...

class DOMHTMLHeadingElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def set_align(self, value: str) -> None: ...

class DOMHTMLHtmlElement(DOMHTMLElement, DOMEventTarget): 
    def get_version(self) -> str: ...
    def set_version(self, value: str) -> None: ...

class DOMHTMLIFrameElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def get_content_document(self) -> DOMDocument: ...
    def get_content_window(self) -> DOMDOMWindow: ...
    def get_frame_border(self) -> str: ...
    def get_height(self) -> str: ...
    def get_long_desc(self) -> str: ...
    def get_margin_height(self) -> str: ...
    def get_margin_width(self) -> str: ...
    def get_name(self) -> str: ...
    def get_scrolling(self) -> str: ...
    def get_src(self) -> str: ...
    def get_width(self) -> str: ...
    def set_align(self, value: str) -> None: ...
    def set_frame_border(self, value: str) -> None: ...
    def set_height(self, value: str) -> None: ...
    def set_long_desc(self, value: str) -> None: ...
    def set_margin_height(self, value: str) -> None: ...
    def set_margin_width(self, value: str) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_scrolling(self, value: str) -> None: ...
    def set_src(self, value: str) -> None: ...
    def set_width(self, value: str) -> None: ...

class DOMHTMLImageElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def get_alt(self) -> str: ...
    def get_border(self) -> str: ...
    def get_complete(self) -> bool: ...
    def get_height(self) -> int: ...
    def get_hspace(self) -> int: ...
    def get_is_map(self) -> bool: ...
    def get_long_desc(self) -> str: ...
    def get_lowsrc(self) -> str: ...
    def get_name(self) -> str: ...
    def get_natural_height(self) -> int: ...
    def get_natural_width(self) -> int: ...
    def get_src(self) -> str: ...
    def get_use_map(self) -> str: ...
    def get_vspace(self) -> int: ...
    def get_width(self) -> int: ...
    def get_x(self) -> int: ...
    def get_y(self) -> int: ...
    def set_align(self, value: str) -> None: ...
    def set_alt(self, value: str) -> None: ...
    def set_border(self, value: str) -> None: ...
    def set_height(self, value: int) -> None: ...
    def set_hspace(self, value: int) -> None: ...
    def set_is_map(self, value: bool) -> None: ...
    def set_long_desc(self, value: str) -> None: ...
    def set_lowsrc(self, value: str) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_src(self, value: str) -> None: ...
    def set_use_map(self, value: str) -> None: ...
    def set_vspace(self, value: int) -> None: ...
    def set_width(self, value: int) -> None: ...

class DOMHTMLInputElement(DOMHTMLElement, DOMEventTarget): 
    def get_accept(self) -> str: ...
    def get_align(self) -> str: ...
    def get_alt(self) -> str: ...
    def get_auto_filled(self) -> bool: ...
    def get_autofocus(self) -> bool: ...
    def get_capture(self) -> bool: ...
    def get_capture_type(self) -> str: ...
    def get_checked(self) -> bool: ...
    def get_default_checked(self) -> bool: ...
    def get_default_value(self) -> str: ...
    def get_disabled(self) -> bool: ...
    def get_files(self) -> DOMFileList: ...
    def get_form(self) -> DOMHTMLFormElement: ...
    def get_height(self) -> int: ...
    def get_indeterminate(self) -> bool: ...
    def get_input_type(self) -> str: ...
    def get_max_length(self) -> int: ...
    def get_multiple(self) -> bool: ...
    def get_name(self) -> str: ...
    def get_read_only(self) -> bool: ...
    def get_size(self) -> int: ...
    def get_src(self) -> str: ...
    def get_use_map(self) -> str: ...
    def get_value(self) -> str: ...
    def get_width(self) -> int: ...
    def get_will_validate(self) -> bool: ...
    def is_edited(self) -> bool: ...
    def select(self) -> None: ...
    def set_accept(self, value: str) -> None: ...
    def set_align(self, value: str) -> None: ...
    def set_alt(self, value: str) -> None: ...
    def set_auto_filled(self, value: bool) -> None: ...
    def set_autofocus(self, value: bool) -> None: ...
    def set_capture_type(self, value: str) -> None: ...
    def set_checked(self, value: bool) -> None: ...
    def set_default_checked(self, value: bool) -> None: ...
    def set_default_value(self, value: str) -> None: ...
    def set_disabled(self, value: bool) -> None: ...
    def set_editing_value(self, value: str) -> None: ...
    def set_files(self, value: DOMFileList) -> None: ...
    def set_height(self, value: int) -> None: ...
    def set_indeterminate(self, value: bool) -> None: ...
    def set_input_type(self, value: str) -> None: ...
    def set_max_length(self, value: int) -> None: ...
    def set_multiple(self, value: bool) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_read_only(self, value: bool) -> None: ...
    def set_size(self, value: int) -> None: ...
    def set_src(self, value: str) -> None: ...
    def set_use_map(self, value: str) -> None: ...
    def set_value(self, value: str) -> None: ...
    def set_width(self, value: int) -> None: ...

class DOMHTMLLIElement(DOMHTMLElement, DOMEventTarget): 
    def get_type_attr(self) -> str: ...
    def get_value(self) -> int: ...
    def set_type_attr(self, value: str) -> None: ...
    def set_value(self, value: int) -> None: ...

class DOMHTMLLabelElement(DOMHTMLElement, DOMEventTarget): 
    def get_form(self) -> DOMHTMLFormElement: ...
    def get_html_for(self) -> str: ...
    def set_html_for(self, value: str) -> None: ...

class DOMHTMLLegendElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def get_form(self) -> DOMHTMLFormElement: ...
    def set_align(self, value: str) -> None: ...

class DOMHTMLLinkElement(DOMHTMLElement, DOMEventTarget): 
    def get_charset(self) -> str: ...
    def get_disabled(self) -> bool: ...
    def get_href(self) -> str: ...
    def get_hreflang(self) -> str: ...
    def get_media(self) -> str: ...
    def get_rel(self) -> str: ...
    def get_rev(self) -> str: ...
    def get_sheet(self) -> DOMStyleSheet: ...
    def get_sizes(self) -> DOMDOMTokenList: ...
    def get_target(self) -> str: ...
    def get_type_attr(self) -> str: ...
    def set_charset(self, value: str) -> None: ...
    def set_disabled(self, value: bool) -> None: ...
    def set_href(self, value: str) -> None: ...
    def set_hreflang(self, value: str) -> None: ...
    def set_media(self, value: str) -> None: ...
    def set_rel(self, value: str) -> None: ...
    def set_rev(self, value: str) -> None: ...
    def set_sizes(self, value: str) -> None: ...
    def set_target(self, value: str) -> None: ...
    def set_type_attr(self, value: str) -> None: ...

class DOMHTMLMapElement(DOMHTMLElement, DOMEventTarget): 
    def get_areas(self) -> DOMHTMLCollection: ...
    def get_name(self) -> str: ...
    def set_name(self, value: str) -> None: ...

class DOMHTMLMarqueeElement(DOMHTMLElement, DOMEventTarget): 
    def start(self) -> None: ...
    def stop(self) -> None: ...

class DOMHTMLMenuElement(DOMHTMLElement, DOMEventTarget): 
    def get_compact(self) -> bool: ...
    def set_compact(self, value: bool) -> None: ...

class DOMHTMLMetaElement(DOMHTMLElement, DOMEventTarget): 
    def get_content(self) -> str: ...
    def get_http_equiv(self) -> str: ...
    def get_name(self) -> str: ...
    def get_scheme(self) -> str: ...
    def set_content(self, value: str) -> None: ...
    def set_http_equiv(self, value: str) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_scheme(self, value: str) -> None: ...

class DOMHTMLModElement(DOMHTMLElement, DOMEventTarget): 
    def get_cite(self) -> str: ...
    def get_date_time(self) -> str: ...
    def set_cite(self, value: str) -> None: ...
    def set_date_time(self, value: str) -> None: ...

class DOMHTMLOListElement(DOMHTMLElement, DOMEventTarget): 
    def get_compact(self) -> bool: ...
    def get_start(self) -> int: ...
    def get_type_attr(self) -> str: ...
    def set_compact(self, value: bool) -> None: ...
    def set_start(self, value: int) -> None: ...
    def set_type_attr(self, value: str) -> None: ...

class DOMHTMLObjectElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def get_archive(self) -> str: ...
    def get_border(self) -> str: ...
    def get_code(self) -> str: ...
    def get_code_base(self) -> str: ...
    def get_code_type(self) -> str: ...
    def get_content_document(self) -> DOMDocument: ...
    def get_data(self) -> str: ...
    def get_declare(self) -> bool: ...
    def get_form(self) -> DOMHTMLFormElement: ...
    def get_height(self) -> str: ...
    def get_hspace(self) -> int: ...
    def get_name(self) -> str: ...
    def get_standby(self) -> str: ...
    def get_type_attr(self) -> str: ...
    def get_use_map(self) -> str: ...
    def get_vspace(self) -> int: ...
    def get_width(self) -> str: ...
    def set_align(self, value: str) -> None: ...
    def set_archive(self, value: str) -> None: ...
    def set_border(self, value: str) -> None: ...
    def set_code(self, value: str) -> None: ...
    def set_code_base(self, value: str) -> None: ...
    def set_code_type(self, value: str) -> None: ...
    def set_data(self, value: str) -> None: ...
    def set_declare(self, value: bool) -> None: ...
    def set_height(self, value: str) -> None: ...
    def set_hspace(self, value: int) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_standby(self, value: str) -> None: ...
    def set_type_attr(self, value: str) -> None: ...
    def set_use_map(self, value: str) -> None: ...
    def set_vspace(self, value: int) -> None: ...
    def set_width(self, value: str) -> None: ...

class DOMHTMLOptGroupElement(DOMHTMLElement, DOMEventTarget): 
    def get_disabled(self) -> bool: ...
    def get_label(self) -> str: ...
    def set_disabled(self, value: bool) -> None: ...
    def set_label(self, value: str) -> None: ...

class DOMHTMLOptionElement(DOMHTMLElement, DOMEventTarget): 
    def get_default_selected(self) -> bool: ...
    def get_disabled(self) -> bool: ...
    def get_form(self) -> DOMHTMLFormElement: ...
    def get_index(self) -> int: ...
    def get_label(self) -> str: ...
    def get_selected(self) -> bool: ...
    def get_text(self) -> str: ...
    def get_value(self) -> str: ...
    def set_default_selected(self, value: bool) -> None: ...
    def set_disabled(self, value: bool) -> None: ...
    def set_label(self, value: str) -> None: ...
    def set_selected(self, value: bool) -> None: ...
    def set_value(self, value: str) -> None: ...

class DOMHTMLOptionsCollection(DOMHTMLCollection): 
    def get_length(self) -> int: ...
    def get_selected_index(self) -> int: ...
    def named_item(self, name: str) -> DOMNode: ...
    def set_selected_index(self, value: int) -> None: ...

class DOMHTMLParagraphElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def set_align(self, value: str) -> None: ...

class DOMHTMLParamElement(DOMHTMLElement, DOMEventTarget): 
    def get_name(self) -> str: ...
    def get_type_attr(self) -> str: ...
    def get_value(self) -> str: ...
    def get_value_type(self) -> str: ...
    def set_name(self, value: str) -> None: ...
    def set_type_attr(self, value: str) -> None: ...
    def set_value(self, value: str) -> None: ...
    def set_value_type(self, value: str) -> None: ...

class DOMHTMLPreElement(DOMHTMLElement, DOMEventTarget): 
    def get_width(self) -> int: ...
    def get_wrap(self) -> bool: ...
    def set_width(self, value: int) -> None: ...
    def set_wrap(self, value: bool) -> None: ...

class DOMHTMLQuoteElement(DOMHTMLElement, DOMEventTarget): 
    def get_cite(self) -> str: ...
    def set_cite(self, value: str) -> None: ...

class DOMHTMLScriptElement(DOMHTMLElement, DOMEventTarget): 
    def get_charset(self) -> str: ...
    def get_defer(self) -> bool: ...
    def get_event(self) -> str: ...
    def get_html_for(self) -> str: ...
    def get_src(self) -> str: ...
    def get_text(self) -> str: ...
    def get_type_attr(self) -> str: ...
    def set_charset(self, value: str) -> None: ...
    def set_defer(self, value: bool) -> None: ...
    def set_event(self, value: str) -> None: ...
    def set_html_for(self, value: str) -> None: ...
    def set_src(self, value: str) -> None: ...
    def set_text(self, value: str) -> None: ...
    def set_type_attr(self, value: str) -> None: ...

class DOMHTMLSelectElement(DOMHTMLElement, DOMEventTarget): 
    def add(self, element: DOMHTMLElement, before: DOMHTMLElement) -> None: ...
    def get_autofocus(self) -> bool: ...
    def get_disabled(self) -> bool: ...
    def get_form(self) -> DOMHTMLFormElement: ...
    def get_length(self) -> int: ...
    def get_multiple(self) -> bool: ...
    def get_name(self) -> str: ...
    def get_options(self) -> DOMHTMLOptionsCollection: ...
    def get_select_type(self) -> str: ...
    def get_selected_index(self) -> int: ...
    def get_size(self) -> int: ...
    def get_value(self) -> str: ...
    def get_will_validate(self) -> bool: ...
    def item(self, index: int) -> DOMNode: ...
    def named_item(self, name: str) -> DOMNode: ...
    def remove(self, index: int) -> None: ...
    def set_autofocus(self, value: bool) -> None: ...
    def set_disabled(self, value: bool) -> None: ...
    def set_length(self, value: int) -> None: ...
    def set_multiple(self, value: bool) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_selected_index(self, value: int) -> None: ...
    def set_size(self, value: int) -> None: ...
    def set_value(self, value: str) -> None: ...

class DOMHTMLStyleElement(DOMHTMLElement, DOMEventTarget): 
    def get_disabled(self) -> bool: ...
    def get_media(self) -> str: ...
    def get_sheet(self) -> DOMStyleSheet: ...
    def get_type_attr(self) -> str: ...
    def set_disabled(self, value: bool) -> None: ...
    def set_media(self, value: str) -> None: ...
    def set_type_attr(self, value: str) -> None: ...

class DOMHTMLTableCaptionElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def set_align(self, value: str) -> None: ...

class DOMHTMLTableCellElement(DOMHTMLElement, DOMEventTarget): 
    def get_abbr(self) -> str: ...
    def get_align(self) -> str: ...
    def get_axis(self) -> str: ...
    def get_bg_color(self) -> str: ...
    def get_cell_index(self) -> int: ...
    def get_ch(self) -> str: ...
    def get_ch_off(self) -> str: ...
    def get_col_span(self) -> int: ...
    def get_headers(self) -> str: ...
    def get_height(self) -> str: ...
    def get_no_wrap(self) -> bool: ...
    def get_row_span(self) -> int: ...
    def get_scope(self) -> str: ...
    def get_v_align(self) -> str: ...
    def get_width(self) -> str: ...
    def set_abbr(self, value: str) -> None: ...
    def set_align(self, value: str) -> None: ...
    def set_axis(self, value: str) -> None: ...
    def set_bg_color(self, value: str) -> None: ...
    def set_ch(self, value: str) -> None: ...
    def set_ch_off(self, value: str) -> None: ...
    def set_col_span(self, value: int) -> None: ...
    def set_headers(self, value: str) -> None: ...
    def set_height(self, value: str) -> None: ...
    def set_no_wrap(self, value: bool) -> None: ...
    def set_row_span(self, value: int) -> None: ...
    def set_scope(self, value: str) -> None: ...
    def set_v_align(self, value: str) -> None: ...
    def set_width(self, value: str) -> None: ...

class DOMHTMLTableColElement(DOMHTMLElement, DOMEventTarget): 
    def get_align(self) -> str: ...
    def get_ch(self) -> str: ...
    def get_ch_off(self) -> str: ...
    def get_span(self) -> int: ...
    def get_v_align(self) -> str: ...
    def get_width(self) -> str: ...
    def set_align(self, value: str) -> None: ...
    def set_ch(self, value: str) -> None: ...
    def set_ch_off(self, value: str) -> None: ...
    def set_span(self, value: int) -> None: ...
    def set_v_align(self, value: str) -> None: ...
    def set_width(self, value: str) -> None: ...

class DOMHTMLTableElement(DOMHTMLElement, DOMEventTarget): 
    def create_caption(self) -> DOMHTMLElement: ...
    def create_t_foot(self) -> DOMHTMLElement: ...
    def create_t_head(self) -> DOMHTMLElement: ...
    def delete_caption(self) -> None: ...
    def delete_row(self, index: int) -> None: ...
    def delete_t_foot(self) -> None: ...
    def delete_t_head(self) -> None: ...
    def get_align(self) -> str: ...
    def get_bg_color(self) -> str: ...
    def get_border(self) -> str: ...
    def get_caption(self) -> DOMHTMLTableCaptionElement: ...
    def get_cell_padding(self) -> str: ...
    def get_cell_spacing(self) -> str: ...
    def get_rows(self) -> DOMHTMLCollection: ...
    def get_rules(self) -> str: ...
    def get_summary(self) -> str: ...
    def get_t_bodies(self) -> DOMHTMLCollection: ...
    def get_t_foot(self) -> DOMHTMLTableSectionElement: ...
    def get_t_head(self) -> DOMHTMLTableSectionElement: ...
    def get_width(self) -> str: ...
    def insert_row(self, index: int) -> DOMHTMLElement: ...
    def set_align(self, value: str) -> None: ...
    def set_bg_color(self, value: str) -> None: ...
    def set_border(self, value: str) -> None: ...
    def set_caption(self, value: DOMHTMLTableCaptionElement) -> None: ...
    def set_cell_padding(self, value: str) -> None: ...
    def set_cell_spacing(self, value: str) -> None: ...
    def set_rules(self, value: str) -> None: ...
    def set_summary(self, value: str) -> None: ...
    def set_t_foot(self, value: DOMHTMLTableSectionElement) -> None: ...
    def set_t_head(self, value: DOMHTMLTableSectionElement) -> None: ...
    def set_width(self, value: str) -> None: ...

class DOMHTMLTableRowElement(DOMHTMLElement, DOMEventTarget): 
    def delete_cell(self, index: int) -> None: ...
    def get_align(self) -> str: ...
    def get_bg_color(self) -> str: ...
    def get_cells(self) -> DOMHTMLCollection: ...
    def get_ch(self) -> str: ...
    def get_ch_off(self) -> str: ...
    def get_row_index(self) -> int: ...
    def get_section_row_index(self) -> int: ...
    def get_v_align(self) -> str: ...
    def insert_cell(self, index: int) -> DOMHTMLElement: ...
    def set_align(self, value: str) -> None: ...
    def set_bg_color(self, value: str) -> None: ...
    def set_ch(self, value: str) -> None: ...
    def set_ch_off(self, value: str) -> None: ...
    def set_v_align(self, value: str) -> None: ...

class DOMHTMLTableSectionElement(DOMHTMLElement, DOMEventTarget): 
    def delete_row(self, index: int) -> None: ...
    def get_align(self) -> str: ...
    def get_ch(self) -> str: ...
    def get_ch_off(self) -> str: ...
    def get_rows(self) -> DOMHTMLCollection: ...
    def get_v_align(self) -> str: ...
    def insert_row(self, index: int) -> DOMHTMLElement: ...
    def set_align(self, value: str) -> None: ...
    def set_ch(self, value: str) -> None: ...
    def set_ch_off(self, value: str) -> None: ...
    def set_v_align(self, value: str) -> None: ...

class DOMHTMLTextAreaElement(DOMHTMLElement, DOMEventTarget): 
    def get_area_type(self) -> str: ...
    def get_autofocus(self) -> bool: ...
    def get_cols(self) -> int: ...
    def get_default_value(self) -> str: ...
    def get_disabled(self) -> bool: ...
    def get_form(self) -> DOMHTMLFormElement: ...
    def get_name(self) -> str: ...
    def get_read_only(self) -> bool: ...
    def get_rows(self) -> int: ...
    def get_selection_end(self) -> int: ...
    def get_selection_start(self) -> int: ...
    def get_value(self) -> str: ...
    def get_will_validate(self) -> bool: ...
    def is_edited(self) -> bool: ...
    def select(self) -> None: ...
    def set_autofocus(self, value: bool) -> None: ...
    def set_cols(self, value: int) -> None: ...
    def set_default_value(self, value: str) -> None: ...
    def set_disabled(self, value: bool) -> None: ...
    def set_name(self, value: str) -> None: ...
    def set_read_only(self, value: bool) -> None: ...
    def set_rows(self, value: int) -> None: ...
    def set_selection_end(self, value: int) -> None: ...
    def set_selection_range(self, start: int, end: int, direction: str) -> None: ...
    def set_selection_start(self, value: int) -> None: ...
    def set_value(self, value: str) -> None: ...

class DOMHTMLTitleElement(DOMHTMLElement, DOMEventTarget): 
    def get_text(self) -> str: ...
    def set_text(self, value: str) -> None: ...

class DOMHTMLUListElement(DOMHTMLElement, DOMEventTarget): 
    def get_compact(self) -> bool: ...
    def get_type_attr(self) -> str: ...
    def set_compact(self, value: bool) -> None: ...
    def set_type_attr(self, value: str) -> None: ...

class DOMKeyboardEvent(DOMUIEvent): 
    def get_alt_graph_key(self) -> bool: ...
    def get_alt_key(self) -> bool: ...
    def get_ctrl_key(self) -> bool: ...
    def get_key_identifier(self) -> str: ...
    def get_key_location(self) -> int: ...
    def get_meta_key(self) -> bool: ...
    def get_modifier_state(self, keyIdentifierArg: str) -> bool: ...
    def get_shift_key(self) -> bool: ...
    def init_keyboard_event(self, type: str, canBubble: bool, cancelable: bool, view: DOMDOMWindow, keyIdentifier: str, location: int, ctrlKey: bool, altKey: bool, shiftKey: bool, metaKey: bool, altGraphKey: bool) -> None: ...

class DOMMediaList(DOMObject): 
    def append_medium(self, newMedium: str) -> None: ...
    def delete_medium(self, oldMedium: str) -> None: ...
    def get_length(self) -> int: ...
    def get_media_text(self) -> str: ...
    def item(self, index: int) -> str: ...
    def set_media_text(self, value: str) -> None: ...

class DOMMouseEvent(DOMUIEvent): 
    def get_alt_key(self) -> bool: ...
    def get_button(self) -> gushort: ...
    def get_client_x(self) -> int: ...
    def get_client_y(self) -> int: ...
    def get_ctrl_key(self) -> bool: ...
    def get_from_element(self) -> DOMNode: ...
    def get_meta_key(self) -> bool: ...
    def get_offset_x(self) -> int: ...
    def get_offset_y(self) -> int: ...
    def get_related_target(self) -> DOMEventTarget: ...
    def get_screen_x(self) -> int: ...
    def get_screen_y(self) -> int: ...
    def get_shift_key(self) -> bool: ...
    def get_to_element(self) -> DOMNode: ...
    def get_x(self) -> int: ...
    def get_y(self) -> int: ...
    def init_mouse_event(self, type: str, canBubble: bool, cancelable: bool, view: DOMDOMWindow, detail: int, screenX: int, screenY: int, clientX: int, clientY: int, ctrlKey: bool, altKey: bool, shiftKey: bool, metaKey: bool, button: gushort, relatedTarget: DOMEventTarget) -> None: ...

class DOMNamedNodeMap(DOMObject): 
    def get_length(self) -> int: ...
    def get_named_item(self, name: str) -> DOMNode: ...
    def get_named_item_ns(self, namespaceURI: str, localName: str) -> DOMNode: ...
    def item(self, index: int) -> DOMNode: ...
    def remove_named_item(self, name: str) -> DOMNode: ...
    def remove_named_item_ns(self, namespaceURI: str, localName: str) -> DOMNode: ...
    def set_named_item(self, node: DOMNode) -> DOMNode: ...
    def set_named_item_ns(self, node: DOMNode) -> DOMNode: ...

class DOMNode(DOMObject, DOMEventTarget): 
    @classmethod
    def for_js_value(cls, value: JavaScriptCore.Value) -> DOMNode: ...
    def append_child(self, newChild: DOMNode) -> DOMNode: ...
    def clone_node(self, deep: bool) -> DOMNode: ...
    def clone_node_with_error(self, deep: bool) -> DOMNode: ...
    def compare_document_position(self, other: DOMNode) -> gushort: ...
    def contains(self, other: DOMNode) -> bool: ...
    def get_base_uri(self) -> str: ...
    def get_child_nodes(self) -> DOMNodeList: ...
    def get_first_child(self) -> DOMNode: ...
    def get_last_child(self) -> DOMNode: ...
    def get_local_name(self) -> str: ...
    def get_namespace_uri(self) -> str: ...
    def get_next_sibling(self) -> DOMNode: ...
    def get_node_name(self) -> str: ...
    def get_node_type(self) -> gushort: ...
    def get_node_value(self) -> str: ...
    def get_owner_document(self) -> DOMDocument: ...
    def get_parent_element(self) -> DOMElement: ...
    def get_parent_node(self) -> DOMNode: ...
    def get_prefix(self) -> str: ...
    def get_previous_sibling(self) -> DOMNode: ...
    def get_text_content(self) -> str: ...
    def has_child_nodes(self) -> bool: ...
    def insert_before(self, newChild: DOMNode, refChild: DOMNode) -> DOMNode: ...
    def is_default_namespace(self, namespaceURI: str) -> bool: ...
    def is_equal_node(self, other: DOMNode) -> bool: ...
    def is_same_node(self, other: DOMNode) -> bool: ...
    def is_supported(self, feature: str, version: str) -> bool: ...
    def lookup_namespace_uri(self, prefix: str) -> str: ...
    def lookup_prefix(self, namespaceURI: str) -> str: ...
    def normalize(self) -> None: ...
    def remove_child(self, oldChild: DOMNode) -> DOMNode: ...
    def replace_child(self, newChild: DOMNode, oldChild: DOMNode) -> DOMNode: ...
    def set_node_value(self, value: str) -> None: ...
    def set_prefix(self, value: str) -> None: ...
    def set_text_content(self, value: str) -> None: ...

class DOMNodeIterator(DOMObject): 
    def detach(self) -> None: ...
    def get_expand_entity_references(self) -> bool: ...
    def get_filter(self) -> DOMNodeFilter: ...
    def get_pointer_before_reference_node(self) -> bool: ...
    def get_reference_node(self) -> DOMNode: ...
    def get_root(self) -> DOMNode: ...
    def get_what_to_show(self) -> int: ...
    def next_node(self) -> DOMNode: ...
    def previous_node(self) -> DOMNode: ...

class DOMNodeList(DOMObject): 
    def get_length(self) -> int: ...
    def item(self, index: int) -> DOMNode: ...

class DOMObject(GObject.Object): ...

class DOMProcessingInstruction(DOMCharacterData, DOMEventTarget): 
    def get_sheet(self) -> DOMStyleSheet: ...
    def get_target(self) -> str: ...

class DOMRange(DOMObject): 
    def clone_contents(self) -> DOMDocumentFragment: ...
    def clone_range(self) -> DOMRange: ...
    def collapse(self, toStart: bool) -> None: ...
    def compare_boundary_points(self, how: gushort, sourceRange: DOMRange) -> gshort: ...
    def compare_node(self, refNode: DOMNode) -> gshort: ...
    def compare_point(self, refNode: DOMNode, offset: int) -> gshort: ...
    def create_contextual_fragment(self, html: str) -> DOMDocumentFragment: ...
    def delete_contents(self) -> None: ...
    def detach(self) -> None: ...
    def expand(self, unit: str) -> None: ...
    def extract_contents(self) -> DOMDocumentFragment: ...
    def get_collapsed(self) -> bool: ...
    def get_common_ancestor_container(self) -> DOMNode: ...
    def get_end_container(self) -> DOMNode: ...
    def get_end_offset(self) -> int: ...
    def get_start_container(self) -> DOMNode: ...
    def get_start_offset(self) -> int: ...
    def get_text(self) -> str: ...
    def insert_node(self, newNode: DOMNode) -> None: ...
    def intersects_node(self, refNode: DOMNode) -> bool: ...
    def is_point_in_range(self, refNode: DOMNode, offset: int) -> bool: ...
    def select_node(self, refNode: DOMNode) -> None: ...
    def select_node_contents(self, refNode: DOMNode) -> None: ...
    def set_end(self, refNode: DOMNode, offset: int) -> None: ...
    def set_end_after(self, refNode: DOMNode) -> None: ...
    def set_end_before(self, refNode: DOMNode) -> None: ...
    def set_start(self, refNode: DOMNode, offset: int) -> None: ...
    def set_start_after(self, refNode: DOMNode) -> None: ...
    def set_start_before(self, refNode: DOMNode) -> None: ...
    def surround_contents(self, newParent: DOMNode) -> None: ...
    def to_string(self) -> str: ...

class DOMStyleSheet(DOMObject): 
    def get_content_type(self) -> str: ...
    def get_disabled(self) -> bool: ...
    def get_href(self) -> str: ...
    def get_media(self) -> DOMMediaList: ...
    def get_owner_node(self) -> DOMNode: ...
    def get_parent_style_sheet(self) -> DOMStyleSheet: ...
    def get_title(self) -> str: ...
    def set_disabled(self, value: bool) -> None: ...

class DOMStyleSheetList(DOMObject): 
    def get_length(self) -> int: ...
    def item(self, index: int) -> DOMStyleSheet: ...

class DOMText(DOMCharacterData, DOMEventTarget): 
    def get_whole_text(self) -> str: ...
    def replace_whole_text(self, content: str) -> DOMText: ...
    def split_text(self, offset: int) -> DOMText: ...

class DOMTreeWalker(DOMObject): 
    def first_child(self) -> DOMNode: ...
    def get_current_node(self) -> DOMNode: ...
    def get_expand_entity_references(self) -> bool: ...
    def get_filter(self) -> DOMNodeFilter: ...
    def get_root(self) -> DOMNode: ...
    def get_what_to_show(self) -> int: ...
    def last_child(self) -> DOMNode: ...
    def next_node(self) -> DOMNode: ...
    def next_sibling(self) -> DOMNode: ...
    def parent_node(self) -> DOMNode: ...
    def previous_node(self) -> DOMNode: ...
    def previous_sibling(self) -> DOMNode: ...
    def set_current_node(self, value: DOMNode) -> None: ...

class DOMUIEvent(DOMEvent): 
    def get_char_code(self) -> int: ...
    def get_detail(self) -> int: ...
    def get_key_code(self) -> int: ...
    def get_layer_x(self) -> int: ...
    def get_layer_y(self) -> int: ...
    def get_page_x(self) -> int: ...
    def get_page_y(self) -> int: ...
    def get_view(self) -> DOMDOMWindow: ...
    def init_ui_event(self, type: str, canBubble: bool, cancelable: bool, view: DOMDOMWindow, detail: int) -> None: ...

class DOMWheelEvent(DOMMouseEvent): 
    def get_wheel_delta(self) -> int: ...
    def get_wheel_delta_x(self) -> int: ...
    def get_wheel_delta_y(self) -> int: ...
    def init_wheel_event(self, wheelDeltaX: int, wheelDeltaY: int, view: DOMDOMWindow, screenX: int, screenY: int, clientX: int, clientY: int, ctrlKey: bool, altKey: bool, shiftKey: bool, metaKey: bool) -> None: ...

class DOMXPathExpression(DOMObject): 
    def evaluate(self, contextNode: DOMNode, type: gushort, inResult: DOMXPathResult) -> DOMXPathResult: ...

class DOMXPathResult(DOMObject): 
    def get_boolean_value(self) -> bool: ...
    def get_invalid_iterator_state(self) -> bool: ...
    def get_number_value(self) -> float: ...
    def get_result_type(self) -> gushort: ...
    def get_single_node_value(self) -> DOMNode: ...
    def get_snapshot_length(self) -> int: ...
    def get_string_value(self) -> str: ...
    def iterate_next(self) -> DOMNode: ...
    def snapshot_item(self, index: int) -> DOMNode: ...

class Frame(GObject.Object): 
    def get_id(self) -> int: ...
    def get_javascript_context_for_script_world(self, world: ScriptWorld) -> None: ...
    def get_javascript_global_context(self) -> None: ...
    def get_js_context(self) -> JavaScriptCore.Context: ...
    def get_js_context_for_script_world(self, world: ScriptWorld) -> JavaScriptCore.Context: ...
    def get_js_value_for_dom_object(self, dom_object: DOMObject) -> JavaScriptCore.Value: ...
    def get_js_value_for_dom_object_in_script_world(self, dom_object: DOMObject, world: ScriptWorld) -> JavaScriptCore.Value: ...
    def get_uri(self) -> str: ...
    def is_main_frame(self) -> bool: ...

class HitTestResult(GObject.Object): 
    def context_is_editable(self) -> bool: ...
    def context_is_image(self) -> bool: ...
    def context_is_link(self) -> bool: ...
    def context_is_media(self) -> bool: ...
    def context_is_scrollbar(self) -> bool: ...
    def context_is_selection(self) -> bool: ...
    def get_context(self) -> int: ...
    def get_image_uri(self) -> str: ...
    def get_link_label(self) -> str: ...
    def get_link_title(self) -> str: ...
    def get_link_uri(self) -> str: ...
    def get_media_uri(self) -> str: ...

class ScriptWorld(GObject.Object): 
    @classmethod
    def new(cls) -> ScriptWorld: ...
    @classmethod
    def get_default(cls) -> ScriptWorld: ...
    def get_name(self) -> str: ...

class URIRequest(GObject.Object): 
    @classmethod
    def new(cls, uri: str) -> URIRequest: ...
    def get_http_headers(self) -> Soup.MessageHeaders: ...
    def get_http_method(self) -> str: ...
    def get_uri(self) -> str: ...
    def set_uri(self, uri: str) -> None: ...

class URIResponse(GObject.Object): 
    def get_content_length(self) -> int: ...
    def get_http_headers(self) -> Soup.MessageHeaders: ...
    def get_mime_type(self) -> str: ...
    def get_status_code(self) -> int: ...
    def get_suggested_filename(self) -> str: ...
    def get_uri(self) -> str: ...

class UserMessage(GObject.InitiallyUnowned): 
    @classmethod
    def new(cls, name: str, parameters: GLib.Variant) -> UserMessage: ...
    @classmethod
    def error_quark(cls) -> GLib.Quark: ...
    def get_fd_list(self) -> Gio.UnixFDList: ...
    def get_name(self) -> str: ...
    def get_parameters(self) -> GLib.Variant: ...
    def send_reply(self, reply: UserMessage) -> None: ...

class WebEditor(GObject.Object): 
    def get_page(self) -> WebPage: ...

class WebExtension(GObject.Object): 
    def get_page(self, page_id: int) -> WebPage: ...
    def send_message_to_context(self, message: UserMessage, cancellable: Gio.Cancellable, callback: Gio.AsyncReadyCallback, user_data: object) -> None: ...
    def send_message_to_context_finish(self, result: Gio.AsyncResult) -> UserMessage: ...

class WebHitTestResult(HitTestResult): 
    def get_node(self) -> DOMNode: ...

class WebPage(GObject.Object): 
    def get_dom_document(self) -> DOMDocument: ...
    def get_editor(self) -> WebEditor: ...
    def get_id(self) -> int: ...
    def get_main_frame(self) -> Frame: ...
    def get_uri(self) -> str: ...
    def send_message_to_view(self, message: UserMessage, cancellable: Gio.Cancellable, callback: Gio.AsyncReadyCallback, user_data: object) -> None: ...
    def send_message_to_view_finish(self, result: Gio.AsyncResult) -> UserMessage: ...

class DOMEventTarget: 
    def add_event_listener(self, event_name: str, handler: GObject.Closure, use_capture: bool) -> bool: ...
    def dispatch_event(self, event: DOMEvent) -> bool: ...
    def remove_event_listener(self, event_name: str, handler: GObject.Closure, use_capture: bool) -> bool: ...
    def add_event_listener(self, event_name: str, handler: GObject.Callback, use_capture: bool, user_data: object) -> bool: ...
    def add_event_listener_with_closure(self, event_name: str, handler: GObject.Closure, use_capture: bool) -> bool: ...
    def dispatch_event(self, event: DOMEvent) -> bool: ...
    def remove_event_listener(self, event_name: str, handler: GObject.Callback, use_capture: bool) -> bool: ...
    def remove_event_listener_with_closure(self, event_name: str, handler: GObject.Closure, use_capture: bool) -> bool: ...
class DOMNodeFilter: 
    def accept_node(self, node: DOMNode) -> gshort: ...
    def accept_node(self, node: DOMNode) -> gshort: ...
class DOMXPathNSResolver: 
    def lookup_namespace_uri(self, prefix: str) -> str: ...
    def lookup_namespace_uri(self, prefix: str) -> str: ...

class HitTestResultContext(GObject.GFlag): 
    DOCUMENT = ...
    LINK = ...
    IMAGE = ...
    MEDIA = ...
    EDITABLE = ...
    SCROLLBAR = ...
    SELECTION = ...

class ConsoleMessageLevel(GObject.GEnum): 
    INFO = ...
    LOG = ...
    WARNING = ...
    ERROR = ...
    DEBUG = ...

class ConsoleMessageSource(GObject.GEnum): 
    JAVASCRIPT = ...
    NETWORK = ...
    CONSOLE_API = ...
    SECURITY = ...
    OTHER = ...

class ContextMenuAction(GObject.GEnum): 
    NO_ACTION = ...
    OPEN_LINK = ...
    OPEN_LINK_IN_NEW_WINDOW = ...
    DOWNLOAD_LINK_TO_DISK = ...
    COPY_LINK_TO_CLIPBOARD = ...
    OPEN_IMAGE_IN_NEW_WINDOW = ...
    DOWNLOAD_IMAGE_TO_DISK = ...
    COPY_IMAGE_TO_CLIPBOARD = ...
    COPY_IMAGE_URL_TO_CLIPBOARD = ...
    OPEN_FRAME_IN_NEW_WINDOW = ...
    GO_BACK = ...
    GO_FORWARD = ...
    STOP = ...
    RELOAD = ...
    COPY = ...
    CUT = ...
    PASTE = ...
    DELETE = ...
    SELECT_ALL = ...
    INPUT_METHODS = ...
    UNICODE = ...
    SPELLING_GUESS = ...
    NO_GUESSES_FOUND = ...
    IGNORE_SPELLING = ...
    LEARN_SPELLING = ...
    IGNORE_GRAMMAR = ...
    FONT_MENU = ...
    BOLD = ...
    ITALIC = ...
    UNDERLINE = ...
    OUTLINE = ...
    INSPECT_ELEMENT = ...
    OPEN_VIDEO_IN_NEW_WINDOW = ...
    OPEN_AUDIO_IN_NEW_WINDOW = ...
    COPY_VIDEO_LINK_TO_CLIPBOARD = ...
    COPY_AUDIO_LINK_TO_CLIPBOARD = ...
    TOGGLE_MEDIA_CONTROLS = ...
    TOGGLE_MEDIA_LOOP = ...
    ENTER_VIDEO_FULLSCREEN = ...
    MEDIA_PLAY = ...
    MEDIA_PAUSE = ...
    MEDIA_MUTE = ...
    DOWNLOAD_VIDEO_TO_DISK = ...
    DOWNLOAD_AUDIO_TO_DISK = ...
    INSERT_EMOJI = ...
    PASTE_AS_PLAIN_TEXT = ...
    CUSTOM = ...

class FormSubmissionStep(GObject.GEnum): 
    SEND_DOM_EVENT = ...
    COMPLETE = ...

class UserMessageError(GObject.GEnum): 
    USER_MESSAGE_UNHANDLED_MESSAGE = ...

