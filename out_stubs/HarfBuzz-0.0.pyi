from gi.repository import freetype2, GLib, GObject, freetype2

AAT_LAYOUT_NO_SELECTOR_INDEX: int
BUFFER_REPLACEMENT_CODEPOINT_DEFAULT: int
FEATURE_GLOBAL_START: int
LANGUAGE_INVALID: language_t
MAP_VALUE_INVALID: codepoint_t
OT_LAYOUT_DEFAULT_LANGUAGE_INDEX: int
OT_LAYOUT_NO_FEATURE_INDEX: int
OT_LAYOUT_NO_SCRIPT_INDEX: int
OT_LAYOUT_NO_VARIATIONS_INDEX: int
OT_MAX_TAGS_PER_LANGUAGE: int
OT_MAX_TAGS_PER_SCRIPT: int
OT_VAR_NO_AXIS_INDEX: int
SET_VALUE_INVALID: codepoint_t
UNICODE_MAX: int
UNICODE_MAX_DECOMPOSITION_LEN: int
VERSION_MAJOR: int
VERSION_MICRO: int
VERSION_MINOR: int
VERSION_STRING: str

def aat_layout_feature_type_get_name_id(face: face_t, feature_type: aat_layout_feature_type_t) -> ot_name_id_t: ...
def aat_layout_feature_type_get_selector_infos(face: face_t, feature_type: aat_layout_feature_type_t, start_offset: int, selector_count: int, selectors: list[aat_layout_feature_selector_info_t], default_index: int) -> int: ...
def aat_layout_get_feature_types(face: face_t, start_offset: int, feature_count: int, features: list[aat_layout_feature_type_t]) -> int: ...
def aat_layout_has_positioning(face: face_t) -> bool_t: ...
def aat_layout_has_substitution(face: face_t) -> bool_t: ...
def aat_layout_has_tracking(face: face_t) -> bool_t: ...
def blob_copy_writable_or_fail(blob: blob_t) -> blob_t: ...
def blob_create(data: str, length: int, mode: memory_mode_t, user_data: object | None, destroy: destroy_func_t | None) -> blob_t: ...
def blob_create_from_file(file_name: str) -> blob_t: ...
def blob_create_from_file_or_fail(file_name: str) -> blob_t: ...
def blob_create_or_fail(data: str, length: int, mode: memory_mode_t, user_data: object | None, destroy: destroy_func_t | None) -> blob_t: ...
def blob_create_sub_blob(parent: blob_t, offset: int, length: int) -> blob_t: ...
def blob_destroy(blob: blob_t) -> None: ...
def blob_get_data(blob: blob_t, length: int) -> list[str] | None: ...
def blob_get_data_writable(blob: blob_t, length: int) -> list[str]: ...
def blob_get_empty() -> blob_t: ...
def blob_get_length(blob: blob_t) -> int: ...
def blob_get_user_data(blob: blob_t, key: user_data_key_t) -> object | None: ...
def blob_is_immutable(blob: blob_t) -> bool_t: ...
def blob_make_immutable(blob: blob_t) -> None: ...
def blob_reference(blob: blob_t) -> blob_t: ...
def blob_set_user_data(blob: blob_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def buffer_add(buffer: buffer_t, codepoint: codepoint_t, cluster: int) -> None: ...
def buffer_add_codepoints(buffer: buffer_t, text: list[codepoint_t], text_length: int, item_offset: int, item_length: int) -> None: ...
def buffer_add_latin1(buffer: buffer_t, text: list[int], text_length: int, item_offset: int, item_length: int) -> None: ...
def buffer_add_utf16(buffer: buffer_t, text: list[int], text_length: int, item_offset: int, item_length: int) -> None: ...
def buffer_add_utf32(buffer: buffer_t, text: list[int], text_length: int, item_offset: int, item_length: int) -> None: ...
def buffer_add_utf8(buffer: buffer_t, text: list[int], text_length: int, item_offset: int, item_length: int) -> None: ...
def buffer_allocation_successful(buffer: buffer_t) -> bool_t: ...
def buffer_append(buffer: buffer_t, source: buffer_t, start: int, end: int) -> None: ...
def buffer_clear_contents(buffer: buffer_t) -> None: ...
def buffer_create() -> buffer_t: ...
def buffer_create_similar(src: buffer_t) -> buffer_t: ...
def buffer_deserialize_glyphs(buffer: buffer_t, buf: list[str], buf_len: int, end_ptr: str, font: font_t | None, format: buffer_serialize_format_t) -> bool_t: ...
def buffer_deserialize_unicode(buffer: buffer_t, buf: list[str], buf_len: int, end_ptr: str, format: buffer_serialize_format_t) -> bool_t: ...
def buffer_destroy(buffer: buffer_t) -> None: ...
def buffer_diff(buffer: buffer_t, reference: buffer_t, dottedcircle_glyph: codepoint_t, position_fuzz: int) -> buffer_diff_flags_t: ...
def buffer_get_cluster_level(buffer: buffer_t) -> buffer_cluster_level_t: ...
def buffer_get_content_type(buffer: buffer_t) -> buffer_content_type_t: ...
def buffer_get_direction(buffer: buffer_t) -> direction_t: ...
def buffer_get_empty() -> buffer_t: ...
def buffer_get_flags(buffer: buffer_t) -> buffer_flags_t: ...
def buffer_get_glyph_infos(buffer: buffer_t, length: int) -> list[glyph_info_t]: ...
def buffer_get_glyph_positions(buffer: buffer_t, length: int) -> list[glyph_position_t]: ...
def buffer_get_invisible_glyph(buffer: buffer_t) -> codepoint_t: ...
def buffer_get_language(buffer: buffer_t) -> language_t: ...
def buffer_get_length(buffer: buffer_t) -> int: ...
def buffer_get_not_found_glyph(buffer: buffer_t) -> codepoint_t: ...
def buffer_get_replacement_codepoint(buffer: buffer_t) -> codepoint_t: ...
def buffer_get_script(buffer: buffer_t) -> script_t: ...
def buffer_get_segment_properties(buffer: buffer_t, props: segment_properties_t) -> None: ...
def buffer_get_unicode_funcs(buffer: buffer_t) -> unicode_funcs_t: ...
def buffer_get_user_data(buffer: buffer_t, key: user_data_key_t) -> object | None: ...
def buffer_guess_segment_properties(buffer: buffer_t) -> None: ...
def buffer_has_positions(buffer: buffer_t) -> bool_t: ...
def buffer_normalize_glyphs(buffer: buffer_t) -> None: ...
def buffer_pre_allocate(buffer: buffer_t, size: int) -> bool_t: ...
def buffer_reference(buffer: buffer_t) -> buffer_t: ...
def buffer_reset(buffer: buffer_t) -> None: ...
def buffer_reverse(buffer: buffer_t) -> None: ...
def buffer_reverse_clusters(buffer: buffer_t) -> None: ...
def buffer_reverse_range(buffer: buffer_t, start: int, end: int) -> None: ...
def buffer_serialize(buffer: buffer_t, start: int, end: int, buf: list[int], buf_size: int, buf_consumed: int, font: font_t | None, format: buffer_serialize_format_t, flags: buffer_serialize_flags_t) -> int: ...
def buffer_serialize_format_from_string(str: list[int], len: int) -> buffer_serialize_format_t: ...
def buffer_serialize_format_to_string(format: buffer_serialize_format_t) -> str: ...
def buffer_serialize_glyphs(buffer: buffer_t, start: int, end: int, buf: list[int], buf_size: int, buf_consumed: int, font: font_t | None, format: buffer_serialize_format_t, flags: buffer_serialize_flags_t) -> int: ...
def buffer_serialize_list_formats() -> list[str]: ...
def buffer_serialize_unicode(buffer: buffer_t, start: int, end: int, buf: list[int], buf_size: int, buf_consumed: int, format: buffer_serialize_format_t, flags: buffer_serialize_flags_t) -> int: ...
def buffer_set_cluster_level(buffer: buffer_t, cluster_level: buffer_cluster_level_t) -> None: ...
def buffer_set_content_type(buffer: buffer_t, content_type: buffer_content_type_t) -> None: ...
def buffer_set_direction(buffer: buffer_t, direction: direction_t) -> None: ...
def buffer_set_flags(buffer: buffer_t, flags: buffer_flags_t) -> None: ...
def buffer_set_invisible_glyph(buffer: buffer_t, invisible: codepoint_t) -> None: ...
def buffer_set_language(buffer: buffer_t, language: language_t) -> None: ...
def buffer_set_length(buffer: buffer_t, length: int) -> bool_t: ...
def buffer_set_message_func(buffer: buffer_t, func: buffer_message_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def buffer_set_not_found_glyph(buffer: buffer_t, not_found: codepoint_t) -> None: ...
def buffer_set_replacement_codepoint(buffer: buffer_t, replacement: codepoint_t) -> None: ...
def buffer_set_script(buffer: buffer_t, script: script_t) -> None: ...
def buffer_set_segment_properties(buffer: buffer_t, props: segment_properties_t) -> None: ...
def buffer_set_unicode_funcs(buffer: buffer_t, unicode_funcs: unicode_funcs_t) -> None: ...
def buffer_set_user_data(buffer: buffer_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def color_get_alpha(color: color_t) -> int: ...
def color_get_blue(color: color_t) -> int: ...
def color_get_green(color: color_t) -> int: ...
def color_get_red(color: color_t) -> int: ...
def direction_from_string(str: list[int], len: int) -> direction_t: ...
def direction_to_string(direction: direction_t) -> str: ...
def draw_close_path(dfuncs: draw_funcs_t, draw_data: object | None, st: draw_state_t) -> None: ...
def draw_cubic_to(dfuncs: draw_funcs_t, draw_data: object | None, st: draw_state_t, control1_x: float, control1_y: float, control2_x: float, control2_y: float, to_x: float, to_y: float) -> None: ...
def draw_funcs_create() -> draw_funcs_t: ...
def draw_funcs_destroy(dfuncs: draw_funcs_t) -> None: ...
def draw_funcs_is_immutable(dfuncs: draw_funcs_t) -> bool_t: ...
def draw_funcs_make_immutable(dfuncs: draw_funcs_t) -> None: ...
def draw_funcs_reference(dfuncs: draw_funcs_t) -> draw_funcs_t: ...
def draw_funcs_set_close_path_func(dfuncs: draw_funcs_t, func: draw_close_path_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def draw_funcs_set_cubic_to_func(dfuncs: draw_funcs_t, func: draw_cubic_to_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def draw_funcs_set_line_to_func(dfuncs: draw_funcs_t, func: draw_line_to_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def draw_funcs_set_move_to_func(dfuncs: draw_funcs_t, func: draw_move_to_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def draw_funcs_set_quadratic_to_func(dfuncs: draw_funcs_t, func: draw_quadratic_to_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def draw_line_to(dfuncs: draw_funcs_t, draw_data: object | None, st: draw_state_t, to_x: float, to_y: float) -> None: ...
def draw_move_to(dfuncs: draw_funcs_t, draw_data: object | None, st: draw_state_t, to_x: float, to_y: float) -> None: ...
def draw_quadratic_to(dfuncs: draw_funcs_t, draw_data: object | None, st: draw_state_t, control_x: float, control_y: float, to_x: float, to_y: float) -> None: ...
def face_builder_add_table(face: face_t, tag: tag_t, blob: blob_t) -> bool_t: ...
def face_builder_create() -> face_t: ...
def face_collect_unicodes(face: face_t, out: set_t) -> None: ...
def face_collect_variation_selectors(face: face_t, out: set_t) -> None: ...
def face_collect_variation_unicodes(face: face_t, variation_selector: codepoint_t, out: set_t) -> None: ...
def face_count(blob: blob_t) -> int: ...
def face_create(blob: blob_t, index: int) -> face_t: ...
def face_create_for_tables(reference_table_func: reference_table_func_t, user_data: object | None, destroy: destroy_func_t | None) -> face_t: ...
def face_destroy(face: face_t) -> None: ...
def face_get_empty() -> face_t: ...
def face_get_glyph_count(face: face_t) -> int: ...
def face_get_index(face: face_t) -> int: ...
def face_get_table_tags(face: face_t, start_offset: int, table_count: int, table_tags: list[tag_t]) -> int: ...
def face_get_upem(face: face_t) -> int: ...
def face_get_user_data(face: face_t, key: user_data_key_t) -> object | None: ...
def face_is_immutable(face: face_t) -> bool_t: ...
def face_make_immutable(face: face_t) -> None: ...
def face_reference(face: face_t) -> face_t: ...
def face_reference_blob(face: face_t) -> blob_t: ...
def face_reference_table(face: face_t, tag: tag_t) -> blob_t: ...
def face_set_glyph_count(face: face_t, glyph_count: int) -> None: ...
def face_set_index(face: face_t, index: int) -> None: ...
def face_set_upem(face: face_t, upem: int) -> None: ...
def face_set_user_data(face: face_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def feature_from_string(str: list[int], len: int, feature: feature_t) -> bool_t: ...
def feature_to_string(feature: feature_t, buf: list[str], size: int) -> None: ...
def font_add_glyph_origin_for_direction(font: font_t, glyph: codepoint_t, direction: direction_t, x: position_t, y: position_t) -> None: ...
def font_changed(font: font_t) -> None: ...
def font_create(face: face_t) -> font_t: ...
def font_create_sub_font(parent: font_t) -> font_t: ...
def font_destroy(font: font_t) -> None: ...
def font_funcs_create() -> font_funcs_t: ...
def font_funcs_destroy(ffuncs: font_funcs_t) -> None: ...
def font_funcs_get_empty() -> font_funcs_t: ...
def font_funcs_get_user_data(ffuncs: font_funcs_t, key: user_data_key_t) -> object | None: ...
def font_funcs_is_immutable(ffuncs: font_funcs_t) -> bool_t: ...
def font_funcs_make_immutable(ffuncs: font_funcs_t) -> None: ...
def font_funcs_reference(ffuncs: font_funcs_t) -> font_funcs_t: ...
def font_funcs_set_font_h_extents_func(ffuncs: font_funcs_t, func: font_get_font_h_extents_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_font_v_extents_func(ffuncs: font_funcs_t, func: font_get_font_v_extents_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_contour_point_func(ffuncs: font_funcs_t, func: font_get_glyph_contour_point_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_extents_func(ffuncs: font_funcs_t, func: font_get_glyph_extents_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_from_name_func(ffuncs: font_funcs_t, func: font_get_glyph_from_name_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_func(ffuncs: font_funcs_t, func: font_get_glyph_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_h_advance_func(ffuncs: font_funcs_t, func: font_get_glyph_h_advance_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_h_advances_func(ffuncs: font_funcs_t, func: font_get_glyph_h_advances_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_h_kerning_func(ffuncs: font_funcs_t, func: font_get_glyph_h_kerning_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_h_origin_func(ffuncs: font_funcs_t, func: font_get_glyph_h_origin_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_name_func(ffuncs: font_funcs_t, func: font_get_glyph_name_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_shape_func(ffuncs: font_funcs_t, func: font_get_glyph_shape_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_v_advance_func(ffuncs: font_funcs_t, func: font_get_glyph_v_advance_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_v_advances_func(ffuncs: font_funcs_t, func: font_get_glyph_v_advances_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_v_kerning_func(ffuncs: font_funcs_t, func: font_get_glyph_v_kerning_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_glyph_v_origin_func(ffuncs: font_funcs_t, func: font_get_glyph_v_origin_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_nominal_glyph_func(ffuncs: font_funcs_t, func: font_get_nominal_glyph_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_nominal_glyphs_func(ffuncs: font_funcs_t, func: font_get_nominal_glyphs_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_funcs_set_user_data(ffuncs: font_funcs_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def font_funcs_set_variation_glyph_func(ffuncs: font_funcs_t, func: font_get_variation_glyph_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_get_empty() -> font_t: ...
def font_get_extents_for_direction(font: font_t, direction: direction_t, extents: font_extents_t) -> None: ...
def font_get_face(font: font_t) -> face_t: ...
def font_get_glyph(font: font_t, unicode: codepoint_t, variation_selector: codepoint_t, glyph: codepoint_t) -> bool_t: ...
def font_get_glyph_advance_for_direction(font: font_t, glyph: codepoint_t, direction: direction_t, x: position_t, y: position_t) -> None: ...
def font_get_glyph_advances_for_direction(font: font_t, direction: direction_t, count: int, first_glyph: codepoint_t, glyph_stride: int, first_advance: position_t, advance_stride: int) -> None: ...
def font_get_glyph_contour_point(font: font_t, glyph: codepoint_t, point_index: int, x: position_t, y: position_t) -> bool_t: ...
def font_get_glyph_contour_point_for_origin(font: font_t, glyph: codepoint_t, point_index: int, direction: direction_t, x: position_t, y: position_t) -> bool_t: ...
def font_get_glyph_extents(font: font_t, glyph: codepoint_t, extents: glyph_extents_t) -> bool_t: ...
def font_get_glyph_extents_for_origin(font: font_t, glyph: codepoint_t, direction: direction_t, extents: glyph_extents_t) -> bool_t: ...
def font_get_glyph_from_name(font: font_t, name: list[str], len: int, glyph: codepoint_t) -> bool_t: ...
def font_get_glyph_h_advance(font: font_t, glyph: codepoint_t) -> position_t: ...
def font_get_glyph_h_advances(font: font_t, count: int, first_glyph: codepoint_t, glyph_stride: int, first_advance: position_t, advance_stride: int) -> None: ...
def font_get_glyph_h_kerning(font: font_t, left_glyph: codepoint_t, right_glyph: codepoint_t) -> position_t: ...
def font_get_glyph_h_origin(font: font_t, glyph: codepoint_t, x: position_t, y: position_t) -> bool_t: ...
def font_get_glyph_kerning_for_direction(font: font_t, first_glyph: codepoint_t, second_glyph: codepoint_t, direction: direction_t, x: position_t, y: position_t) -> None: ...
def font_get_glyph_name(font: font_t, glyph: codepoint_t, name: list[str], size: int) -> bool_t: ...
def font_get_glyph_origin_for_direction(font: font_t, glyph: codepoint_t, direction: direction_t, x: position_t, y: position_t) -> None: ...
def font_get_glyph_shape(font: font_t, glyph: codepoint_t, dfuncs: draw_funcs_t, draw_data: object | None) -> None: ...
def font_get_glyph_v_advance(font: font_t, glyph: codepoint_t) -> position_t: ...
def font_get_glyph_v_advances(font: font_t, count: int, first_glyph: codepoint_t, glyph_stride: int, first_advance: position_t, advance_stride: int) -> None: ...
def font_get_glyph_v_kerning(font: font_t, top_glyph: codepoint_t, bottom_glyph: codepoint_t) -> position_t: ...
def font_get_glyph_v_origin(font: font_t, glyph: codepoint_t, x: position_t, y: position_t) -> bool_t: ...
def font_get_h_extents(font: font_t, extents: font_extents_t) -> bool_t: ...
def font_get_nominal_glyph(font: font_t, unicode: codepoint_t, glyph: codepoint_t) -> bool_t: ...
def font_get_nominal_glyphs(font: font_t, count: int, first_unicode: codepoint_t, unicode_stride: int, first_glyph: codepoint_t, glyph_stride: int) -> int: ...
def font_get_parent(font: font_t) -> font_t: ...
def font_get_ppem(font: font_t, x_ppem: int, y_ppem: int) -> None: ...
def font_get_ptem(font: font_t) -> float: ...
def font_get_scale(font: font_t, x_scale: int, y_scale: int) -> None: ...
def font_get_serial(font: font_t) -> int: ...
def font_get_synthetic_slant(font: font_t) -> float: ...
def font_get_user_data(font: font_t, key: user_data_key_t) -> object | None: ...
def font_get_v_extents(font: font_t, extents: font_extents_t) -> bool_t: ...
def font_get_var_coords_design(font: font_t, length: int) -> float: ...
def font_get_var_coords_normalized(font: font_t, length: int) -> int: ...
def font_get_variation_glyph(font: font_t, unicode: codepoint_t, variation_selector: codepoint_t, glyph: codepoint_t) -> bool_t: ...
def font_glyph_from_string(font: font_t, s: list[int], len: int, glyph: codepoint_t) -> bool_t: ...
def font_glyph_to_string(font: font_t, glyph: codepoint_t, s: list[str], size: int) -> None: ...
def font_is_immutable(font: font_t) -> bool_t: ...
def font_make_immutable(font: font_t) -> None: ...
def font_reference(font: font_t) -> font_t: ...
def font_set_face(font: font_t, face: face_t) -> None: ...
def font_set_funcs(font: font_t, klass: font_funcs_t, font_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_set_funcs_data(font: font_t, font_data: object | None, destroy: destroy_func_t | None) -> None: ...
def font_set_parent(font: font_t, parent: font_t) -> None: ...
def font_set_ppem(font: font_t, x_ppem: int, y_ppem: int) -> None: ...
def font_set_ptem(font: font_t, ptem: float) -> None: ...
def font_set_scale(font: font_t, x_scale: int, y_scale: int) -> None: ...
def font_set_synthetic_slant(font: font_t, slant: float) -> None: ...
def font_set_user_data(font: font_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def font_set_var_coords_design(font: font_t, coords: list[float], coords_length: int) -> None: ...
def font_set_var_coords_normalized(font: font_t, coords: list[int], coords_length: int) -> None: ...
def font_set_var_named_instance(font: font_t, instance_index: int) -> None: ...
def font_set_variations(font: font_t, variations: list[variation_t], variations_length: int) -> None: ...
def font_subtract_glyph_origin_for_direction(font: font_t, glyph: codepoint_t, direction: direction_t, x: position_t, y: position_t) -> None: ...
def ft_face_create(ft_face: freetype2.Face, destroy: destroy_func_t | None) -> face_t: ...
def ft_face_create_cached(ft_face: freetype2.Face) -> face_t: ...
def ft_face_create_referenced(ft_face: freetype2.Face) -> face_t: ...
def ft_font_changed(font: font_t) -> None: ...
def ft_font_create(ft_face: freetype2.Face, destroy: destroy_func_t | None) -> font_t: ...
def ft_font_create_referenced(ft_face: freetype2.Face) -> font_t: ...
def ft_font_get_face(font: font_t) -> freetype2.Face | None: ...
def ft_font_get_load_flags(font: font_t) -> int: ...
def ft_font_lock_face(font: font_t) -> freetype2.Face | None: ...
def ft_font_set_funcs(font: font_t) -> None: ...
def ft_font_set_load_flags(font: font_t, load_flags: int) -> None: ...
def ft_font_unlock_face(font: font_t) -> None: ...
def ft_hb_font_changed(font: font_t) -> bool_t: ...
def glib_blob_create(gbytes: GLib.Bytes) -> blob_t: ...
def glib_get_unicode_funcs() -> unicode_funcs_t: ...
def glib_script_from_script(script: script_t) -> GLib.UnicodeScript: ...
def glib_script_to_script(script: GLib.UnicodeScript) -> script_t: ...
def glyph_info_get_glyph_flags(info: glyph_info_t) -> glyph_flags_t: ...
def language_from_string(str: list[int], len: int) -> language_t: ...
def language_get_default() -> language_t: ...
def language_matches(language: language_t, specific: language_t) -> bool_t: ...
def language_to_string(language: language_t) -> str: ...
def map_allocation_successful(map: map_t) -> bool_t: ...
def map_clear(map: map_t) -> None: ...
def map_copy(map: map_t) -> map_t: ...
def map_create() -> map_t: ...
def map_del(map: map_t, key: codepoint_t) -> None: ...
def map_destroy(map: map_t) -> None: ...
def map_get(map: map_t, key: codepoint_t) -> codepoint_t: ...
def map_get_empty() -> map_t: ...
def map_get_population(map: map_t) -> int: ...
def map_get_user_data(map: map_t, key: user_data_key_t) -> object | None: ...
def map_has(map: map_t, key: codepoint_t) -> bool_t: ...
def map_hash(map: map_t) -> int: ...
def map_is_empty(map: map_t) -> bool_t: ...
def map_is_equal(map: map_t, other: map_t) -> bool_t: ...
def map_reference(map: map_t) -> map_t: ...
def map_set(map: map_t, key: codepoint_t, value: codepoint_t) -> None: ...
def map_set_user_data(map: map_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def ot_color_glyph_get_layers(face: face_t, glyph: codepoint_t, start_offset: int, layer_count: int, layers: list[ot_color_layer_t] | None) -> int: ...
def ot_color_glyph_reference_png(font: font_t, glyph: codepoint_t) -> blob_t: ...
def ot_color_glyph_reference_svg(face: face_t, glyph: codepoint_t) -> blob_t: ...
def ot_color_has_layers(face: face_t) -> bool_t: ...
def ot_color_has_palettes(face: face_t) -> bool_t: ...
def ot_color_has_png(face: face_t) -> bool_t: ...
def ot_color_has_svg(face: face_t) -> bool_t: ...
def ot_color_palette_color_get_name_id(face: face_t, color_index: int) -> ot_name_id_t: ...
def ot_color_palette_get_colors(face: face_t, palette_index: int, start_offset: int, color_count: int, colors: list[color_t] | None) -> int: ...
def ot_color_palette_get_count(face: face_t) -> int: ...
def ot_color_palette_get_flags(face: face_t, palette_index: int) -> ot_color_palette_flags_t: ...
def ot_color_palette_get_name_id(face: face_t, palette_index: int) -> ot_name_id_t: ...
def ot_font_set_funcs(font: font_t) -> None: ...
def ot_layout_collect_features(face: face_t, table_tag: tag_t, scripts: list[tag_t] | None, languages: list[tag_t] | None, features: list[tag_t] | None, feature_indexes: set_t) -> None: ...
def ot_layout_collect_lookups(face: face_t, table_tag: tag_t, scripts: list[tag_t] | None, languages: list[tag_t] | None, features: list[tag_t] | None, lookup_indexes: set_t) -> None: ...
def ot_layout_feature_get_characters(face: face_t, table_tag: tag_t, feature_index: int, start_offset: int, char_count: int, characters: list[codepoint_t]) -> int: ...
def ot_layout_feature_get_lookups(face: face_t, table_tag: tag_t, feature_index: int, start_offset: int, lookup_count: int, lookup_indexes: list[int]) -> int: ...
def ot_layout_feature_get_name_ids(face: face_t, table_tag: tag_t, feature_index: int, label_id: ot_name_id_t, tooltip_id: ot_name_id_t, sample_id: ot_name_id_t, num_named_parameters: int, first_param_id: ot_name_id_t) -> bool_t: ...
def ot_layout_feature_with_variations_get_lookups(face: face_t, table_tag: tag_t, feature_index: int, variations_index: int, start_offset: int, lookup_count: int, lookup_indexes: list[int]) -> int: ...
def ot_layout_get_attach_points(face: face_t, glyph: codepoint_t, start_offset: int, point_count: int, point_array: list[int]) -> int: ...
def ot_layout_get_baseline(font: font_t, baseline_tag: ot_layout_baseline_tag_t, direction: direction_t, script_tag: tag_t, language_tag: tag_t, coord: position_t | None) -> bool_t: ...
def ot_layout_get_baseline_with_fallback(font: font_t, baseline_tag: ot_layout_baseline_tag_t, direction: direction_t, script_tag: tag_t, language_tag: tag_t, coord: position_t) -> None: ...
def ot_layout_get_glyph_class(face: face_t, glyph: codepoint_t) -> ot_layout_glyph_class_t: ...
def ot_layout_get_glyphs_in_class(face: face_t, klass: ot_layout_glyph_class_t, glyphs: set_t) -> None: ...
def ot_layout_get_horizontal_baseline_tag_for_script(script: script_t) -> ot_layout_baseline_tag_t: ...
def ot_layout_get_ligature_carets(font: font_t, direction: direction_t, glyph: codepoint_t, start_offset: int, caret_count: int, caret_array: list[position_t]) -> int: ...
def ot_layout_get_size_params(face: face_t, design_size: int, subfamily_id: int, subfamily_name_id: ot_name_id_t, range_start: int, range_end: int) -> bool_t: ...
def ot_layout_has_glyph_classes(face: face_t) -> bool_t: ...
def ot_layout_has_positioning(face: face_t) -> bool_t: ...
def ot_layout_has_substitution(face: face_t) -> bool_t: ...
def ot_layout_language_find_feature(face: face_t, table_tag: tag_t, script_index: int, language_index: int, feature_tag: tag_t, feature_index: int) -> bool_t: ...
def ot_layout_language_get_feature_indexes(face: face_t, table_tag: tag_t, script_index: int, language_index: int, start_offset: int, feature_count: int, feature_indexes: list[int]) -> int: ...
def ot_layout_language_get_feature_tags(face: face_t, table_tag: tag_t, script_index: int, language_index: int, start_offset: int, feature_count: int, feature_tags: list[tag_t]) -> int: ...
def ot_layout_language_get_required_feature(face: face_t, table_tag: tag_t, script_index: int, language_index: int, feature_index: int, feature_tag: tag_t) -> bool_t: ...
def ot_layout_language_get_required_feature_index(face: face_t, table_tag: tag_t, script_index: int, language_index: int, feature_index: int) -> bool_t: ...
def ot_layout_lookup_collect_glyphs(face: face_t, table_tag: tag_t, lookup_index: int, glyphs_before: set_t, glyphs_input: set_t, glyphs_after: set_t, glyphs_output: set_t) -> None: ...
def ot_layout_lookup_get_glyph_alternates(face: face_t, lookup_index: int, glyph: codepoint_t, start_offset: int, alternate_count: int, alternate_glyphs: list[codepoint_t]) -> int: ...
def ot_layout_lookup_substitute_closure(face: face_t, lookup_index: int, glyphs: set_t) -> None: ...
def ot_layout_lookup_would_substitute(face: face_t, lookup_index: int, glyphs: codepoint_t, glyphs_length: int, zero_context: bool_t) -> bool_t: ...
def ot_layout_lookups_substitute_closure(face: face_t, lookups: set_t, glyphs: set_t) -> None: ...
def ot_layout_script_find_language(face: face_t, table_tag: tag_t, script_index: int, language_tag: tag_t, language_index: int) -> bool_t: ...
def ot_layout_script_get_language_tags(face: face_t, table_tag: tag_t, script_index: int, start_offset: int, language_count: int, language_tags: list[tag_t]) -> int: ...
def ot_layout_script_select_language(face: face_t, table_tag: tag_t, script_index: int, language_count: int, language_tags: tag_t, language_index: int) -> bool_t: ...
def ot_layout_table_choose_script(face: face_t, table_tag: tag_t, script_tags: tag_t, script_index: int, chosen_script: tag_t) -> bool_t: ...
def ot_layout_table_find_feature_variations(face: face_t, table_tag: tag_t, coords: int, num_coords: int, variations_index: int) -> bool_t: ...
def ot_layout_table_find_script(face: face_t, table_tag: tag_t, script_tag: tag_t, script_index: int) -> bool_t: ...
def ot_layout_table_get_feature_tags(face: face_t, table_tag: tag_t, start_offset: int, feature_count: int, feature_tags: list[tag_t]) -> int: ...
def ot_layout_table_get_lookup_count(face: face_t, table_tag: tag_t) -> int: ...
def ot_layout_table_get_script_tags(face: face_t, table_tag: tag_t, start_offset: int, script_count: int, script_tags: list[tag_t]) -> int: ...
def ot_layout_table_select_script(face: face_t, table_tag: tag_t, script_count: int, script_tags: tag_t, script_index: int, chosen_script: tag_t) -> bool_t: ...
def ot_math_get_constant(font: font_t, constant: ot_math_constant_t) -> position_t: ...
def ot_math_get_glyph_assembly(font: font_t, glyph: codepoint_t, direction: direction_t, start_offset: int, parts_count: int, parts: list[ot_math_glyph_part_t], italics_correction: position_t) -> int: ...
def ot_math_get_glyph_italics_correction(font: font_t, glyph: codepoint_t) -> position_t: ...
def ot_math_get_glyph_kerning(font: font_t, glyph: codepoint_t, kern: ot_math_kern_t, correction_height: position_t) -> position_t: ...
def ot_math_get_glyph_kernings(font: font_t, glyph: codepoint_t, kern: ot_math_kern_t, start_offset: int, entries_count: int, kern_entries: list[ot_math_kern_entry_t]) -> int: ...
def ot_math_get_glyph_top_accent_attachment(font: font_t, glyph: codepoint_t) -> position_t: ...
def ot_math_get_glyph_variants(font: font_t, glyph: codepoint_t, direction: direction_t, start_offset: int, variants_count: int, variants: list[ot_math_glyph_variant_t]) -> int: ...
def ot_math_get_min_connector_overlap(font: font_t, direction: direction_t) -> position_t: ...
def ot_math_has_data(face: face_t) -> bool_t: ...
def ot_math_is_glyph_extended_shape(face: face_t, glyph: codepoint_t) -> bool_t: ...
def ot_meta_get_entry_tags(face: face_t, start_offset: int, entries_count: int, entries: list[ot_meta_tag_t]) -> int: ...
def ot_meta_reference_entry(face: face_t, meta_tag: ot_meta_tag_t) -> blob_t: ...
def ot_metrics_get_position(font: font_t, metrics_tag: ot_metrics_tag_t, position: position_t) -> bool_t: ...
def ot_metrics_get_position_with_fallback(font: font_t, metrics_tag: ot_metrics_tag_t, position: position_t) -> None: ...
def ot_metrics_get_variation(font: font_t, metrics_tag: ot_metrics_tag_t) -> float: ...
def ot_metrics_get_x_variation(font: font_t, metrics_tag: ot_metrics_tag_t) -> position_t: ...
def ot_metrics_get_y_variation(font: font_t, metrics_tag: ot_metrics_tag_t) -> position_t: ...
def ot_name_get_utf16(face: face_t, name_id: ot_name_id_t, language: language_t, text_size: int, text: list[int]) -> int: ...
def ot_name_get_utf32(face: face_t, name_id: ot_name_id_t, language: language_t, text_size: int, text: list[int]) -> int: ...
def ot_name_get_utf8(face: face_t, name_id: ot_name_id_t, language: language_t, text_size: int, text: list[str]) -> int: ...
def ot_name_list_names(face: face_t, num_entries: int) -> list[ot_name_entry_t]: ...
def ot_shape_glyphs_closure(font: font_t, buffer: buffer_t, features: list[feature_t], num_features: int, glyphs: set_t) -> None: ...
def ot_shape_plan_collect_lookups(shape_plan: shape_plan_t, table_tag: tag_t, lookup_indexes: set_t) -> None: ...
def ot_tag_from_language(language: language_t) -> tag_t: ...
def ot_tag_to_language(tag: tag_t) -> language_t | None: ...
def ot_tag_to_script(tag: tag_t) -> script_t: ...
def ot_tags_from_script(script: script_t, script_tag_1: tag_t, script_tag_2: tag_t) -> None: ...
def ot_tags_from_script_and_language(script: script_t, language: language_t, script_count: int, script_tags: tag_t, language_count: int, language_tags: tag_t) -> None: ...
def ot_tags_to_script_and_language(script_tag: tag_t, language_tag: tag_t, script: script_t, language: language_t) -> None: ...
def ot_var_find_axis(face: face_t, axis_tag: tag_t, axis_index: int, axis_info: ot_var_axis_t) -> bool_t: ...
def ot_var_find_axis_info(face: face_t, axis_tag: tag_t, axis_info: ot_var_axis_info_t) -> bool_t: ...
def ot_var_get_axes(face: face_t, start_offset: int, axes_count: int, axes_array: list[ot_var_axis_t]) -> int: ...
def ot_var_get_axis_count(face: face_t) -> int: ...
def ot_var_get_axis_infos(face: face_t, start_offset: int, axes_count: int, axes_array: list[ot_var_axis_info_t]) -> int: ...
def ot_var_get_named_instance_count(face: face_t) -> int: ...
def ot_var_has_data(face: face_t) -> bool_t: ...
def ot_var_named_instance_get_design_coords(face: face_t, instance_index: int, coords_length: int, coords: list[float]) -> int: ...
def ot_var_named_instance_get_postscript_name_id(face: face_t, instance_index: int) -> ot_name_id_t: ...
def ot_var_named_instance_get_subfamily_name_id(face: face_t, instance_index: int) -> ot_name_id_t: ...
def ot_var_normalize_coords(face: face_t, coords_length: int, design_coords: float, normalized_coords: int) -> None: ...
def ot_var_normalize_variations(face: face_t, variations: variation_t, variations_length: int, coords: list[int], coords_length: int) -> None: ...
def script_from_iso15924_tag(tag: tag_t) -> script_t: ...
def script_from_string(str: list[int], len: int) -> script_t: ...
def script_get_horizontal_direction(script: script_t) -> direction_t: ...
def script_to_iso15924_tag(script: script_t) -> tag_t: ...
def segment_properties_equal(a: segment_properties_t, b: segment_properties_t) -> bool_t: ...
def segment_properties_hash(p: segment_properties_t) -> int: ...
def segment_properties_overlay(p: segment_properties_t, src: segment_properties_t) -> None: ...
def set_add(set: set_t, codepoint: codepoint_t) -> None: ...
def set_add_range(set: set_t, first: codepoint_t, last: codepoint_t) -> None: ...
def set_add_sorted_array(set: set_t, sorted_codepoints: list[codepoint_t], num_codepoints: int) -> None: ...
def set_allocation_successful(set: set_t) -> bool_t: ...
def set_clear(set: set_t) -> None: ...
def set_copy(set: set_t) -> set_t: ...
def set_create() -> set_t: ...
def set_del(set: set_t, codepoint: codepoint_t) -> None: ...
def set_del_range(set: set_t, first: codepoint_t, last: codepoint_t) -> None: ...
def set_destroy(set: set_t) -> None: ...
def set_get_empty() -> set_t: ...
def set_get_max(set: set_t) -> codepoint_t: ...
def set_get_min(set: set_t) -> codepoint_t: ...
def set_get_population(set: set_t) -> int: ...
def set_get_user_data(set: set_t, key: user_data_key_t) -> object | None: ...
def set_has(set: set_t, codepoint: codepoint_t) -> bool_t: ...
def set_hash(set: set_t) -> int: ...
def set_intersect(set: set_t, other: set_t) -> None: ...
def set_invert(set: set_t) -> None: ...
def set_is_empty(set: set_t) -> bool_t: ...
def set_is_equal(set: set_t, other: set_t) -> bool_t: ...
def set_is_subset(set: set_t, larger_set: set_t) -> bool_t: ...
def set_next(set: set_t, codepoint: codepoint_t) -> bool_t: ...
def set_next_many(set: set_t, codepoint: codepoint_t, out: list[codepoint_t], size: int) -> int: ...
def set_next_range(set: set_t, first: codepoint_t, last: codepoint_t) -> bool_t: ...
def set_previous(set: set_t, codepoint: codepoint_t) -> bool_t: ...
def set_previous_range(set: set_t, first: codepoint_t, last: codepoint_t) -> bool_t: ...
def set_reference(set: set_t) -> set_t: ...
def set_set(set: set_t, other: set_t) -> None: ...
def set_set_user_data(set: set_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def set_subtract(set: set_t, other: set_t) -> None: ...
def set_symmetric_difference(set: set_t, other: set_t) -> None: ...
def set_union(set: set_t, other: set_t) -> None: ...
def shape(font: font_t, buffer: buffer_t, features: list[feature_t] | None, num_features: int) -> None: ...
def shape_full(font: font_t, buffer: buffer_t, features: list[feature_t] | None, num_features: int, shaper_list: list[str] | None) -> bool_t: ...
def shape_list_shapers() -> list[str]: ...
def shape_plan_create(face: face_t, props: segment_properties_t, user_features: list[feature_t], num_user_features: int, shaper_list: list[str]) -> shape_plan_t: ...
def shape_plan_create2(face: face_t, props: segment_properties_t, user_features: list[feature_t], num_user_features: int, coords: list[int], num_coords: int, shaper_list: list[str]) -> shape_plan_t: ...
def shape_plan_create_cached(face: face_t, props: segment_properties_t, user_features: list[feature_t], num_user_features: int, shaper_list: list[str]) -> shape_plan_t: ...
def shape_plan_create_cached2(face: face_t, props: segment_properties_t, user_features: list[feature_t], num_user_features: int, coords: list[int], num_coords: int, shaper_list: list[str]) -> shape_plan_t: ...
def shape_plan_destroy(shape_plan: shape_plan_t) -> None: ...
def shape_plan_execute(shape_plan: shape_plan_t, font: font_t, buffer: buffer_t, features: list[feature_t], num_features: int) -> bool_t: ...
def shape_plan_get_empty() -> shape_plan_t: ...
def shape_plan_get_shaper(shape_plan: shape_plan_t) -> str: ...
def shape_plan_get_user_data(shape_plan: shape_plan_t, key: user_data_key_t) -> object | None: ...
def shape_plan_reference(shape_plan: shape_plan_t) -> shape_plan_t: ...
def shape_plan_set_user_data(shape_plan: shape_plan_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def style_get_value(font: font_t, style_tag: style_tag_t) -> float: ...
def tag_from_string(str: list[int], len: int) -> tag_t: ...
def tag_to_string(tag: tag_t, buf: list[int]) -> None: ...
def unicode_combining_class(ufuncs: unicode_funcs_t, unicode: codepoint_t) -> unicode_combining_class_t: ...
def unicode_compose(ufuncs: unicode_funcs_t, a: codepoint_t, b: codepoint_t, ab: codepoint_t) -> bool_t: ...
def unicode_decompose(ufuncs: unicode_funcs_t, ab: codepoint_t, a: codepoint_t, b: codepoint_t) -> bool_t: ...
def unicode_decompose_compatibility(ufuncs: unicode_funcs_t, u: codepoint_t, decomposed: codepoint_t) -> int: ...
def unicode_eastasian_width(ufuncs: unicode_funcs_t, unicode: codepoint_t) -> int: ...
def unicode_funcs_create(parent: unicode_funcs_t | None) -> unicode_funcs_t: ...
def unicode_funcs_destroy(ufuncs: unicode_funcs_t) -> None: ...
def unicode_funcs_get_default() -> unicode_funcs_t: ...
def unicode_funcs_get_empty() -> unicode_funcs_t: ...
def unicode_funcs_get_parent(ufuncs: unicode_funcs_t) -> unicode_funcs_t: ...
def unicode_funcs_get_user_data(ufuncs: unicode_funcs_t, key: user_data_key_t) -> object | None: ...
def unicode_funcs_is_immutable(ufuncs: unicode_funcs_t) -> bool_t: ...
def unicode_funcs_make_immutable(ufuncs: unicode_funcs_t) -> None: ...
def unicode_funcs_reference(ufuncs: unicode_funcs_t) -> unicode_funcs_t: ...
def unicode_funcs_set_combining_class_func(ufuncs: unicode_funcs_t, func: unicode_combining_class_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def unicode_funcs_set_compose_func(ufuncs: unicode_funcs_t, func: unicode_compose_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def unicode_funcs_set_decompose_compatibility_func(ufuncs: unicode_funcs_t, func: unicode_decompose_compatibility_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def unicode_funcs_set_decompose_func(ufuncs: unicode_funcs_t, func: unicode_decompose_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def unicode_funcs_set_eastasian_width_func(ufuncs: unicode_funcs_t, func: unicode_eastasian_width_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def unicode_funcs_set_general_category_func(ufuncs: unicode_funcs_t, func: unicode_general_category_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def unicode_funcs_set_mirroring_func(ufuncs: unicode_funcs_t, func: unicode_mirroring_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def unicode_funcs_set_script_func(ufuncs: unicode_funcs_t, func: unicode_script_func_t, user_data: object | None, destroy: destroy_func_t | None) -> None: ...
def unicode_funcs_set_user_data(ufuncs: unicode_funcs_t, key: user_data_key_t, data: object | None, destroy: destroy_func_t | None, replace: bool_t) -> bool_t: ...
def unicode_general_category(ufuncs: unicode_funcs_t, unicode: codepoint_t) -> unicode_general_category_t: ...
def unicode_mirroring(ufuncs: unicode_funcs_t, unicode: codepoint_t) -> codepoint_t: ...
def unicode_script(ufuncs: unicode_funcs_t, unicode: codepoint_t) -> script_t: ...
def variation_from_string(str: list[int], len: int, variation: variation_t) -> bool_t: ...
def variation_to_string(variation: variation_t, buf: list[str], size: int) -> None: ...
def version(major: int, minor: int, micro: int) -> None: ...
def version_atleast(major: int, minor: int, micro: int) -> bool_t: ...
def version_string() -> str: ...

class buffer_diff_flags_t(GObject.GFlag): 
    EQUAL = ...
    CONTENT_TYPE_MISMATCH = ...
    LENGTH_MISMATCH = ...
    NOTDEF_PRESENT = ...
    DOTTED_CIRCLE_PRESENT = ...
    CODEPOINT_MISMATCH = ...
    CLUSTER_MISMATCH = ...
    GLYPH_FLAGS_MISMATCH = ...
    POSITION_MISMATCH = ...

class buffer_flags_t(GObject.GFlag): 
    DEFAULT = ...
    BOT = ...
    EOT = ...
    PRESERVE_DEFAULT_IGNORABLES = ...
    REMOVE_DEFAULT_IGNORABLES = ...
    DO_NOT_INSERT_DOTTED_CIRCLE = ...
    VERIFY = ...
    PRODUCE_UNSAFE_TO_CONCAT = ...
    PRODUCE_SAFE_TO_INSERT_TATWEEL = ...
    DEFINED = ...

class buffer_serialize_flags_t(GObject.GFlag): 
    DEFAULT = ...
    NO_CLUSTERS = ...
    NO_POSITIONS = ...
    NO_GLYPH_NAMES = ...
    GLYPH_EXTENTS = ...
    GLYPH_FLAGS = ...
    NO_ADVANCES = ...
    DEFINED = ...

class glyph_flags_t(GObject.GFlag): 
    UNSAFE_TO_BREAK = ...
    UNSAFE_TO_CONCAT = ...
    SAFE_TO_INSERT_TATWEEL = ...
    DEFINED = ...

class ot_color_palette_flags_t(GObject.GFlag): 
    DEFAULT = ...
    USABLE_WITH_LIGHT_BACKGROUND = ...
    USABLE_WITH_DARK_BACKGROUND = ...

class ot_math_glyph_part_flags_t(GObject.GFlag): 
    EXTENDER = ...

class ot_var_axis_flags_t(GObject.GFlag): 
    HIDDEN = ...

class aat_layout_feature_selector_t(GObject.GEnum): 
    INVALID = ...
    ALL_TYPE_FEATURES_ON = ...
    ALL_TYPE_FEATURES_OFF = ...
    REQUIRED_LIGATURES_ON = ...
    REQUIRED_LIGATURES_OFF = ...
    COMMON_LIGATURES_ON = ...
    COMMON_LIGATURES_OFF = ...
    RARE_LIGATURES_ON = ...
    RARE_LIGATURES_OFF = ...
    LOGOS_ON = ...
    LOGOS_OFF = ...
    REBUS_PICTURES_ON = ...
    REBUS_PICTURES_OFF = ...
    DIPHTHONG_LIGATURES_ON = ...
    DIPHTHONG_LIGATURES_OFF = ...
    SQUARED_LIGATURES_ON = ...
    SQUARED_LIGATURES_OFF = ...
    ABBREV_SQUARED_LIGATURES_ON = ...
    ABBREV_SQUARED_LIGATURES_OFF = ...
    SYMBOL_LIGATURES_ON = ...
    SYMBOL_LIGATURES_OFF = ...
    CONTEXTUAL_LIGATURES_ON = ...
    CONTEXTUAL_LIGATURES_OFF = ...
    HISTORICAL_LIGATURES_ON = ...
    HISTORICAL_LIGATURES_OFF = ...
    UNCONNECTED = ...
    PARTIALLY_CONNECTED = ...
    CURSIVE = ...
    UPPER_AND_LOWER_CASE = ...
    ALL_CAPS = ...
    ALL_LOWER_CASE = ...
    SMALL_CAPS = ...
    INITIAL_CAPS = ...
    INITIAL_CAPS_AND_SMALL_CAPS = ...
    SUBSTITUTE_VERTICAL_FORMS_ON = ...
    SUBSTITUTE_VERTICAL_FORMS_OFF = ...
    LINGUISTIC_REARRANGEMENT_ON = ...
    LINGUISTIC_REARRANGEMENT_OFF = ...
    MONOSPACED_NUMBERS = ...
    PROPORTIONAL_NUMBERS = ...
    THIRD_WIDTH_NUMBERS = ...
    QUARTER_WIDTH_NUMBERS = ...
    WORD_INITIAL_SWASHES_ON = ...
    WORD_INITIAL_SWASHES_OFF = ...
    WORD_FINAL_SWASHES_ON = ...
    WORD_FINAL_SWASHES_OFF = ...
    LINE_INITIAL_SWASHES_ON = ...
    LINE_INITIAL_SWASHES_OFF = ...
    LINE_FINAL_SWASHES_ON = ...
    LINE_FINAL_SWASHES_OFF = ...
    NON_FINAL_SWASHES_ON = ...
    NON_FINAL_SWASHES_OFF = ...
    SHOW_DIACRITICS = ...
    HIDE_DIACRITICS = ...
    DECOMPOSE_DIACRITICS = ...
    NORMAL_POSITION = ...
    SUPERIORS = ...
    INFERIORS = ...
    ORDINALS = ...
    SCIENTIFIC_INFERIORS = ...
    NO_FRACTIONS = ...
    VERTICAL_FRACTIONS = ...
    DIAGONAL_FRACTIONS = ...
    PREVENT_OVERLAP_ON = ...
    PREVENT_OVERLAP_OFF = ...
    HYPHENS_TO_EM_DASH_ON = ...
    HYPHENS_TO_EM_DASH_OFF = ...
    HYPHEN_TO_EN_DASH_ON = ...
    HYPHEN_TO_EN_DASH_OFF = ...
    SLASHED_ZERO_ON = ...
    SLASHED_ZERO_OFF = ...
    FORM_INTERROBANG_ON = ...
    FORM_INTERROBANG_OFF = ...
    SMART_QUOTES_ON = ...
    SMART_QUOTES_OFF = ...
    PERIODS_TO_ELLIPSIS_ON = ...
    PERIODS_TO_ELLIPSIS_OFF = ...
    HYPHEN_TO_MINUS_ON = ...
    HYPHEN_TO_MINUS_OFF = ...
    ASTERISK_TO_MULTIPLY_ON = ...
    ASTERISK_TO_MULTIPLY_OFF = ...
    SLASH_TO_DIVIDE_ON = ...
    SLASH_TO_DIVIDE_OFF = ...
    INEQUALITY_LIGATURES_ON = ...
    INEQUALITY_LIGATURES_OFF = ...
    EXPONENTS_ON = ...
    EXPONENTS_OFF = ...
    MATHEMATICAL_GREEK_ON = ...
    MATHEMATICAL_GREEK_OFF = ...
    NO_ORNAMENTS = ...
    DINGBATS = ...
    PI_CHARACTERS = ...
    FLEURONS = ...
    DECORATIVE_BORDERS = ...
    INTERNATIONAL_SYMBOLS = ...
    MATH_SYMBOLS = ...
    NO_ALTERNATES = ...
    DESIGN_LEVEL1 = ...
    DESIGN_LEVEL2 = ...
    DESIGN_LEVEL3 = ...
    DESIGN_LEVEL4 = ...
    DESIGN_LEVEL5 = ...
    NO_STYLE_OPTIONS = ...
    DISPLAY_TEXT = ...
    ENGRAVED_TEXT = ...
    ILLUMINATED_CAPS = ...
    TITLING_CAPS = ...
    TALL_CAPS = ...
    TRADITIONAL_CHARACTERS = ...
    SIMPLIFIED_CHARACTERS = ...
    JIS1978_CHARACTERS = ...
    JIS1983_CHARACTERS = ...
    JIS1990_CHARACTERS = ...
    TRADITIONAL_ALT_ONE = ...
    TRADITIONAL_ALT_TWO = ...
    TRADITIONAL_ALT_THREE = ...
    TRADITIONAL_ALT_FOUR = ...
    TRADITIONAL_ALT_FIVE = ...
    EXPERT_CHARACTERS = ...
    JIS2004_CHARACTERS = ...
    HOJO_CHARACTERS = ...
    NLCCHARACTERS = ...
    TRADITIONAL_NAMES_CHARACTERS = ...
    LOWER_CASE_NUMBERS = ...
    UPPER_CASE_NUMBERS = ...
    PROPORTIONAL_TEXT = ...
    MONOSPACED_TEXT = ...
    HALF_WIDTH_TEXT = ...
    THIRD_WIDTH_TEXT = ...
    QUARTER_WIDTH_TEXT = ...
    ALT_PROPORTIONAL_TEXT = ...
    ALT_HALF_WIDTH_TEXT = ...
    NO_TRANSLITERATION = ...
    HANJA_TO_HANGUL = ...
    HIRAGANA_TO_KATAKANA = ...
    KATAKANA_TO_HIRAGANA = ...
    KANA_TO_ROMANIZATION = ...
    ROMANIZATION_TO_HIRAGANA = ...
    ROMANIZATION_TO_KATAKANA = ...
    HANJA_TO_HANGUL_ALT_ONE = ...
    HANJA_TO_HANGUL_ALT_TWO = ...
    HANJA_TO_HANGUL_ALT_THREE = ...
    NO_ANNOTATION = ...
    BOX_ANNOTATION = ...
    ROUNDED_BOX_ANNOTATION = ...
    CIRCLE_ANNOTATION = ...
    INVERTED_CIRCLE_ANNOTATION = ...
    PARENTHESIS_ANNOTATION = ...
    PERIOD_ANNOTATION = ...
    ROMAN_NUMERAL_ANNOTATION = ...
    DIAMOND_ANNOTATION = ...
    INVERTED_BOX_ANNOTATION = ...
    INVERTED_ROUNDED_BOX_ANNOTATION = ...
    FULL_WIDTH_KANA = ...
    PROPORTIONAL_KANA = ...
    FULL_WIDTH_IDEOGRAPHS = ...
    PROPORTIONAL_IDEOGRAPHS = ...
    HALF_WIDTH_IDEOGRAPHS = ...
    CANONICAL_COMPOSITION_ON = ...
    CANONICAL_COMPOSITION_OFF = ...
    COMPATIBILITY_COMPOSITION_ON = ...
    COMPATIBILITY_COMPOSITION_OFF = ...
    TRANSCODING_COMPOSITION_ON = ...
    TRANSCODING_COMPOSITION_OFF = ...
    NO_RUBY_KANA = ...
    RUBY_KANA = ...
    RUBY_KANA_ON = ...
    RUBY_KANA_OFF = ...
    NO_CJK_SYMBOL_ALTERNATIVES = ...
    CJK_SYMBOL_ALT_ONE = ...
    CJK_SYMBOL_ALT_TWO = ...
    CJK_SYMBOL_ALT_THREE = ...
    CJK_SYMBOL_ALT_FOUR = ...
    CJK_SYMBOL_ALT_FIVE = ...
    NO_IDEOGRAPHIC_ALTERNATIVES = ...
    IDEOGRAPHIC_ALT_ONE = ...
    IDEOGRAPHIC_ALT_TWO = ...
    IDEOGRAPHIC_ALT_THREE = ...
    IDEOGRAPHIC_ALT_FOUR = ...
    IDEOGRAPHIC_ALT_FIVE = ...
    CJK_VERTICAL_ROMAN_CENTERED = ...
    CJK_VERTICAL_ROMAN_HBASELINE = ...
    NO_CJK_ITALIC_ROMAN = ...
    CJK_ITALIC_ROMAN = ...
    CJK_ITALIC_ROMAN_ON = ...
    CJK_ITALIC_ROMAN_OFF = ...
    CASE_SENSITIVE_LAYOUT_ON = ...
    CASE_SENSITIVE_LAYOUT_OFF = ...
    CASE_SENSITIVE_SPACING_ON = ...
    CASE_SENSITIVE_SPACING_OFF = ...
    ALTERNATE_HORIZ_KANA_ON = ...
    ALTERNATE_HORIZ_KANA_OFF = ...
    ALTERNATE_VERT_KANA_ON = ...
    ALTERNATE_VERT_KANA_OFF = ...
    NO_STYLISTIC_ALTERNATES = ...
    STYLISTIC_ALT_ONE_ON = ...
    STYLISTIC_ALT_ONE_OFF = ...
    STYLISTIC_ALT_TWO_ON = ...
    STYLISTIC_ALT_TWO_OFF = ...
    STYLISTIC_ALT_THREE_ON = ...
    STYLISTIC_ALT_THREE_OFF = ...
    STYLISTIC_ALT_FOUR_ON = ...
    STYLISTIC_ALT_FOUR_OFF = ...
    STYLISTIC_ALT_FIVE_ON = ...
    STYLISTIC_ALT_FIVE_OFF = ...
    STYLISTIC_ALT_SIX_ON = ...
    STYLISTIC_ALT_SIX_OFF = ...
    STYLISTIC_ALT_SEVEN_ON = ...
    STYLISTIC_ALT_SEVEN_OFF = ...
    STYLISTIC_ALT_EIGHT_ON = ...
    STYLISTIC_ALT_EIGHT_OFF = ...
    STYLISTIC_ALT_NINE_ON = ...
    STYLISTIC_ALT_NINE_OFF = ...
    STYLISTIC_ALT_TEN_ON = ...
    STYLISTIC_ALT_TEN_OFF = ...
    STYLISTIC_ALT_ELEVEN_ON = ...
    STYLISTIC_ALT_ELEVEN_OFF = ...
    STYLISTIC_ALT_TWELVE_ON = ...
    STYLISTIC_ALT_TWELVE_OFF = ...
    STYLISTIC_ALT_THIRTEEN_ON = ...
    STYLISTIC_ALT_THIRTEEN_OFF = ...
    STYLISTIC_ALT_FOURTEEN_ON = ...
    STYLISTIC_ALT_FOURTEEN_OFF = ...
    STYLISTIC_ALT_FIFTEEN_ON = ...
    STYLISTIC_ALT_FIFTEEN_OFF = ...
    STYLISTIC_ALT_SIXTEEN_ON = ...
    STYLISTIC_ALT_SIXTEEN_OFF = ...
    STYLISTIC_ALT_SEVENTEEN_ON = ...
    STYLISTIC_ALT_SEVENTEEN_OFF = ...
    STYLISTIC_ALT_EIGHTEEN_ON = ...
    STYLISTIC_ALT_EIGHTEEN_OFF = ...
    STYLISTIC_ALT_NINETEEN_ON = ...
    STYLISTIC_ALT_NINETEEN_OFF = ...
    STYLISTIC_ALT_TWENTY_ON = ...
    STYLISTIC_ALT_TWENTY_OFF = ...
    CONTEXTUAL_ALTERNATES_ON = ...
    CONTEXTUAL_ALTERNATES_OFF = ...
    SWASH_ALTERNATES_ON = ...
    SWASH_ALTERNATES_OFF = ...
    CONTEXTUAL_SWASH_ALTERNATES_ON = ...
    CONTEXTUAL_SWASH_ALTERNATES_OFF = ...
    DEFAULT_LOWER_CASE = ...
    LOWER_CASE_SMALL_CAPS = ...
    LOWER_CASE_PETITE_CAPS = ...
    DEFAULT_UPPER_CASE = ...
    UPPER_CASE_SMALL_CAPS = ...
    UPPER_CASE_PETITE_CAPS = ...
    HALF_WIDTH_CJK_ROMAN = ...
    PROPORTIONAL_CJK_ROMAN = ...
    DEFAULT_CJK_ROMAN = ...
    FULL_WIDTH_CJK_ROMAN = ...

class aat_layout_feature_type_t(GObject.GEnum): 
    INVALID = ...
    ALL_TYPOGRAPHIC = ...
    LIGATURES = ...
    CURISVE_CONNECTION = ...
    LETTER_CASE = ...
    VERTICAL_SUBSTITUTION = ...
    LINGUISTIC_REARRANGEMENT = ...
    NUMBER_SPACING = ...
    SMART_SWASH_TYPE = ...
    DIACRITICS_TYPE = ...
    VERTICAL_POSITION = ...
    FRACTIONS = ...
    OVERLAPPING_CHARACTERS_TYPE = ...
    TYPOGRAPHIC_EXTRAS = ...
    MATHEMATICAL_EXTRAS = ...
    ORNAMENT_SETS_TYPE = ...
    CHARACTER_ALTERNATIVES = ...
    DESIGN_COMPLEXITY_TYPE = ...
    STYLE_OPTIONS = ...
    CHARACTER_SHAPE = ...
    NUMBER_CASE = ...
    TEXT_SPACING = ...
    TRANSLITERATION = ...
    ANNOTATION_TYPE = ...
    KANA_SPACING_TYPE = ...
    IDEOGRAPHIC_SPACING_TYPE = ...
    UNICODE_DECOMPOSITION_TYPE = ...
    RUBY_KANA = ...
    CJK_SYMBOL_ALTERNATIVES_TYPE = ...
    IDEOGRAPHIC_ALTERNATIVES_TYPE = ...
    CJK_VERTICAL_ROMAN_PLACEMENT_TYPE = ...
    ITALIC_CJK_ROMAN = ...
    CASE_SENSITIVE_LAYOUT = ...
    ALTERNATE_KANA = ...
    STYLISTIC_ALTERNATIVES = ...
    CONTEXTUAL_ALTERNATIVES = ...
    LOWER_CASE = ...
    UPPER_CASE = ...
    LANGUAGE_TAG_TYPE = ...
    CJK_ROMAN_SPACING_TYPE = ...

class buffer_cluster_level_t(GObject.GEnum): 
    MONOTONE_GRAPHEMES = ...
    MONOTONE_CHARACTERS = ...
    CHARACTERS = ...
    DEFAULT = ...

class buffer_content_type_t(GObject.GEnum): 
    INVALID = ...
    UNICODE = ...
    GLYPHS = ...

class buffer_serialize_format_t(GObject.GEnum): 
    TEXT = ...
    JSON = ...
    INVALID = ...

class direction_t(GObject.GEnum): 
    INVALID = ...
    LTR = ...
    RTL = ...
    TTB = ...
    BTT = ...

class memory_mode_t(GObject.GEnum): 
    DUPLICATE = ...
    READONLY = ...
    WRITABLE = ...
    READONLY_MAY_MAKE_WRITABLE = ...

class ot_layout_baseline_tag_t(GObject.GEnum): 
    ROMAN = ...
    HANGING = ...
    IDEO_FACE_BOTTOM_OR_LEFT = ...
    IDEO_FACE_TOP_OR_RIGHT = ...
    IDEO_FACE_CENTRAL = ...
    IDEO_EMBOX_BOTTOM_OR_LEFT = ...
    IDEO_EMBOX_TOP_OR_RIGHT = ...
    IDEO_EMBOX_CENTRAL = ...
    MATH = ...

class ot_layout_glyph_class_t(GObject.GEnum): 
    UNCLASSIFIED = ...
    BASE_GLYPH = ...
    LIGATURE = ...
    MARK = ...
    COMPONENT = ...

class ot_math_constant_t(GObject.GEnum): 
    SCRIPT_PERCENT_SCALE_DOWN = ...
    SCRIPT_SCRIPT_PERCENT_SCALE_DOWN = ...
    DELIMITED_SUB_FORMULA_MIN_HEIGHT = ...
    DISPLAY_OPERATOR_MIN_HEIGHT = ...
    MATH_LEADING = ...
    AXIS_HEIGHT = ...
    ACCENT_BASE_HEIGHT = ...
    FLATTENED_ACCENT_BASE_HEIGHT = ...
    SUBSCRIPT_SHIFT_DOWN = ...
    SUBSCRIPT_TOP_MAX = ...
    SUBSCRIPT_BASELINE_DROP_MIN = ...
    SUPERSCRIPT_SHIFT_UP = ...
    SUPERSCRIPT_SHIFT_UP_CRAMPED = ...
    SUPERSCRIPT_BOTTOM_MIN = ...
    SUPERSCRIPT_BASELINE_DROP_MAX = ...
    SUB_SUPERSCRIPT_GAP_MIN = ...
    SUPERSCRIPT_BOTTOM_MAX_WITH_SUBSCRIPT = ...
    SPACE_AFTER_SCRIPT = ...
    UPPER_LIMIT_GAP_MIN = ...
    UPPER_LIMIT_BASELINE_RISE_MIN = ...
    LOWER_LIMIT_GAP_MIN = ...
    LOWER_LIMIT_BASELINE_DROP_MIN = ...
    STACK_TOP_SHIFT_UP = ...
    STACK_TOP_DISPLAY_STYLE_SHIFT_UP = ...
    STACK_BOTTOM_SHIFT_DOWN = ...
    STACK_BOTTOM_DISPLAY_STYLE_SHIFT_DOWN = ...
    STACK_GAP_MIN = ...
    STACK_DISPLAY_STYLE_GAP_MIN = ...
    STRETCH_STACK_TOP_SHIFT_UP = ...
    STRETCH_STACK_BOTTOM_SHIFT_DOWN = ...
    STRETCH_STACK_GAP_ABOVE_MIN = ...
    STRETCH_STACK_GAP_BELOW_MIN = ...
    FRACTION_NUMERATOR_SHIFT_UP = ...
    FRACTION_NUMERATOR_DISPLAY_STYLE_SHIFT_UP = ...
    FRACTION_DENOMINATOR_SHIFT_DOWN = ...
    FRACTION_DENOMINATOR_DISPLAY_STYLE_SHIFT_DOWN = ...
    FRACTION_NUMERATOR_GAP_MIN = ...
    FRACTION_NUM_DISPLAY_STYLE_GAP_MIN = ...
    FRACTION_RULE_THICKNESS = ...
    FRACTION_DENOMINATOR_GAP_MIN = ...
    FRACTION_DENOM_DISPLAY_STYLE_GAP_MIN = ...
    SKEWED_FRACTION_HORIZONTAL_GAP = ...
    SKEWED_FRACTION_VERTICAL_GAP = ...
    OVERBAR_VERTICAL_GAP = ...
    OVERBAR_RULE_THICKNESS = ...
    OVERBAR_EXTRA_ASCENDER = ...
    UNDERBAR_VERTICAL_GAP = ...
    UNDERBAR_RULE_THICKNESS = ...
    UNDERBAR_EXTRA_DESCENDER = ...
    RADICAL_VERTICAL_GAP = ...
    RADICAL_DISPLAY_STYLE_VERTICAL_GAP = ...
    RADICAL_RULE_THICKNESS = ...
    RADICAL_EXTRA_ASCENDER = ...
    RADICAL_KERN_BEFORE_DEGREE = ...
    RADICAL_KERN_AFTER_DEGREE = ...
    RADICAL_DEGREE_BOTTOM_RAISE_PERCENT = ...

class ot_math_kern_t(GObject.GEnum): 
    TOP_RIGHT = ...
    TOP_LEFT = ...
    BOTTOM_RIGHT = ...
    BOTTOM_LEFT = ...

class ot_meta_tag_t(GObject.GEnum): 
    DESIGN_LANGUAGES = ...
    SUPPORTED_LANGUAGES = ...

class ot_metrics_tag_t(GObject.GEnum): 
    HORIZONTAL_ASCENDER = ...
    HORIZONTAL_DESCENDER = ...
    HORIZONTAL_LINE_GAP = ...
    HORIZONTAL_CLIPPING_ASCENT = ...
    HORIZONTAL_CLIPPING_DESCENT = ...
    VERTICAL_ASCENDER = ...
    VERTICAL_DESCENDER = ...
    VERTICAL_LINE_GAP = ...
    HORIZONTAL_CARET_RISE = ...
    HORIZONTAL_CARET_RUN = ...
    HORIZONTAL_CARET_OFFSET = ...
    VERTICAL_CARET_RISE = ...
    VERTICAL_CARET_RUN = ...
    VERTICAL_CARET_OFFSET = ...
    X_HEIGHT = ...
    CAP_HEIGHT = ...
    SUBSCRIPT_EM_X_SIZE = ...
    SUBSCRIPT_EM_Y_SIZE = ...
    SUBSCRIPT_EM_X_OFFSET = ...
    SUBSCRIPT_EM_Y_OFFSET = ...
    SUPERSCRIPT_EM_X_SIZE = ...
    SUPERSCRIPT_EM_Y_SIZE = ...
    SUPERSCRIPT_EM_X_OFFSET = ...
    SUPERSCRIPT_EM_Y_OFFSET = ...
    STRIKEOUT_SIZE = ...
    STRIKEOUT_OFFSET = ...
    UNDERLINE_SIZE = ...
    UNDERLINE_OFFSET = ...

class script_t(GObject.GEnum): 
    COMMON = ...
    INHERITED = ...
    UNKNOWN = ...
    ARABIC = ...
    ARMENIAN = ...
    BENGALI = ...
    CYRILLIC = ...
    DEVANAGARI = ...
    GEORGIAN = ...
    GREEK = ...
    GUJARATI = ...
    GURMUKHI = ...
    HANGUL = ...
    HAN = ...
    HEBREW = ...
    HIRAGANA = ...
    KANNADA = ...
    KATAKANA = ...
    LAO = ...
    LATIN = ...
    MALAYALAM = ...
    ORIYA = ...
    TAMIL = ...
    TELUGU = ...
    THAI = ...
    TIBETAN = ...
    BOPOMOFO = ...
    BRAILLE = ...
    CANADIAN_SYLLABICS = ...
    CHEROKEE = ...
    ETHIOPIC = ...
    KHMER = ...
    MONGOLIAN = ...
    MYANMAR = ...
    OGHAM = ...
    RUNIC = ...
    SINHALA = ...
    SYRIAC = ...
    THAANA = ...
    YI = ...
    DESERET = ...
    GOTHIC = ...
    OLD_ITALIC = ...
    BUHID = ...
    HANUNOO = ...
    TAGALOG = ...
    TAGBANWA = ...
    CYPRIOT = ...
    LIMBU = ...
    LINEAR_B = ...
    OSMANYA = ...
    SHAVIAN = ...
    TAI_LE = ...
    UGARITIC = ...
    BUGINESE = ...
    COPTIC = ...
    GLAGOLITIC = ...
    KHAROSHTHI = ...
    NEW_TAI_LUE = ...
    OLD_PERSIAN = ...
    SYLOTI_NAGRI = ...
    TIFINAGH = ...
    BALINESE = ...
    CUNEIFORM = ...
    NKO = ...
    PHAGS_PA = ...
    PHOENICIAN = ...
    CARIAN = ...
    CHAM = ...
    KAYAH_LI = ...
    LEPCHA = ...
    LYCIAN = ...
    LYDIAN = ...
    OL_CHIKI = ...
    REJANG = ...
    SAURASHTRA = ...
    SUNDANESE = ...
    VAI = ...
    AVESTAN = ...
    BAMUM = ...
    EGYPTIAN_HIEROGLYPHS = ...
    IMPERIAL_ARAMAIC = ...
    INSCRIPTIONAL_PAHLAVI = ...
    INSCRIPTIONAL_PARTHIAN = ...
    JAVANESE = ...
    KAITHI = ...
    LISU = ...
    MEETEI_MAYEK = ...
    OLD_SOUTH_ARABIAN = ...
    OLD_TURKIC = ...
    SAMARITAN = ...
    TAI_THAM = ...
    TAI_VIET = ...
    BATAK = ...
    BRAHMI = ...
    MANDAIC = ...
    CHAKMA = ...
    MEROITIC_CURSIVE = ...
    MEROITIC_HIEROGLYPHS = ...
    MIAO = ...
    SHARADA = ...
    SORA_SOMPENG = ...
    TAKRI = ...
    BASSA_VAH = ...
    CAUCASIAN_ALBANIAN = ...
    DUPLOYAN = ...
    ELBASAN = ...
    GRANTHA = ...
    KHOJKI = ...
    KHUDAWADI = ...
    LINEAR_A = ...
    MAHAJANI = ...
    MANICHAEAN = ...
    MENDE_KIKAKUI = ...
    MODI = ...
    MRO = ...
    NABATAEAN = ...
    OLD_NORTH_ARABIAN = ...
    OLD_PERMIC = ...
    PAHAWH_HMONG = ...
    PALMYRENE = ...
    PAU_CIN_HAU = ...
    PSALTER_PAHLAVI = ...
    SIDDHAM = ...
    TIRHUTA = ...
    WARANG_CITI = ...
    AHOM = ...
    ANATOLIAN_HIEROGLYPHS = ...
    HATRAN = ...
    MULTANI = ...
    OLD_HUNGARIAN = ...
    SIGNWRITING = ...
    ADLAM = ...
    BHAIKSUKI = ...
    MARCHEN = ...
    OSAGE = ...
    TANGUT = ...
    NEWA = ...
    MASARAM_GONDI = ...
    NUSHU = ...
    SOYOMBO = ...
    ZANABAZAR_SQUARE = ...
    DOGRA = ...
    GUNJALA_GONDI = ...
    HANIFI_ROHINGYA = ...
    MAKASAR = ...
    MEDEFAIDRIN = ...
    OLD_SOGDIAN = ...
    SOGDIAN = ...
    ELYMAIC = ...
    NANDINAGARI = ...
    NYIAKENG_PUACHUE_HMONG = ...
    WANCHO = ...
    CHORASMIAN = ...
    DIVES_AKURU = ...
    KHITAN_SMALL_SCRIPT = ...
    YEZIDI = ...
    CYPRO_MINOAN = ...
    OLD_UYGHUR = ...
    TANGSA = ...
    TOTO = ...
    VITHKUQI = ...
    MATH = ...
    KAWI = ...
    NAG_MUNDARI = ...
    INVALID = ...

class style_tag_t(GObject.GEnum): 
    ITALIC = ...
    OPTICAL_SIZE = ...
    SLANT_ANGLE = ...
    SLANT_RATIO = ...
    WIDTH = ...
    WEIGHT = ...

class unicode_combining_class_t(GObject.GEnum): 
    NOT_REORDERED = ...
    OVERLAY = ...
    NUKTA = ...
    KANA_VOICING = ...
    VIRAMA = ...
    CCC10 = ...
    CCC11 = ...
    CCC12 = ...
    CCC13 = ...
    CCC14 = ...
    CCC15 = ...
    CCC16 = ...
    CCC17 = ...
    CCC18 = ...
    CCC19 = ...
    CCC20 = ...
    CCC21 = ...
    CCC22 = ...
    CCC23 = ...
    CCC24 = ...
    CCC25 = ...
    CCC26 = ...
    CCC27 = ...
    CCC28 = ...
    CCC29 = ...
    CCC30 = ...
    CCC31 = ...
    CCC32 = ...
    CCC33 = ...
    CCC34 = ...
    CCC35 = ...
    CCC36 = ...
    CCC84 = ...
    CCC91 = ...
    CCC103 = ...
    CCC107 = ...
    CCC118 = ...
    CCC122 = ...
    CCC129 = ...
    CCC130 = ...
    CCC133 = ...
    ATTACHED_BELOW_LEFT = ...
    ATTACHED_BELOW = ...
    ATTACHED_ABOVE = ...
    ATTACHED_ABOVE_RIGHT = ...
    BELOW_LEFT = ...
    BELOW = ...
    BELOW_RIGHT = ...
    LEFT = ...
    RIGHT = ...
    ABOVE_LEFT = ...
    ABOVE = ...
    ABOVE_RIGHT = ...
    DOUBLE_BELOW = ...
    DOUBLE_ABOVE = ...
    IOTA_SUBSCRIPT = ...
    INVALID = ...

class unicode_general_category_t(GObject.GEnum): 
    CONTROL = ...
    FORMAT = ...
    UNASSIGNED = ...
    PRIVATE_USE = ...
    SURROGATE = ...
    LOWERCASE_LETTER = ...
    MODIFIER_LETTER = ...
    OTHER_LETTER = ...
    TITLECASE_LETTER = ...
    UPPERCASE_LETTER = ...
    SPACING_MARK = ...
    ENCLOSING_MARK = ...
    NON_SPACING_MARK = ...
    DECIMAL_NUMBER = ...
    LETTER_NUMBER = ...
    OTHER_NUMBER = ...
    CONNECT_PUNCTUATION = ...
    DASH_PUNCTUATION = ...
    CLOSE_PUNCTUATION = ...
    FINAL_PUNCTUATION = ...
    INITIAL_PUNCTUATION = ...
    OTHER_PUNCTUATION = ...
    OPEN_PUNCTUATION = ...
    CURRENCY_SYMBOL = ...
    MODIFIER_SYMBOL = ...
    MATH_SYMBOL = ...
    OTHER_SYMBOL = ...
    LINE_SEPARATOR = ...
    PARAGRAPH_SEPARATOR = ...
    SPACE_SEPARATOR = ...

