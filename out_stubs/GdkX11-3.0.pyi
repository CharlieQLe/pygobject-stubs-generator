from gi.repository import Gdk, xlib, cairo, Gdk, GdkPixbuf, Gio, Pango, cairo, xlib

def x11_atom_to_xatom(atom: Gdk.Atom) -> xlib.Atom: ...
def x11_atom_to_xatom_for_display(display: X11Display, atom: Gdk.Atom) -> xlib.Atom: ...
def x11_device_get_id(device: X11DeviceCore) -> int: ...
def x11_device_manager_lookup(device_manager: X11DeviceManagerCore, device_id: int) -> X11DeviceCore | None: ...
def x11_free_compound_text(ctext: int) -> None: ...
def x11_free_text_list(list: str) -> None: ...
def x11_get_default_root_xwindow() -> xlib.Window: ...
def x11_get_default_screen() -> int: ...
def x11_get_default_xdisplay() -> xlib.Display: ...
def x11_get_parent_relative_pattern() -> cairo.Pattern: ...
def x11_get_server_time(window: X11Window) -> int: ...
def x11_get_xatom_by_name(atom_name: str) -> xlib.Atom: ...
def x11_get_xatom_by_name_for_display(display: X11Display, atom_name: str) -> xlib.Atom: ...
def x11_get_xatom_name(xatom: xlib.Atom) -> str: ...
def x11_get_xatom_name_for_display(display: X11Display, xatom: xlib.Atom) -> str: ...
def x11_grab_server() -> None: ...
def x11_lookup_xdisplay(xdisplay: xlib.Display) -> X11Display: ...
def x11_register_standard_event_type(display: X11Display, event_base: int, n_events: int) -> None: ...
def x11_set_sm_client_id(sm_client_id: str | None) -> None: ...
def x11_ungrab_server() -> None: ...
def x11_xatom_to_atom(xatom: xlib.Atom) -> Gdk.Atom: ...
def x11_xatom_to_atom_for_display(display: X11Display, xatom: xlib.Atom) -> Gdk.Atom: ...

class X11AppLaunchContext(Gdk.AppLaunchContext): ...

class X11Cursor(Gdk.Cursor): 
    def get_xcursor(self) -> xlib.Cursor: ...
    def get_xdisplay(self) -> xlib.Display: ...

class X11DeviceCore(Gdk.Device): ...

class X11DeviceManagerCore(Gdk.DeviceManager): ...

class X11DeviceManagerXI2(X11DeviceManagerCore): ...

class X11DeviceXI2(Gdk.Device): ...

class X11Display(Gdk.Display): 
    @classmethod
    def get_glx_version(cls, display: Gdk.Display, major: int, minor: int) -> bool: ...
    def broadcast_startup_message(self, message_type: str) -> None: ...
    def error_trap_pop(self) -> int: ...
    def error_trap_pop_ignored(self) -> None: ...
    def error_trap_push(self) -> None: ...
    def get_startup_notification_id(self) -> str: ...
    def get_user_time(self) -> int: ...
    def get_xdisplay(self) -> xlib.Display: ...
    def grab(self) -> None: ...
    def set_cursor_theme(self, theme: str | None, size: int) -> None: ...
    def set_startup_notification_id(self, startup_id: str) -> None: ...
    def set_window_scale(self, scale: int) -> None: ...
    def string_to_compound_text(self, str: str, encoding: Gdk.Atom, format: int, ctext: list[int], length: int) -> int: ...
    def text_property_to_text_list(self, encoding: Gdk.Atom, format: int, text: int, length: int, list: str) -> int: ...
    def ungrab(self) -> None: ...
    def utf8_to_compound_text(self, str: str, encoding: Gdk.Atom, format: int, ctext: list[int], length: int) -> bool: ...

class X11DisplayManager(Gdk.DisplayManager): ...

class X11DragContext(Gdk.DragContext): ...

class X11GLContext(Gdk.GLContext): ...

class X11Keymap(Gdk.Keymap): 
    def get_group_for_state(self, state: int) -> int: ...
    def key_is_modifier(self, keycode: int) -> bool: ...

class X11Monitor(Gdk.Monitor): 
    @classmethod
    def get_output(cls, monitor: Gdk.Monitor) -> xlib.XID: ...

class X11Screen(Gdk.Screen): 
    def get_current_desktop(self) -> int: ...
    def get_monitor_output(self, monitor_num: int) -> xlib.XID: ...
    def get_number_of_desktops(self) -> int: ...
    def get_screen_number(self) -> int: ...
    def get_window_manager_name(self) -> str: ...
    def get_xscreen(self) -> xlib.Screen: ...
    def lookup_visual(self, xvisualid: xlib.VisualID) -> X11Visual: ...
    def supports_net_wm_hint(self, property: Gdk.Atom) -> bool: ...

class X11Visual(Gdk.Visual): 
    def get_xvisual(self) -> xlib.Visual: ...

class X11Window(Gdk.Window): 
    @classmethod
    def foreign_new_for_display(cls, display: X11Display, window: xlib.Window) -> Gdk.Window: ...
    @classmethod
    def lookup_for_display(cls, display: X11Display, window: xlib.Window) -> X11Window: ...
    def get_desktop(self) -> int: ...
    def get_xid(self) -> xlib.Window: ...
    def move_to_current_desktop(self) -> None: ...
    def move_to_desktop(self, desktop: int) -> None: ...
    def set_frame_extents(self, left: int, right: int, top: int, bottom: int) -> None: ...
    def set_frame_sync_enabled(self, frame_sync_enabled: bool) -> None: ...
    def set_hide_titlebar_when_maximized(self, hide_titlebar_when_maximized: bool) -> None: ...
    def set_theme_variant(self, variant: str) -> None: ...
    def set_user_time(self, timestamp: int) -> None: ...
    def set_utf8_property(self, name: str, value: str | None) -> None: ...

